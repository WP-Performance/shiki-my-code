{"version":3,"file":"node_modules_shiki_dist_langs_narrat_mjs.js","mappings":";;;;;;;;;;;;;AAAA,6BAA6B,mEAAmE,wBAAwB,IAAI,0BAA0B,mBAAmB,cAAc,eAAe,yEAAyE,IAAI,uEAAuE,IAAI,+FAA+F,IAAI,gFAAgF,IAAI,8FAA8F,IAAI,6EAA6E,IAAI,uHAAuH,IAAI,2FAA2F,IAAI,+IAA+I,IAAI,0EAA0E,IAAI,6EAA6E,IAAI,+GAA+G,IAAI,iJAAiJ,IAAI,iMAAiM,GAAG,gBAAgB,eAAe,qDAAqD,GAAG,kBAAkB,eAAe,wBAAwB,IAAI,wBAAwB,IAAI,yBAAyB,IAAI,0BAA0B,IAAI,uBAAuB,IAAI,gCAAgC,GAAG,qBAAqB,eAAe,gEAAgE,GAAG,gBAAgB,eAAe,qEAAqE,IAAI,8DAA8D,IAAI,kFAAkF,IAAI,2EAA2E,IAAI,2FAA2F,GAAG,iBAAiB,eAAe,0FAA0F,IAAI,6EAA6E,GAAG,wBAAwB,mCAAmC,OAAO,oCAAoC,iCAAiC,OAAO,qCAAqC,6CAA6C,0BAA0B,GAAG,kBAAkB,eAAe,0DAA0D,IAAI,gEAAgE,IAAI,kEAAkE,IAAI,gEAAgE,IAAI,0EAA0E,GAAG,eAAe,gFAAgF,8DAA8D,IAAI,YAAY,sBAAsB,OAAO,uCAAuC,WAAW,oBAAoB,OAAO,+CAA+C,gDAAgD,0BAA0B,IAAI,6BAA6B,GAAG,KAAK,oDAAoD;AAC/wH;AACA;AACA;;AAE6B","sources":["webpack://shiki-my-code/./node_modules/shiki/dist/langs/narrat.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Narrat Language\", \"name\": \"narrat\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#expression\" }], \"repository\": { \"commands\": { \"patterns\": [{ \"match\": \"\\\\b(set|var)\\\\b\", \"name\": \"keyword.commands.variables.narrat\" }, { \"match\": \"\\\\b(talk|think)\\\\b\", \"name\": \"keyword.commands.text.narrat\" }, { \"match\": \"\\\\b(jump|run|wait|return|save|save_prompt)\", \"name\": \"keyword.commands.flow.narrat\" }, { \"match\": \"\\\\b(log|clear_dialog)\\\\b\", \"name\": \"keyword.commands.helpers.narrat\" }, { \"match\": \"\\\\b(set_screen|empty_layer|set_button)\", \"name\": \"keyword.commands.screens.narrat\" }, { \"match\": \"\\\\b(play|pause|stop)\\\\b\", \"name\": \"keyword.commands.audio.narrat\" }, { \"match\": \"\\\\b(notify|enable_notifications|disable_notifications)\\\\b\", \"name\": \"keyword.commands.notifications.narrat\" }, { \"match\": \"\\\\b(set_stat|get_stat_value|add_stat)\", \"name\": \"keyword.commands.stats.narrat\" }, { \"match\": \"\\\\b(neg|abs|random|random_float|random_from_args|min|max|clamp|floor|round|ceil|sqrt|^)\\\\b\", \"name\": \"keyword.commands.math.narrat\" }, { \"match\": \"\\\\b(concat|join)\\\\b\", \"name\": \"keyword.commands.string.narrat\" }, { \"match\": \"\\\\b(text_field)\\\\b\", \"name\": \"keyword.commands.text_field.narrat\" }, { \"match\": \"\\\\b(add_level|set_level|add_xp|roll|get_level|get_xp)\\\\b\", \"name\": \"keyword.commands.skills.narrat\" }, { \"match\": \"\\\\b(add_item|remove_item|enable_interaction|disable_interaction|has_item?|item_amount?)\", \"name\": \"keyword.commands.inventory.narrat\" }, { \"match\": \"\\\\b(start_quest|start_objective|complete_objective|complete_quest|quest_started?|objective_started?|quest_completed?|objective_completed?)\", \"name\": \"keyword.commands.quests.narrat\" }] }, \"comments\": { \"patterns\": [{ \"match\": \"\\\\/\\\\/.*$\", \"name\": \"comment.line.narrat\" }] }, \"expression\": { \"patterns\": [{ \"include\": \"#keywords\" }, { \"include\": \"#commands\" }, { \"include\": \"#operators\" }, { \"include\": \"#primitives\" }, { \"include\": \"#strings\" }, { \"include\": \"#paren-expression\" }] }, \"interpolation\": { \"patterns\": [{ \"match\": \"(\\\\w|\\\\.)+\", \"name\": \"variable.interpolation.narrat\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(if|else|choice)\\\\b\", \"name\": \"keyword.control.narrat\" }, { \"match\": \"\\\\$[\\\\w|\\\\.]+\\\\b\", \"name\": \"variable.value.narrat\" }, { \"match\": \"(?x)\\n^\\\\w+\\n(?=(\\\\s|\\\\w)*:)\\n\", \"name\": \"entity.name.function.narrat\" }, { \"match\": \"(?x)\\n^\\\\w+\\n(?!(\\\\s|\\\\w)*:)\\n\", \"name\": \"invalid.label.narrat\" }, { \"match\": \"(?<=\\\\w)[^^](\\\\b\\\\w+\\\\b)(?=(\\\\s|\\\\w)*:)\", \"name\": \"entity.other.attribute-name\" }] }, \"operators\": { \"patterns\": [{ \"match\": \"(&&|\\\\|\\\\||!=|==|>=|<=|<|>|!|\\\\?)\\\\s\", \"name\": \"keyword.operator.logic.narrat\" }, { \"match\": \"(\\\\+|-|\\\\*|\\\\/)\\\\s\", \"name\": \"keyword.operator.arithmetic.narrat\" }] }, \"paren-expression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.paren.open\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.paren.close\" } }, \"name\": \"expression.group\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"primitives\": { \"patterns\": [{ \"match\": \"\\\\b\\\\d+\\\\b\", \"name\": \"constant.numeric.narrat\" }, { \"match\": \"\\\\btrue\\\\b\", \"name\": \"constant.language.true.narrat\" }, { \"match\": \"\\\\bfalse\\\\b\", \"name\": \"constant.language.false.narrat\" }, { \"match\": \"\\\\bnull\\\\b\", \"name\": \"constant.language.null.narrat\" }, { \"match\": \"\\\\bundefined\\\\b\", \"name\": \"constant.language.undefined.narrat\" }] }, \"strings\": { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.narrat\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.narrat\" }, { \"begin\": \"%{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.template.open\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.template.close.narrat\" } }, \"name\": \"expression.template\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#interpolation\" }] }] } }, \"scopeName\": \"source.narrat\", \"aliases\": [\"nar\"] });\nvar narrat = [\n  lang\n];\n\nexport { narrat as default };\n"],"names":[],"sourceRoot":""}