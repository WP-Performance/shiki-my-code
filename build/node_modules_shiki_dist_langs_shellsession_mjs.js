"use strict";
(self["webpackChunkshiki_my_code"] = self["webpackChunkshiki_my_code"] || []).push([["node_modules_shiki_dist_langs_shellsession_mjs"],{

/***/ "./node_modules/shiki/dist/langs/shellsession.mjs":
/*!********************************************************!*\
  !*** ./node_modules/shiki/dist/langs/shellsession.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ shellsession)
/* harmony export */ });
/* harmony import */ var _shellscript_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shellscript.mjs */ "./node_modules/shiki/dist/langs/shellscript.mjs");


const lang = Object.freeze({ "displayName": "Shell Session", "fileTypes": ["sh-session"], "name": "shellsession", "patterns": [{ "captures": { "1": { "name": "entity.other.prompt-prefix.shell-session" }, "2": { "name": "punctuation.separator.prompt.shell-session" }, "3": { "name": "source.shell", "patterns": [{ "include": "source.shell" }] } }, "match": "(?x) ^ (?: ( (?:\\(\\S+\\)\\s*)? (?: sh\\S*?                       | \\w+\\S+[@:]\\S+(?:\\s+\\S+)? | \\[\\S+?[@:][^\\n]+?\\].*? ) ) \\s* )? ( [>$#%\u276F\u279C] | \\p{Greek} ) \\s+ (.*) $" }, { "match": "^.+$", "name": "meta.output.shell-session" }], "scopeName": "text.shell-session", "embeddedLangs": ["shellscript"], "aliases": ["console"] });
var shellsession = [
  ..._shellscript_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
  lang
];




/***/ })

}]);
//# sourceMappingURL=node_modules_shiki_dist_langs_shellsession_mjs.js.map