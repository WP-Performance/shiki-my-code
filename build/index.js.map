{"version":3,"file":"index.js","mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,wDAAwD,IAAI;AAC5D;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAS;AACvC;AACA,8BAA8B,iDAAS;AACvC;AACA,8BAA8B,iDAAS;AACvC;AACA;AACA;AACA;AACA;AACA,0DAA0D,IAAI,GAAG,MAAM,UAAU;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA,iBAAiB;AACjB,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,iBAAiB;AACjB,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,iBAAiB;AACjB,OAAO;AACP,MAAM;AACN;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qFAAqF;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,sBAAsB,OAAO;AAC7B,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB,EAAE,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAS;AACjC;AACA,yBAAyB,iDAAS;AAClC;AACA,yBAAyB,iDAAS;AAClC;AACA,yBAAyB,iDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,6CAA6C,EAAE,WAAW,EAAE,YAAY,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY,EAAE,YAAY,EAAE,MAAM;AACzD;AACA;AACA;AACA,uBAAuB,YAAY,EAAE,YAAY;AACjD;AACA;AACA;AACA,uBAAuB;AACvB,6BAA6B,EAAE,EAAE,EAAE;AACnC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD,YAAY,mEAAmE;AAC/E;AACA,+CAA+C,mCAAmC;AAClF,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA,4DAA4D,0BAA0B,uCAAuC,cAAc;AAC3I;AACA;AACA,yDAAyD,2BAA2B,oCAAoC,UAAU;AAClI;AACA;AACA;AACA;AACA,yDAAyD;AACzD,YAAY,mEAAmE;AAC/E;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAsD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,cAAc,kDAAO;AACrB;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,0DAA0D,+DAAoB;AAC9E,8BAA8B,+DAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAsD;AAC1E;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA,0FAA0F,aAAa;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,oGAAoG;AACjJ;AACA;AACA,iBAAiB,4BAA4B,uGAAuG;AACpJ,oCAAoC,qCAAqC;AACzE,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,IAAI;AACpG;AACA;AACA,kCAAkC,EAAE,OAAO,GAAG,MAAM;AACpD;AACA,kCAAkC,OAAO,GAAG,MAAM;AAClD;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,EAAE,iBAAiB,oBAAoB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,kBAAkB,kBAAkB,uBAAuB;AACvI;AACA,4EAA4E,kBAAkB,SAAS,QAAQ,UAAU,YAAY;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA,kEAAkE,2BAA2B,IAAI,wBAAwB;AACzH,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,kCAAkC;AAClC,wDAAwD,2BAA2B,MAAM,2BAA2B;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,aAAa,sDAAsD,2BAA2B;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,iCAAiC;AACvH;AACA,oFAAoF,+BAA+B;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,UAAU,wCAAwC;AAClD,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD,4DAA4D,YAAY,QAAQ,WAAW;AAC3F;AACA,8EAA8E;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,8CAA8C,gBAAgB;AACnG;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,6BAA6B,oCAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,iDAAS;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,0BAA0B;AACvC,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,YAAY;AACvB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,aAAa;AACxB;;AAEA;AACA,aAAa,kCAAkC;AAC/C,aAAa,8BAA8B;AAC3C;;;AAGA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,aAAa,YAAY;AACzB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,WAAW,oBAAoB;AAC/B;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,kCAAkC;AAC/C,aAAa,8BAA8B;AAC3C;AACA,aAAa,wBAAwB;AACrC;AACA,aAAa,QAAQ;AACrB,cAAc,6BAA6B;AAC3C,cAAc,sDAAsD;AACpE,cAAc,QAAQ;AACtB,cAAc,YAAY;AAC1B,cAAc,eAAe;AAC7B;;;AAGA,gBAAgB;;AAEhB;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA,aAAa,YAAY;AACzB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe;AACf,CAAC;;AAED;AACA,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA,eAAe;AACf,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,MAAM;AACxaAAa,mCAAmC;AAChD;;;AAGA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,uCAAuC;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,yBAAyB;AACvC;AACA;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,UAAU;AACxB;AACA;;AAEA,gBAAgB;;AAEhB;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,yBAAyB;AACvC,WAAW,QAAQ;AACnB;AACA,WAAW,qCAAqC;AAChD;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,aAAa,SAAS;AACtB;AACA,aAAa,YAAY;AACzB;AACA,gBAAgB,SAAS;AACzB;AACA,gBAAgB,SAAS;AACzB;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,eAAe;AAC7B;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,cAAc,wEAAwE;AACtF;AACA;AACA,aAAa,mFAAmF;AAChG;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2DAA2D,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;AACA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChgDAAgD;AAChD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,8CAA8C;AAC9C,cAAc,SAAS;AACvB;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,uFAAuF;AACpG,aAAa,iCAAiC;AAC9C;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,sBAAsB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,4BAA4B;AACzC;;;AAGA;AACA;;AAEA,WAAW,oBAAoB;AAC/B;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA,aAAa,oBAAoB;AACjC;AACA,aAAa,oBAAoB;AACjC;AACA,aAAa,qBAAqB;AAClC;AACA,eAAe,gBAAgB,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC,aAAa,2BAA2B;AACxC;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,+BAA+B;AAC1C,aAAa;AACb;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,8BAA8B;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,qBAAqB;AAClC;AACA,aAAa,kCAAkC;AAC/C;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,SAAS;AACT;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC;AACA,aAAa,kCAAkC;AAC/C;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,qBAAqB;AAClC;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC;AACA,aAAa,6BAA6B;AAC1C;;;AAGA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACb,CAAC;;AAED;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;;AAEA;AACA,aAAa,sBAAsB;AACnC,aAAa,wBAAwB;AACrC,aAAa,4BAA4B;AACzC;AACA,aAAa,uCAAuC;AACpD;AACA,aAAa,sCAAsC;AACnD;;;AAGA,WAAW,SAAS;AACpB;;AAEA,WAAW,qBAAqB;AAChC;;AAEA,WAAW,cAAc;AACzB;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA,WAAW,4BAA4B;AACvC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA,WAAW,OAAO;AAClB;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,UAAU,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAA6D;AACrF,0CAA0C,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,uBAAuB,mDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mCAAmC,KAAK,KAAK;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC,KAAK,gBAAgB,gBAAgB,gCAAgC,KAAK,gBAAgB;AAClL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,gCAAgC,gBAAgB,6IAA6I;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEgtB;;;;;;;;;;;;;;;;;;;AClqLxqB;;AAExwDAAwD;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,GAAG,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB;AAC7E;AACA;AACA;AACA;AACA;AACA,kDAAkD,0BAA0B;AAC5E;AACA;AACA,gFAAgF,8DAA8D;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,wDAAwD;AACjI;AACA;AACA,0FAA0F,wDAAwD;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA,8DAA8D,2CAA2C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG;AACA;AACA;AACA;AACA;AACA,wFAAwF,2CAA2C;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,GAAG,oBAAoB;AACtG,kBAAkB,sBAAsB,GAAG,SAAS,IAAI,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,sCAAsC,uBAAuB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgiDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iDAAiD,0BAA0B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2CAA2C,WAAW;AACtD,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kJAAkJ;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbgCAAgC,IAAI,uCAAuC;AACzyDAAyD,SAAS;AAClsFAAsF,mBAAmB;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwE;;;;;;;;;;;;;;;AC9jGxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA,4CAA4C;AAC5C;AACA,iBAAiB;AACjB;AACA,IAAI;AACJ;AACA;AACA,yDAAyD,kDAAkD;AAC3G;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA,kDAAkD;AAClD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD,GAAG;AACH;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEka;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1bnX;AACiD;AAChC;AACnB;AACI;AACoC;AACvD;AACsC;;AAEpE,0CAA0C,wEAAyB;AACnE,EAAE,wDAAgB;AAClB,EAAE,sDAAa;AACf,EAAE,uDAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,wEAAyB;AAC7C;AACA;AACA;AACA;AACA;;AAE4N;;;;;;;;;;;;;;;AC7B5N;AACA,SAAS,6LAAoB;AAC7B;;AAE+B;;;;;;;;;;;;;;;;;;ACJ/B;AACA;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6OAAoC;AACxD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qdAAkC;AACtD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ymBAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,mgBAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,inFAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ozBAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8NAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8NAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ilBAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sMAAuB;AAC3C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ilBAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,yNAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kTAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wWAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oqBAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sMAAuB;AAC3C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ogBAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,mcAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wWAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,02BAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qVAAwC;AAC5D,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sPAAuC;AAC3D,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gTAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4TAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,mNAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,yNAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uTAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8hBAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8hBAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kSAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,yMAAwB;AAC5C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,ohBAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qgBAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8kCAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,whBAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oXAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sdAAqC;AACzD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gvBAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8RAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,iMAAwB;AAC5C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4SAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wbAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+SAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,spBAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8lDAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,mcAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gSAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ygBAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,glBAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mNAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8WAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,spBAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qpBAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kpBAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iMAAwB;AAC5C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,yNAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kuBAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,iSAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sMAAuB;AAC3C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,2gBAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wpCAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4yBAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kSAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,qSAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8NAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6TAAkC;AACtD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sNAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kbAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,yNAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wSAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qNAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,whCAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6OAAoC;AACxD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,8bAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8NAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,wRAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4uBAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,4MAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ilCAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0MAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sMAAuB;AAC3C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iMAAwB;AAC5C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,gNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,ozCAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,m4CAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6MAA4B;AAChD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+sGAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,kSAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,2RAAyB;AAC7C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+MAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA,oBAAoB,sNAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oMAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE+F;;;;;;;;;;;;;;;AC3vC/F,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,eAAe,EAAE,MAAM,IAAI,gCAAgC;AAC/E,kBAAkB,eAAe,EAAE,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEmC;;;;;;;;;;;;;;;;AC3OnC;AACA;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,8NAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,8NAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,yPAAwC;AAC5D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,sPAAuC;AAC3D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,kQAA2C;AAC/D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,sPAAuC;AAC3D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,mPAAsC;AAC1D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,sPAAuC;AAC3D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,uOAAkC;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,+PAA0C;AAC9D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,4PAAyC;AAC7D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,iRAAgD;AACpE,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,kQAA2C;AAC/D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,oRAAiD;AACrE,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,gPAAqC;AACzD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,qQAA4C;AAChE,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,wQAA6C;AACjE,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,kQAA2C;AAC/D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,8QAA+C;AACnE,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,sNAA+B;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,yNAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,2NAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,kNAA2B;AAC/C,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,uMAA0B;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,iOAAgC;AACpD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,gPAAqC;AACzD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,gPAAqC;AACzD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,oOAAiC;AACrD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,uOAAkC;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,wOAAqC;AACzD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,2OAAsC;AAC1D,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,uOAAkC;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,wNAA6B;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,6OAAoC;AACxD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,0OAAmC;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,6OAAoC;AACxD;AACA;AACA;;AAE4C;;;;;;;;;;;;;;;;;UChT5C;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UExFA;UACA;UACA;UACA;UACA","sources":["webpack://shiki-my-code/./node_modules/@wordpress/icons/build-module/library/code.js","webpack://shiki-my-code/./src/control.js","webpack://shiki-my-code/./src/edit.js","webpack://shiki-my-code/./src/index.js","webpack://shiki-my-code/./src/options.js","webpack://shiki-my-code/./src/panel.js","webpack://shiki-my-code/./src/style.scss","webpack://shiki-my-code/external window \"React\"","webpack://shiki-my-code/external window \"ReactJSXRuntime\"","webpack://shiki-my-code/external window [\"wp\",\"blockEditor\"]","webpack://shiki-my-code/external window [\"wp\",\"blocks\"]","webpack://shiki-my-code/external window [\"wp\",\"components\"]","webpack://shiki-my-code/external window [\"wp\",\"element\"]","webpack://shiki-my-code/external window [\"wp\",\"i18n\"]","webpack://shiki-my-code/external window [\"wp\",\"primitives\"]","webpack://shiki-my-code/./node_modules/@shikijs/core/dist/index.mjs","webpack://shiki-my-code/./node_modules/@shikijs/core/dist/textmate.mjs","webpack://shiki-my-code/./node_modules/@shikijs/core/dist/types.mjs","webpack://shiki-my-code/./node_modules/@shikijs/transformers/dist/index.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/bundle-full.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/chunks/wasm-dynamic.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/langs.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/theme-css-variables.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/themes.mjs","webpack://shiki-my-code/webpack/bootstrap","webpack://shiki-my-code/webpack/runtime/chunk loaded","webpack://shiki-my-code/webpack/runtime/compat get default export","webpack://shiki-my-code/webpack/runtime/define property getters","webpack://shiki-my-code/webpack/runtime/ensure chunk","webpack://shiki-my-code/webpack/runtime/get javascript chunk filename","webpack://shiki-my-code/webpack/runtime/get mini-css chunk filename","webpack://shiki-my-code/webpack/runtime/global","webpack://shiki-my-code/webpack/runtime/hasOwnProperty shorthand","webpack://shiki-my-code/webpack/runtime/load script","webpack://shiki-my-code/webpack/runtime/make namespace object","webpack://shiki-my-code/webpack/runtime/publicPath","webpack://shiki-my-code/webpack/runtime/jsonp chunk loading","webpack://shiki-my-code/webpack/before-startup","webpack://shiki-my-code/webpack/startup","webpack://shiki-my-code/webpack/after-startup"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst code = /*#__PURE__*/_jsx(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M20.8 10.7l-4.3-4.3-1.1 1.1 4.3 4.3c.1.1.1.3 0 .4l-4.3 4.3 1.1 1.1 4.3-4.3c.7-.8.7-1.9 0-2.6zM4.2 11.8l4.3-4.3-1-1-4.3 4.3c-.7.7-.7 1.8 0 2.5l4.3 4.3 1.1-1.1-4.3-4.3c-.2-.1-.2-.3-.1-.4z\"\n  })\n});\nexport default code;\n//# sourceMappingURL=code.js.map","import {__} from '@wordpress/i18n';\nimport {\n  BlockControls,\n} from '@wordpress/block-editor';\nimport {\n  ToolbarGroup,\n  ToolbarButton,\n} from '@wordpress/components';\n\n\nconst Control = ({mode, setMode}) => <BlockControls>\n  <ToolbarGroup>\n    <ToolbarButton\n      icon=\"edit\"\n      label={__('Edit', 'shiki-my-code')}\n      isActive={mode === 'edit'}\n      onClick={() =>\n        setMode('edit')\n      }\n    />\n    <ToolbarButton\n      icon=\"visibility\"\n      label={__('View', 'shiki-my-code')}\n      isActive={mode === 'view'}\n      onClick={() =>\n        setMode('view')\n      }\n    />\n  </ToolbarGroup>\n</BlockControls>\n\nexport default Control\n","import {__} from '@wordpress/i18n';\nimport {RichText, useBlockProps} from '@wordpress/block-editor';\nimport {createBlock, getDefaultBlockName} from '@wordpress/blocks';\nimport {useEffect, useState} from '@wordpress/element';\n// controls\nimport Panel from \"./panel\";\nimport Control from \"./control\";\n// shiki\nimport {codeToHtml} from \"shiki\";\nimport {\n    transformerNotationDiff,\n    transformerNotationHighlight,\n    transformerNotationFocus,\n    transformerNotationWordHighlight\n} from '@shikijs/transformers';\n\nimport './style.scss';\n\nexport default function CodeEdit({\n                                     attributes,\n                                     setAttributes,\n                                     onRemove,\n                                     insertBlocksAfter,\n                                     mergeBlocks,\n                                 }) {\n\n    const [mode, setMode] = useState('view')\n\n    useEffect(() => {\n        async function highlightCode(_content) {\n            const code = await codeToHtml(_content, {\n                lang: attributes.lang,\n                themes: {\n                    light: attributes.themeLight,\n                    dark: attributes.themeDark\n                },\n                transformers: [\n                    transformerNotationDiff(),\n                    transformerNotationHighlight(),\n                    transformerNotationFocus(),\n                    transformerNotationWordHighlight(),\n                ]\n            })\n            setAttributes({contentHighlight: code})\n        }\n\n        highlightCode(attributes.content)\n    }, [attributes.content, attributes.lang, attributes.themeLight, attributes.themeDark])\n\n    const blockProps = useBlockProps({\n        className: attributes.showNumber ? 'shiki-line-numbers' : '',\n    });\n    return (\n        <>\n            <Panel props={{attributes, setAttributes}}/>\n            <Control mode={mode} setMode={setMode}/>\n            {mode === 'edit' ? (\n                <pre {...blockProps}>\n            <RichText\n                tagName=\"code\"\n                identifier=\"content\"\n                value={attributes.content}\n                onChange={(content) => {\n                    setAttributes({content})\n                }}\n                allowedFormats={[]}\n                onRemove={onRemove}\n                onMerge={mergeBlocks}\n                placeholder={__('Write code…')}\n                aria-label={__('Code')}\n                preserveWhiteSpace\n                __unstablePastePlainText\n                __unstableOnSplitAtDoubleLineEnd={() =>\n                    insertBlocksAfter(createBlock(getDefaultBlockName()))\n                }\n            />\n\t\t</pre>\n            ) : (\n                <div\n                    {...blockProps}\n                    dangerouslySetInnerHTML={{__html: attributes.contentHighlight}}></div>\n            )}\n        </>\n    );\n}\n","import {registerBlockType} from '@wordpress/blocks';\nimport {createBlock} from '@wordpress/blocks';\nimport {code as icon} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n    icon,\n    transforms: {\n        from: [\n            {\n                type: 'block',\n                blocks: ['core/code'],\n                transform: ({content}) => {\n                    return createBlock('wpperformance/shiki-my-code', {\n                        content,\n                    });\n                },\n            },\n            {\n                type: 'block',\n                blocks: ['wp-performance/prism-my-code'],\n                transform: ({content}) => {\n                    return createBlock('wpperformance/shiki-my-code', {\n                        content,\n                    });\n                },\n            },\n        ]\n    },\n    edit: Edit,\n});\n","export const themes = {\n    \"dark\": [\n        {\n            \"value\": \"andromeeda\",\n            \"label\": \"Andromeeda\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"aurora-x\",\n            \"label\": \"Aurora X\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"ayu-dark\",\n            \"label\": \"Ayu Dark\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"catppuccin-frappe\",\n            \"label\": \"Catppuccin Frappé\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"catppuccin-macchiato\",\n            \"label\": \"Catppuccin Macchiato\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"catppuccin-mocha\",\n            \"label\": \"Catppuccin Mocha\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"dark-plus\",\n            \"label\": \"Dark Plus\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"dracula-soft\",\n            \"label\": \"Dracula Theme Soft\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"dracula\",\n            \"label\": \"Dracula Theme\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"everforest-dark\",\n            \"label\": \"Everforest Dark\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"github-dark-default\",\n            \"label\": \"GitHub Dark Default\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"github-dark-dimmed\",\n            \"label\": \"GitHub Dark Dimmed\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"github-dark-high-contrast\",\n            \"label\": \"GitHub Dark High Contrast\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"github-dark\",\n            \"label\": \"GitHub Dark\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"houston\",\n            \"label\": \"Houston\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"laserwave\",\n            \"label\": \"LaserWave\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"material-theme-darker\",\n            \"label\": \"Material Theme Darker\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"material-theme-ocean\",\n            \"label\": \"Material Theme Ocean\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"material-theme-palenight\",\n            \"label\": \"Material Theme Palenight\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"material-theme\",\n            \"label\": \"Material Theme\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"min-dark\",\n            \"label\": \"Min Dark\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"monokai\",\n            \"label\": \"Monokai\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"night-owl\",\n            \"label\": \"Night Owl\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"nord\",\n            \"label\": \"Nord\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"one-dark-pro\",\n            \"label\": \"One Dark Pro\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"poimandres\",\n            \"label\": \"Poimandres\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"red\",\n            \"label\": \"Red\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"rose-pine-moon\",\n            \"label\": \"Rosé Pine Moon\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"rose-pine\",\n            \"label\": \"Rosé Pine\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"slack-dark\",\n            \"label\": \"Slack Dark\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"solarized-dark\",\n            \"label\": \"Solarized Dark\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"synthwave-84\",\n            \"label\": \"Synthwave '84\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"tokyo-night\",\n            \"label\": \"Tokyo Night\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"vesper\",\n            \"label\": \"Vesper\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"vitesse-black\",\n            \"label\": \"Vitesse Black\",\n            \"type\": \"dark\"\n        },\n        {\n            \"value\": \"vitesse-dark\",\n            \"label\": \"Vitesse Dark\",\n            \"type\": \"dark\"\n        }\n    ],\n    \"light\": [\n        {\n            \"value\": \"catppuccin-latte\",\n            \"label\": \"Catppuccin Latte\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"everforest-light\",\n            \"label\": \"Everforest Light\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"github-light-default\",\n            \"label\": \"GitHub Light Default\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"github-light-high-contrast\",\n            \"label\": \"GitHub Light High Contrast\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"github-light\",\n            \"label\": \"GitHub Light\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"light-plus\",\n            \"label\": \"Light Plus\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"material-theme-lighter\",\n            \"label\": \"Material Theme Lighter\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"min-light\",\n            \"label\": \"Min Light\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"one-light\",\n            \"label\": \"One Light\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"rose-pine-dawn\",\n            \"label\": \"Rosé Pine Dawn\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"slack-ochin\",\n            \"label\": \"Slack Ochin\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"snazzy-light\",\n            \"label\": \"Snazzy Light\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"solarized-light\",\n            \"label\": \"Solarized Light\",\n            \"type\": \"light\"\n        },\n        {\n            \"value\": \"vitesse-light\",\n            \"label\": \"Vitesse Light\",\n            \"type\": \"light\"\n        }\n    ]\n}\n\nexport const languages =\n    [\n        {\n            value: 'text',\n            label: 'Text',\n        },\n        {\n            \"value\": \"abap\",\n            \"label\": \"ABAP\"\n        },\n        {\n            \"value\": \"actionscript-3\",\n            \"label\": \"ActionScript\"\n        },\n        {\n            \"value\": \"ada\",\n            \"label\": \"Ada\"\n        },\n        {\n            \"value\": \"angular-expression\",\n            \"label\": \"angular-expression\"\n        },\n        {\n            \"value\": \"angular-html\",\n            \"label\": \"Angular HTML\"\n        },\n        {\n            \"value\": \"angular-inline-style\",\n            \"label\": \"angular-inline-style\"\n        },\n        {\n            \"value\": \"angular-inline-template\",\n            \"label\": \"angular-inline-template\"\n        },\n        {\n            \"value\": \"angular-let-declaration\",\n            \"label\": \"angular-let-declaration\"\n        },\n        {\n            \"value\": \"angular-template-blocks\",\n            \"label\": \"angular-template-blocks\"\n        },\n        {\n            \"value\": \"angular-template\",\n            \"label\": \"angular-template\"\n        },\n        {\n            \"value\": \"angular-ts\",\n            \"label\": \"Angular TypeScript\"\n        },\n        {\n            \"value\": \"apache\",\n            \"label\": \"Apache Conf\"\n        },\n        {\n            \"value\": \"apex\",\n            \"label\": \"Apex\"\n        },\n        {\n            \"value\": \"apl\",\n            \"label\": \"APL\"\n        },\n        {\n            \"value\": \"applescript\",\n            \"label\": \"AppleScript\"\n        },\n        {\n            \"value\": \"ara\",\n            \"label\": \"Ara\"\n        },\n        {\n            \"value\": \"asciidoc\",\n            \"label\": \"AsciiDoc\"\n        },\n        {\n            \"value\": \"asm\",\n            \"label\": \"Assembly\"\n        },\n        {\n            \"value\": \"astro\",\n            \"label\": \"Astro\"\n        },\n        {\n            \"value\": \"awk\",\n            \"label\": \"AWK\"\n        },\n        {\n            \"value\": \"ballerina\",\n            \"label\": \"Ballerina\"\n        },\n        {\n            \"value\": \"bat\",\n            \"label\": \"Batch File\"\n        },\n        {\n            \"value\": \"beancount\",\n            \"label\": \"Beancount\"\n        },\n        {\n            \"value\": \"berry\",\n            \"label\": \"Berry\"\n        },\n        {\n            \"value\": \"bibtex\",\n            \"label\": \"BibTeX\"\n        },\n        {\n            \"value\": \"bicep\",\n            \"label\": \"Bicep\"\n        },\n        {\n            \"value\": \"blade\",\n            \"label\": \"Blade\"\n        },\n        {\n            \"value\": \"c\",\n            \"label\": \"C\"\n        },\n        {\n            \"value\": \"cadence\",\n            \"label\": \"Cadence\"\n        },\n        {\n            \"value\": \"clarity\",\n            \"label\": \"Clarity\"\n        },\n        {\n            \"value\": \"clojure\",\n            \"label\": \"Clojure\"\n        },\n        {\n            \"value\": \"cmake\",\n            \"label\": \"CMake\"\n        },\n        {\n            \"value\": \"cobol\",\n            \"label\": \"COBOL\"\n        },\n        {\n            \"value\": \"codeowners\",\n            \"label\": \"CODEOWNERS\"\n        },\n        {\n            \"value\": \"codeql\",\n            \"label\": \"CodeQL\"\n        },\n        {\n            \"value\": \"coffee\",\n            \"label\": \"CoffeeScript\"\n        },\n        {\n            \"value\": \"common-lisp\",\n            \"label\": \"Common Lisp\"\n        },\n        {\n            \"value\": \"coq\",\n            \"label\": \"Coq\"\n        },\n        {\n            \"value\": \"cpp-macro\",\n            \"label\": \"C++\"\n        },\n        {\n            \"value\": \"cpp\",\n            \"label\": \"C++\"\n        },\n        {\n            \"value\": \"crystal\",\n            \"label\": \"Crystal\"\n        },\n        {\n            \"value\": \"csharp\",\n            \"label\": \"C#\"\n        },\n        {\n            \"value\": \"css\",\n            \"label\": \"CSS\"\n        },\n        {\n            \"value\": \"csv\",\n            \"label\": \"CSV\"\n        },\n        {\n            \"value\": \"cue\",\n            \"label\": \"CUE\"\n        },\n        {\n            \"value\": \"cypher\",\n            \"label\": \"Cypher\"\n        },\n        {\n            \"value\": \"d\",\n            \"label\": \"D\"\n        },\n        {\n            \"value\": \"dart\",\n            \"label\": \"Dart\"\n        },\n        {\n            \"value\": \"dax\",\n            \"label\": \"DAX\"\n        },\n        {\n            \"value\": \"desktop\",\n            \"label\": \"Desktop\"\n        },\n        {\n            \"value\": \"diff\",\n            \"label\": \"Diff\"\n        },\n        {\n            \"value\": \"docker\",\n            \"label\": \"Dockerfile\"\n        },\n        {\n            \"value\": \"dotenv\",\n            \"label\": \"dotEnv\"\n        },\n        {\n            \"value\": \"dream-maker\",\n            \"label\": \"Dream Maker\"\n        },\n        {\n            \"value\": \"edge\",\n            \"label\": \"Edge\"\n        },\n        {\n            \"value\": \"elixir\",\n            \"label\": \"Elixir\"\n        },\n        {\n            \"value\": \"elm\",\n            \"label\": \"Elm\"\n        },\n        {\n            \"value\": \"emacs-lisp\",\n            \"label\": \"Emacs Lisp\"\n        },\n        {\n            \"value\": \"erb\",\n            \"label\": \"ERB\"\n        },\n        {\n            \"value\": \"erlang\",\n            \"label\": \"Erlang\"\n        },\n        {\n            \"value\": \"es-tag-css\",\n            \"label\": \"es-tag-css\"\n        },\n        {\n            \"value\": \"es-tag-glsl\",\n            \"label\": \"es-tag-glsl\"\n        },\n        {\n            \"value\": \"es-tag-html\",\n            \"label\": \"es-tag-html\"\n        },\n        {\n            \"value\": \"es-tag-sql\",\n            \"label\": \"es-tag-sql\"\n        },\n        {\n            \"value\": \"es-tag-xml\",\n            \"label\": \"es-tag-xml\"\n        },\n        {\n            \"value\": \"fennel\",\n            \"label\": \"Fennel\"\n        },\n        {\n            \"value\": \"fish\",\n            \"label\": \"Fish\"\n        },\n        {\n            \"value\": \"fluent\",\n            \"label\": \"Fluent\"\n        },\n        {\n            \"value\": \"fortran-fixed-form\",\n            \"label\": \"Fortran (Fixed Form)\"\n        },\n        {\n            \"value\": \"fortran-free-form\",\n            \"label\": \"Fortran (Free Form)\"\n        },\n        {\n            \"value\": \"fsharp\",\n            \"label\": \"F#\"\n        },\n        {\n            \"value\": \"gdresource\",\n            \"label\": \"GDResource\"\n        },\n        {\n            \"value\": \"gdscript\",\n            \"label\": \"GDScript\"\n        },\n        {\n            \"value\": \"gdshader\",\n            \"label\": \"GDShader\"\n        },\n        {\n            \"value\": \"genie\",\n            \"label\": \"Genie\"\n        },\n        {\n            \"value\": \"gherkin\",\n            \"label\": \"Gherkin\"\n        },\n        {\n            \"value\": \"git-commit\",\n            \"label\": \"Git Commit Message\"\n        },\n        {\n            \"value\": \"git-rebase\",\n            \"label\": \"Git Rebase Message\"\n        },\n        {\n            \"value\": \"gleam\",\n            \"label\": \"Gleam\"\n        },\n        {\n            \"value\": \"glimmer-js\",\n            \"label\": \"Glimmer JS\"\n        },\n        {\n            \"value\": \"glimmer-ts\",\n            \"label\": \"Glimmer TS\"\n        },\n        {\n            \"value\": \"glsl\",\n            \"label\": \"GLSL\"\n        },\n        {\n            \"value\": \"gnuplot\",\n            \"label\": \"Gnuplot\"\n        },\n        {\n            \"value\": \"go\",\n            \"label\": \"Go\"\n        },\n        {\n            \"value\": \"graphql\",\n            \"label\": \"GraphQL\"\n        },\n        {\n            \"value\": \"groovy\",\n            \"label\": \"Groovy\"\n        },\n        {\n            \"value\": \"hack\",\n            \"label\": \"Hack\"\n        },\n        {\n            \"value\": \"haml\",\n            \"label\": \"Ruby Haml\"\n        },\n        {\n            \"value\": \"handlebars\",\n            \"label\": \"Handlebars\"\n        },\n        {\n            \"value\": \"haskell\",\n            \"label\": \"Haskell\"\n        },\n        {\n            \"value\": \"haxe\",\n            \"label\": \"Haxe\"\n        },\n        {\n            \"value\": \"hcl\",\n            \"label\": \"HashiCorp HCL\"\n        },\n        {\n            \"value\": \"hjson\",\n            \"label\": \"Hjson\"\n        },\n        {\n            \"value\": \"hlsl\",\n            \"label\": \"HLSL\"\n        },\n        {\n            \"value\": \"html-derivative\",\n            \"label\": \"HTML (Derivative)\"\n        },\n        {\n            \"value\": \"html\",\n            \"label\": \"HTML\"\n        },\n        {\n            \"value\": \"http\",\n            \"label\": \"HTTP\"\n        },\n        {\n            \"value\": \"hxml\",\n            \"label\": \"HXML\"\n        },\n        {\n            \"value\": \"hy\",\n            \"label\": \"Hy\"\n        },\n        {\n            \"value\": \"imba\",\n            \"label\": \"Imba\"\n        },\n        {\n            \"value\": \"ini\",\n            \"label\": \"INI\"\n        },\n        {\n            \"value\": \"java\",\n            \"label\": \"Java\"\n        },\n        {\n            \"value\": \"javascript\",\n            \"label\": \"JavaScript\"\n        },\n        {\n            \"value\": \"jinja-html\",\n            \"label\": \"jinja-html\"\n        },\n        {\n            \"value\": \"jinja\",\n            \"label\": \"Jinja\"\n        },\n        {\n            \"value\": \"jison\",\n            \"label\": \"Jison\"\n        },\n        {\n            \"value\": \"json\",\n            \"label\": \"JSON\"\n        },\n        {\n            \"value\": \"json5\",\n            \"label\": \"JSON5\"\n        },\n        {\n            \"value\": \"jsonc\",\n            \"label\": \"JSON with Comments\"\n        },\n        {\n            \"value\": \"jsonl\",\n            \"label\": \"JSON Lines\"\n        },\n        {\n            \"value\": \"jsonnet\",\n            \"label\": \"Jsonnet\"\n        },\n        {\n            \"value\": \"jssm\",\n            \"label\": \"JSSM\"\n        },\n        {\n            \"value\": \"jsx\",\n            \"label\": \"JSX\"\n        },\n        {\n            \"value\": \"julia\",\n            \"label\": \"Julia\"\n        },\n        {\n            \"value\": \"kotlin\",\n            \"label\": \"Kotlin\"\n        },\n        {\n            \"value\": \"kusto\",\n            \"label\": \"Kusto\"\n        },\n        {\n            \"value\": \"latex\",\n            \"label\": \"LaTeX\"\n        },\n        {\n            \"value\": \"lean\",\n            \"label\": \"Lean 4\"\n        },\n        {\n            \"value\": \"less\",\n            \"label\": \"Less\"\n        },\n        {\n            \"value\": \"liquid\",\n            \"label\": \"Liquid\"\n        },\n        {\n            \"value\": \"log\",\n            \"label\": \"Log file\"\n        },\n        {\n            \"value\": \"logo\",\n            \"label\": \"Logo\"\n        },\n        {\n            \"value\": \"lua\",\n            \"label\": \"Lua\"\n        },\n        {\n            \"value\": \"luau\",\n            \"label\": \"Luau\"\n        },\n        {\n            \"value\": \"make\",\n            \"label\": \"Makefile\"\n        },\n        {\n            \"value\": \"markdown-vue\",\n            \"label\": \"markdown-vue\"\n        },\n        {\n            \"value\": \"markdown\",\n            \"label\": \"Markdown\"\n        },\n        {\n            \"value\": \"marko\",\n            \"label\": \"Marko\"\n        },\n        {\n            \"value\": \"matlab\",\n            \"label\": \"MATLAB\"\n        },\n        {\n            \"value\": \"mdc\",\n            \"label\": \"MDC\"\n        },\n        {\n            \"value\": \"mdx\",\n            \"label\": \"MDX\"\n        },\n        {\n            \"value\": \"mermaid\",\n            \"label\": \"Mermaid\"\n        },\n        {\n            \"value\": \"mojo\",\n            \"label\": \"Mojo\"\n        },\n        {\n            \"value\": \"move\",\n            \"label\": \"Move\"\n        },\n        {\n            \"value\": \"narrat\",\n            \"label\": \"Narrat Language\"\n        },\n        {\n            \"value\": \"nextflow\",\n            \"label\": \"Nextflow\"\n        },\n        {\n            \"value\": \"nginx\",\n            \"label\": \"Nginx\"\n        },\n        {\n            \"value\": \"nim\",\n            \"label\": \"Nim\"\n        },\n        {\n            \"value\": \"nix\",\n            \"label\": \"Nix\"\n        },\n        {\n            \"value\": \"nushell\",\n            \"label\": \"nushell\"\n        },\n        {\n            \"value\": \"objective-c\",\n            \"label\": \"Objective-C\"\n        },\n        {\n            \"value\": \"objective-cpp\",\n            \"label\": \"Objective-C++\"\n        },\n        {\n            \"value\": \"ocaml\",\n            \"label\": \"OCaml\"\n        },\n        {\n            \"value\": \"pascal\",\n            \"label\": \"Pascal\"\n        },\n        {\n            \"value\": \"perl\",\n            \"label\": \"Perl\"\n        },\n        {\n            \"value\": \"php\",\n            \"label\": \"PHP\"\n        },\n        {\n            \"value\": \"plsql\",\n            \"label\": \"PL/SQL\"\n        },\n        {\n            \"value\": \"po\",\n            \"label\": \"Gettext PO\"\n        },\n        {\n            \"value\": \"postcss\",\n            \"label\": \"PostCSS\"\n        },\n        {\n            \"value\": \"powerquery\",\n            \"label\": \"PowerQuery\"\n        },\n        {\n            \"value\": \"powershell\",\n            \"label\": \"PowerShell\"\n        },\n        {\n            \"value\": \"prisma\",\n            \"label\": \"Prisma\"\n        },\n        {\n            \"value\": \"prolog\",\n            \"label\": \"Prolog\"\n        },\n        {\n            \"value\": \"proto\",\n            \"label\": \"Protocol Buffer 3\"\n        },\n        {\n            \"value\": \"pug\",\n            \"label\": \"Pug\"\n        },\n        {\n            \"value\": \"puppet\",\n            \"label\": \"Puppet\"\n        },\n        {\n            \"value\": \"purescript\",\n            \"label\": \"PureScript\"\n        },\n        {\n            \"value\": \"python\",\n            \"label\": \"Python\"\n        },\n        {\n            \"value\": \"qml\",\n            \"label\": \"QML\"\n        },\n        {\n            \"value\": \"qmldir\",\n            \"label\": \"QML Directory\"\n        },\n        {\n            \"value\": \"qss\",\n            \"label\": \"Qt Style Sheets\"\n        },\n        {\n            \"value\": \"r\",\n            \"label\": \"R\"\n        },\n        {\n            \"value\": \"racket\",\n            \"label\": \"Racket\"\n        },\n        {\n            \"value\": \"raku\",\n            \"label\": \"Raku\"\n        },\n        {\n            \"value\": \"razor\",\n            \"label\": \"ASP.NET Razor\"\n        },\n        {\n            \"value\": \"reg\",\n            \"label\": \"Windows Registry Script\"\n        },\n        {\n            \"value\": \"regexp\",\n            \"label\": \"RegExp\"\n        },\n        {\n            \"value\": \"rel\",\n            \"label\": \"Rel\"\n        },\n        {\n            \"value\": \"riscv\",\n            \"label\": \"RISC-V\"\n        },\n        {\n            \"value\": \"rst\",\n            \"label\": \"reStructuredText\"\n        },\n        {\n            \"value\": \"ruby\",\n            \"label\": \"Ruby\"\n        },\n        {\n            \"value\": \"rust\",\n            \"label\": \"Rust\"\n        },\n        {\n            \"value\": \"sas\",\n            \"label\": \"SAS\"\n        },\n        {\n            \"value\": \"sass\",\n            \"label\": \"Sass\"\n        },\n        {\n            \"value\": \"scala\",\n            \"label\": \"Scala\"\n        },\n        {\n            \"value\": \"scheme\",\n            \"label\": \"Scheme\"\n        },\n        {\n            \"value\": \"scss\",\n            \"label\": \"SCSS\"\n        },\n        {\n            \"value\": \"shaderlab\",\n            \"label\": \"ShaderLab\"\n        },\n        {\n            \"value\": \"shellscript\",\n            \"label\": \"Shell\"\n        },\n        {\n            \"value\": \"shellsession\",\n            \"label\": \"Shell Session\"\n        },\n        {\n            \"value\": \"smalltalk\",\n            \"label\": \"Smalltalk\"\n        },\n        {\n            \"value\": \"solidity\",\n            \"label\": \"Solidity\"\n        },\n        {\n            \"value\": \"soy\",\n            \"label\": \"Closure Templates\"\n        },\n        {\n            \"value\": \"sparql\",\n            \"label\": \"SPARQL\"\n        },\n        {\n            \"value\": \"splunk\",\n            \"label\": \"Splunk Query Language\"\n        },\n        {\n            \"value\": \"sql\",\n            \"label\": \"SQL\"\n        },\n        {\n            \"value\": \"ssh-config\",\n            \"label\": \"SSH Config\"\n        },\n        {\n            \"value\": \"stata\",\n            \"label\": \"Stata\"\n        },\n        {\n            \"value\": \"stylus\",\n            \"label\": \"Stylus\"\n        },\n        {\n            \"value\": \"svelte\",\n            \"label\": \"Svelte\"\n        },\n        {\n            \"value\": \"swift\",\n            \"label\": \"Swift\"\n        },\n        {\n            \"value\": \"system-verilog\",\n            \"label\": \"SystemVerilog\"\n        },\n        {\n            \"value\": \"systemd\",\n            \"label\": \"Systemd Units\"\n        },\n        {\n            \"value\": \"tasl\",\n            \"label\": \"Tasl\"\n        },\n        {\n            \"value\": \"tcl\",\n            \"label\": \"Tcl\"\n        },\n        {\n            \"value\": \"templ\",\n            \"label\": \"Templ\"\n        },\n        {\n            \"value\": \"terraform\",\n            \"label\": \"Terraform\"\n        },\n        {\n            \"value\": \"tex\",\n            \"label\": \"TeX\"\n        },\n        {\n            \"value\": \"toml\",\n            \"label\": \"TOML\"\n        },\n        {\n            \"value\": \"ts-tags\",\n            \"label\": \"TypeScript with Tags\"\n        },\n        {\n            \"value\": \"tsv\",\n            \"label\": \"TSV\"\n        },\n        {\n            \"value\": \"tsx\",\n            \"label\": \"TSX\"\n        },\n        {\n            \"value\": \"turtle\",\n            \"label\": \"Turtle\"\n        },\n        {\n            \"value\": \"twig\",\n            \"label\": \"Twig\"\n        },\n        {\n            \"value\": \"typescript\",\n            \"label\": \"TypeScript\"\n        },\n        {\n            \"value\": \"typespec\",\n            \"label\": \"TypeSpec\"\n        },\n        {\n            \"value\": \"typst\",\n            \"label\": \"Typst\"\n        },\n        {\n            \"value\": \"v\",\n            \"label\": \"V\"\n        },\n        {\n            \"value\": \"vala\",\n            \"label\": \"Vala\"\n        },\n        {\n            \"value\": \"vb\",\n            \"label\": \"Visual Basic\"\n        },\n        {\n            \"value\": \"verilog\",\n            \"label\": \"Verilog\"\n        },\n        {\n            \"value\": \"vhdl\",\n            \"label\": \"VHDL\"\n        },\n        {\n            \"value\": \"viml\",\n            \"label\": \"Vim Script\"\n        },\n        {\n            \"value\": \"vue-directives\",\n            \"label\": \"vue-directives\"\n        },\n        {\n            \"value\": \"vue-html\",\n            \"label\": \"Vue HTML\"\n        },\n        {\n            \"value\": \"vue-interpolations\",\n            \"label\": \"vue-interpolations\"\n        },\n        {\n            \"value\": \"vue-sfc-style-variable-injection\",\n            \"label\": \"vue-sfc-style-variable-injection\"\n        },\n        {\n            \"value\": \"vue\",\n            \"label\": \"Vue\"\n        },\n        {\n            \"value\": \"vyper\",\n            \"label\": \"Vyper\"\n        },\n        {\n            \"value\": \"wasm\",\n            \"label\": \"WebAssembly\"\n        },\n        {\n            \"value\": \"wenyan\",\n            \"label\": \"Wenyan\"\n        },\n        {\n            \"value\": \"wgsl\",\n            \"label\": \"WGSL\"\n        },\n        {\n            \"value\": \"wikitext\",\n            \"label\": \"Wikitext\"\n        },\n        {\n            \"value\": \"wolfram\",\n            \"label\": \"Wolfram\"\n        },\n        {\n            \"value\": \"xml\",\n            \"label\": \"XML\"\n        },\n        {\n            \"value\": \"xsl\",\n            \"label\": \"XSL\"\n        },\n        {\n            \"value\": \"yaml\",\n            \"label\": \"YAML\"\n        },\n        {\n            \"value\": \"zenscript\",\n            \"label\": \"ZenScript\"\n        },\n        {\n            \"value\": \"zig\",\n            \"label\": \"Zig\"\n        }\n    ]\n\n","import {\n    PanelBody,\n    ToggleControl,\n    SelectControl,\n} from '@wordpress/components'\nimport {InspectorControls} from '@wordpress/block-editor'\nimport {__} from '@wordpress/i18n'\nimport {languages, themes} from './options'\n\nconst Panel = ({props}) => {\n    const {attributes, setAttributes} = props\n    const {lang, showNumber, themeLight, themeDark} = attributes\n    return (\n        <InspectorControls>\n            <PanelBody title={__('Lines numbers', 'shiki-my-code')}>\n                <ToggleControl\n                    label={__('show number lines', 'shiki-my-code')}\n                    checked={showNumber}\n                    onChange={() => setAttributes({showNumber: !showNumber})}\n                />\n            </PanelBody>\n            <PanelBody title={__('Language', 'shiki-my-code')}>\n                <SelectControl\n                    label={__('Language', 'shiki-my-code')}\n                    value={lang}\n                    options={languages}\n                    onChange={(lang) => setAttributes({lang})}\n                />\n            </PanelBody>\n            <PanelBody title={__('Theme', 'shiki-my-code')}>\n                <SelectControl\n                    label={__('Theme Light', 'shiki-my-code')}\n                    value={themeLight}\n                    options={themes['light']}\n                    onChange={(themeLight) => setAttributes({themeLight})}\n                /><SelectControl\n                label={__('Theme Dark', 'shiki-my-code')}\n                value={themeDark}\n                options={themes['dark']}\n                onChange={(themeDark) => setAttributes({themeDark})}\n            />\n            </PanelBody>\n            <PanelBody title={__('Highlight', 'shiki-my-code')}>\n                <div>\n                    <p>{__('Add this comment in your code for highlight', 'shiki-my-code')}</p>\n                    <p>\n                        <strong>{__('Notation Diff', 'shiki-my-code')}</strong>:<br/><code>//\n                        [!code --]</code> or <code>// [!code ++]</code>\n                    </p>\n                    <p>\n                        <strong>{__('Notation Highlight', 'shiki-my-code')}</strong>:<br/><code>//\n                        [!code highlight]</code> or <code>// [!code\n                        highlight:3]</code>\n                    </p>\n                    <p>\n                        <strong>{__('Word Highlight', 'shiki-my-code')}</strong>:<br/><code>//\n                        [!code word:hello]]</code> or <code>// [!code\n                        word:Hello:1]</code>\n                    </p>\n                    <p>\n                        <strong>{__('Notation Focus', 'shiki-my-code')}</strong>:<br/><code>//\n                        [!code focus]</code> or <code>// [!code focus:3]</code>\n                    </p>\n                </div>\n            </PanelBody>\n        </InspectorControls>\n    )\n}\n\nexport default Panel\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","import { INITIAL, StackElementMetadata, Registry as Registry$1, Theme } from './textmate.mjs';\nimport { FontStyle } from './types.mjs';\n\nfunction toArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Split a string into lines, each line preserves the line ending.\n */\nfunction splitLines(code, preserveEnding = false) {\n    const parts = code.split(/(\\r?\\n)/g);\n    let index = 0;\n    const lines = [];\n    for (let i = 0; i < parts.length; i += 2) {\n        const line = preserveEnding\n            ? parts[i] + (parts[i + 1] || '')\n            : parts[i];\n        lines.push([line, index]);\n        index += parts[i].length;\n        index += parts[i + 1]?.length || 0;\n    }\n    return lines;\n}\n/**\n * Check if the language is plaintext that is ignored by Shiki.\n *\n * Hard-coded plain text languages: `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isPlainLang(lang) {\n    return !lang || ['plaintext', 'txt', 'text', 'plain'].includes(lang);\n}\n/**\n * Check if the language is specially handled or bypassed by Shiki.\n *\n * Hard-coded languages: `ansi` and plaintexts like `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isSpecialLang(lang) {\n    return lang === 'ansi' || isPlainLang(lang);\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isNoneTheme(theme) {\n    return theme === 'none';\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isSpecialTheme(theme) {\n    return isNoneTheme(theme);\n}\n/**\n * Utility to append class to a hast node\n *\n * If the `property.class` is a string, it will be splitted by space and converted to an array.\n */\nfunction addClassToHast(node, className) {\n    if (!className)\n        return node;\n    node.properties ||= {};\n    node.properties.class ||= [];\n    if (typeof node.properties.class === 'string')\n        node.properties.class = node.properties.class.split(/\\s+/g);\n    if (!Array.isArray(node.properties.class))\n        node.properties.class = [];\n    const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n    for (const c of targets) {\n        if (c && !node.properties.class.includes(c))\n            node.properties.class.push(c);\n    }\n    return node;\n}\n/**\n * Split a token into multiple tokens by given offsets.\n *\n * The offsets are relative to the token, and should be sorted.\n */\nfunction splitToken(token, offsets) {\n    let lastOffset = 0;\n    const tokens = [];\n    for (const offset of offsets) {\n        if (offset > lastOffset) {\n            tokens.push({\n                ...token,\n                content: token.content.slice(lastOffset, offset),\n                offset: token.offset + lastOffset,\n            });\n        }\n        lastOffset = offset;\n    }\n    if (lastOffset < token.content.length) {\n        tokens.push({\n            ...token,\n            content: token.content.slice(lastOffset),\n            offset: token.offset + lastOffset,\n        });\n    }\n    return tokens;\n}\n/**\n * Split 2D tokens array by given breakpoints.\n */\nfunction splitTokens(tokens, breakpoints) {\n    const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints))\n        .sort((a, b) => a - b);\n    if (!sorted.length)\n        return tokens;\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            const breakpointsInToken = sorted\n                .filter(i => token.offset < i && i < token.offset + token.content.length)\n                .map(i => i - token.offset)\n                .sort((a, b) => a - b);\n            if (!breakpointsInToken.length)\n                return token;\n            return splitToken(token, breakpointsInToken);\n        });\n    });\n}\nfunction resolveColorReplacements(theme, options) {\n    const replacements = typeof theme === 'string' ? {} : { ...theme.colorReplacements };\n    const themeName = typeof theme === 'string' ? theme : theme.name;\n    for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n        if (typeof value === 'string')\n            replacements[key] = value;\n        else if (key === themeName)\n            Object.assign(replacements, value);\n    }\n    return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n    if (!color)\n        return color;\n    return replacements?.[color?.toLowerCase()] || color;\n}\nfunction getTokenStyleObject(token) {\n    const styles = {};\n    if (token.color)\n        styles.color = token.color;\n    if (token.bgColor)\n        styles['background-color'] = token.bgColor;\n    if (token.fontStyle) {\n        if (token.fontStyle & FontStyle.Italic)\n            styles['font-style'] = 'italic';\n        if (token.fontStyle & FontStyle.Bold)\n            styles['font-weight'] = 'bold';\n        if (token.fontStyle & FontStyle.Underline)\n            styles['text-decoration'] = 'underline';\n    }\n    return styles;\n}\nfunction stringifyTokenStyle(token) {\n    return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(';');\n}\n/**\n * Creates a converter between index and position in a code block.\n *\n * Overflow/underflow are unchecked.\n */\nfunction createPositionConverter(code) {\n    const lines = splitLines(code, true).map(([line]) => line);\n    function indexToPos(index) {\n        if (index === code.length) {\n            return {\n                line: lines.length - 1,\n                character: lines[lines.length - 1].length,\n            };\n        }\n        let character = index;\n        let line = 0;\n        for (const lineText of lines) {\n            if (character < lineText.length)\n                break;\n            character -= lineText.length;\n            line++;\n        }\n        return { line, character };\n    }\n    function posToIndex(line, character) {\n        let index = 0;\n        for (let i = 0; i < line; i++)\n            index += lines[i].length;\n        index += character;\n        return index;\n    }\n    return {\n        lines,\n        indexToPos,\n        posToIndex,\n    };\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B[\", position);\n  if (nextEscape !== -1) {\n    const nextClose = value.indexOf(\"m\", nextEscape);\n    return {\n      sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n      startPosition: nextEscape,\n      position: nextClose + 1\n    };\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence, index) {\n  let offset = 1;\n  const colorMode = sequence[index + offset++];\n  let color;\n  if (colorMode === \"2\") {\n    const rgb = [\n      sequence[index + offset++],\n      sequence[index + offset++],\n      sequence[index + offset]\n    ].map((x) => Number.parseInt(x));\n    if (rgb.length === 3 && !rgb.some((x) => Number.isNaN(x))) {\n      color = {\n        type: \"rgb\",\n        rgb\n      };\n    }\n  } else if (colorMode === \"5\") {\n    const colorIndex = Number.parseInt(sequence[index + offset]);\n    if (!Number.isNaN(colorIndex)) {\n      color = { type: \"table\", index: Number(colorIndex) };\n    }\n  }\n  return [offset, color];\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  for (let i = 0; i < sequence.length; i++) {\n    const code = sequence[i];\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n    const colorReplacements = resolveColorReplacements(theme, options);\n    const lines = splitLines(fileContents);\n    const colorPalette = createColorPalette(Object.fromEntries(namedColors.map(name => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`],\n    ])));\n    const parser = createAnsiSequenceParser();\n    return lines.map(line => parser.parse(line[0]).map((token) => {\n        let color;\n        let bgColor;\n        if (token.decorations.has('reverse')) {\n            color = token.background ? colorPalette.value(token.background) : theme.bg;\n            bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        }\n        else {\n            color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n            bgColor = token.background ? colorPalette.value(token.background) : undefined;\n        }\n        color = applyColorReplacements(color, colorReplacements);\n        bgColor = applyColorReplacements(bgColor, colorReplacements);\n        if (token.decorations.has('dim'))\n            color = dimColor(color);\n        let fontStyle = FontStyle.None;\n        if (token.decorations.has('bold'))\n            fontStyle |= FontStyle.Bold;\n        if (token.decorations.has('italic'))\n            fontStyle |= FontStyle.Italic;\n        if (token.decorations.has('underline'))\n            fontStyle |= FontStyle.Underline;\n        return {\n            content: token.value,\n            offset: line[1], // TODO: more accurate offset? might need to fork ansi-sequence-parser\n            color,\n            bgColor,\n            fontStyle,\n        };\n    }));\n}\n/**\n * Adds 50% alpha to a hex color string or the \"-dim\" postfix to a CSS variable\n */\nfunction dimColor(color) {\n    const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n    if (hexMatch) {\n        if (hexMatch[3]) {\n            // convert from #rrggbbaa to #rrggbb(aa/2)\n            const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2)\n                .toString(16)\n                .padStart(2, '0');\n            return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n        }\n        else if (hexMatch[2]) {\n            // convert from #rrggbb to #rrggbb80\n            return `#${hexMatch[1]}${hexMatch[2]}80`;\n        }\n        else {\n            // convert from #rgb to #rrggbb80\n            return `#${Array.from(hexMatch[1])\n                .map(x => `${x}${x}`)\n                .join('')}80`;\n        }\n    }\n    const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n    if (cssVarMatch)\n        return `var(${cssVarMatch[1]}-dim)`;\n    return color;\n}\n\nclass ShikiError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ShikiError';\n    }\n}\n\n/**\n * GrammarState is a special reference object that holds the state of a grammar.\n *\n * It's used to highlight code snippets that are part of the target language.\n */\nclass GrammarState {\n    _stack;\n    lang;\n    theme;\n    /**\n     * Static method to create a initial grammar state.\n     */\n    static initial(lang, theme) {\n        return new GrammarState(INITIAL, lang, theme);\n    }\n    constructor(_stack, lang, theme) {\n        this._stack = _stack;\n        this.lang = lang;\n        this.theme = theme;\n    }\n    get scopes() {\n        return getScopes(this._stack);\n    }\n    toJSON() {\n        return {\n            lang: this.lang,\n            theme: this.theme,\n            scopes: this.scopes,\n        };\n    }\n}\nfunction getScopes(stack) {\n    const scopes = [];\n    const visited = new Set();\n    function pushScope(stack) {\n        if (visited.has(stack))\n            return;\n        visited.add(stack);\n        const name = stack?.nameScopesList?.scopeName;\n        if (name)\n            scopes.push(name);\n        if (stack.parent)\n            pushScope(stack.parent);\n    }\n    pushScope(stack);\n    return scopes;\n}\nfunction getGrammarStack(state) {\n    if (!(state instanceof GrammarState))\n        throw new ShikiError('Invalid grammar state');\n    // @ts-expect-error _stack is private\n    return state._stack;\n}\n\n/**\n * Code to tokens, with a simple theme.\n */\nfunction codeToTokensBase(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlainLang(lang) || isNoneTheme(themeName))\n        return splitLines(code).map(line => [{ content: line[0], offset: line[1] }]);\n    const { theme, colorMap } = internal.setTheme(themeName);\n    if (lang === 'ansi')\n        return tokenizeAnsiWithTheme(theme, code, options);\n    const _grammar = internal.getLanguage(lang);\n    if (options.grammarState) {\n        if (options.grammarState.lang !== _grammar.name) {\n            throw new ShikiError(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n        }\n        if (options.grammarState.theme !== themeName) {\n            throw new ShikiError(`Grammar state theme \"${options.grammarState.theme}\" does not match highlight theme \"${themeName}\"`);\n        }\n    }\n    return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlainLang(lang) || isNoneTheme(themeName))\n        throw new ShikiError('Plain language does not have grammar state');\n    if (lang === 'ansi')\n        throw new ShikiError('ANSI language does not have grammar state');\n    const { theme, colorMap } = internal.setTheme(themeName);\n    const _grammar = internal.getLanguage(lang);\n    return new GrammarState(_tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack, _grammar.name, theme.name);\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    return _tokenizeWithTheme(code, grammar, theme, colorMap, options).tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    const colorReplacements = resolveColorReplacements(theme, options);\n    const { tokenizeMaxLineLength = 0, tokenizeTimeLimit = 500, } = options;\n    const lines = splitLines(code);\n    let stateStack = options.grammarState\n        ? getGrammarStack(options.grammarState)\n        : options.grammarContextCode != null\n            ? _tokenizeWithTheme(options.grammarContextCode, grammar, theme, colorMap, {\n                ...options,\n                grammarState: undefined,\n                grammarContextCode: undefined,\n            }).stateStack\n            : INITIAL;\n    let actual = [];\n    const final = [];\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const [line, lineOffset] = lines[i];\n        if (line === '') {\n            actual = [];\n            final.push([]);\n            continue;\n        }\n        // Do not attempt to tokenize if the line length is longer than the `tokenizationMaxLineLength`\n        if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n            actual = [];\n            final.push([{\n                    content: line,\n                    offset: lineOffset,\n                    color: '',\n                    fontStyle: 0,\n                }]);\n            continue;\n        }\n        let resultWithScopes;\n        let tokensWithScopes;\n        let tokensWithScopesIndex;\n        if (options.includeExplanation) {\n            resultWithScopes = grammar.tokenizeLine(line, stateStack);\n            tokensWithScopes = resultWithScopes.tokens;\n            tokensWithScopesIndex = 0;\n        }\n        const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n        const tokensLength = result.tokens.length / 2;\n        for (let j = 0; j < tokensLength; j++) {\n            const startIndex = result.tokens[2 * j];\n            const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n            if (startIndex === nextStartIndex)\n                continue;\n            const metadata = result.tokens[2 * j + 1];\n            const color = applyColorReplacements(colorMap[StackElementMetadata.getForeground(metadata)], colorReplacements);\n            const fontStyle = StackElementMetadata.getFontStyle(metadata);\n            const token = {\n                content: line.substring(startIndex, nextStartIndex),\n                offset: lineOffset + startIndex,\n                color,\n                fontStyle,\n            };\n            if (options.includeExplanation) {\n                const themeSettingsSelectors = [];\n                if (options.includeExplanation !== 'scopeName') {\n                    for (const setting of theme.settings) {\n                        let selectors;\n                        switch (typeof setting.scope) {\n                            case 'string':\n                                selectors = setting.scope.split(/,/).map(scope => scope.trim());\n                                break;\n                            case 'object':\n                                selectors = setting.scope;\n                                break;\n                            default:\n                                continue;\n                        }\n                        themeSettingsSelectors.push({\n                            settings: setting,\n                            selectors: selectors.map(selector => selector.split(/ /)),\n                        });\n                    }\n                }\n                token.explanation = [];\n                let offset = 0;\n                while (startIndex + offset < nextStartIndex) {\n                    const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n                    const tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);\n                    offset += tokenWithScopesText.length;\n                    token.explanation.push({\n                        content: tokenWithScopesText,\n                        scopes: options.includeExplanation === 'scopeName'\n                            ? explainThemeScopesNameOnly(tokenWithScopes.scopes)\n                            : explainThemeScopesFull(themeSettingsSelectors, tokenWithScopes.scopes),\n                    });\n                    tokensWithScopesIndex += 1;\n                }\n            }\n            actual.push(token);\n        }\n        final.push(actual);\n        actual = [];\n        stateStack = result.ruleStack;\n    }\n    return {\n        tokens: final,\n        stateStack,\n    };\n}\nfunction explainThemeScopesNameOnly(scopes) {\n    return scopes.map(scope => ({ scopeName: scope }));\n}\nfunction explainThemeScopesFull(themeSelectors, scopes) {\n    const result = [];\n    for (let i = 0, len = scopes.length; i < len; i++) {\n        const scope = scopes[i];\n        result[i] = {\n            scopeName: scope,\n            themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i)),\n        };\n    }\n    return result;\n}\nfunction matchesOne(selector, scope) {\n    return selector === scope\n        || (scope.substring(0, selector.length) === selector && scope[selector.length] === '.');\n}\nfunction matches(selectors, scope, parentScopes) {\n    if (!matchesOne(selectors[selectors.length - 1], scope))\n        return false;\n    let selectorParentIndex = selectors.length - 2;\n    let parentIndex = parentScopes.length - 1;\n    while (selectorParentIndex >= 0 && parentIndex >= 0) {\n        if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n            selectorParentIndex -= 1;\n        parentIndex -= 1;\n    }\n    if (selectorParentIndex === -1)\n        return true;\n    return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n    const result = [];\n    for (const { selectors, settings } of themeSettingsSelectors) {\n        for (const selectorPieces of selectors) {\n            if (matches(selectorPieces, scope, parentScopes)) {\n                result.push(settings);\n                break; // continue to the next theme settings\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Get tokens with multiple themes\n */\nfunction codeToTokensWithThemes(internal, code, options) {\n    const themes = Object.entries(options.themes)\n        .filter(i => i[1])\n        .map(i => ({ color: i[0], theme: i[1] }));\n    const tokens = syncThemesTokenization(...themes.map(t => codeToTokensBase(internal, code, {\n        ...options,\n        theme: t.theme,\n    })));\n    const mergedTokens = tokens[0]\n        .map((line, lineIdx) => line\n        .map((_token, tokenIdx) => {\n        const mergedToken = {\n            content: _token.content,\n            variants: {},\n            offset: _token.offset,\n        };\n        if ('includeExplanation' in options && options.includeExplanation) {\n            mergedToken.explanation = _token.explanation;\n        }\n        tokens.forEach((t, themeIdx) => {\n            const { content: _, explanation: __, offset: ___, ...styles } = t[lineIdx][tokenIdx];\n            mergedToken.variants[themes[themeIdx].color] = styles;\n        });\n        return mergedToken;\n    }));\n    return mergedTokens;\n}\n/**\n * Break tokens from multiple themes into same tokenization.\n *\n * For example, given two themes that tokenize `console.log(\"hello\")` as:\n *\n * - `console . log (\" hello \")` (6 tokens)\n * - `console .log ( \"hello\" )` (5 tokens)\n *\n * This function will return:\n *\n * - `console . log ( \" hello \" )` (8 tokens)\n * - `console . log ( \" hello \" )` (8 tokens)\n */\nfunction syncThemesTokenization(...themes) {\n    const outThemes = themes.map(() => []);\n    const count = themes.length;\n    for (let i = 0; i < themes[0].length; i++) {\n        const lines = themes.map(t => t[i]);\n        const outLines = outThemes.map(() => []);\n        outThemes.forEach((t, i) => t.push(outLines[i]));\n        const indexes = lines.map(() => 0);\n        const current = lines.map(l => l[0]);\n        while (current.every(t => t)) {\n            const minLength = Math.min(...current.map(t => t.content.length));\n            for (let n = 0; n < count; n++) {\n                const token = current[n];\n                if (token.content.length === minLength) {\n                    outLines[n].push(token);\n                    indexes[n] += 1;\n                    current[n] = lines[n][indexes[n]];\n                }\n                else {\n                    outLines[n].push({\n                        ...token,\n                        content: token.content.slice(0, minLength),\n                    });\n                    current[n] = {\n                        ...token,\n                        content: token.content.slice(minLength),\n                        offset: token.offset + minLength,\n                    };\n                }\n            }\n        }\n    }\n    return outThemes;\n}\n\n/**\n * High-level code-to-tokens API.\n *\n * It will use `codeToTokensWithThemes` or `codeToTokensBase` based on the options.\n */\nfunction codeToTokens(internal, code, options) {\n    let bg;\n    let fg;\n    let tokens;\n    let themeName;\n    let rootStyle;\n    if ('themes' in options) {\n        const { defaultColor = 'light', cssVariablePrefix = '--shiki-', } = options;\n        const themes = Object.entries(options.themes)\n            .filter(i => i[1])\n            .map(i => ({ color: i[0], theme: i[1] }))\n            .sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n        if (themes.length === 0)\n            throw new ShikiError('`themes` option must not be empty');\n        const themeTokens = codeToTokensWithThemes(internal, code, options);\n        if (defaultColor && !themes.find(t => t.color === defaultColor))\n            throw new ShikiError(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n        const themeRegs = themes.map(t => internal.getTheme(t.theme));\n        const themesOrder = themes.map(t => t.color);\n        tokens = themeTokens\n            .map(line => line.map(token => mergeToken(token, themesOrder, cssVariablePrefix, defaultColor)));\n        const themeColorReplacements = themes.map(t => resolveColorReplacements(t.theme, options));\n        fg = themes.map((t, idx) => (idx === 0 && defaultColor\n            ? ''\n            : `${cssVariablePrefix + t.color}:`) + (applyColorReplacements(themeRegs[idx].fg, themeColorReplacements[idx]) || 'inherit')).join(';');\n        bg = themes.map((t, idx) => (idx === 0 && defaultColor\n            ? ''\n            : `${cssVariablePrefix + t.color}-bg:`) + (applyColorReplacements(themeRegs[idx].bg, themeColorReplacements[idx]) || 'inherit')).join(';');\n        themeName = `shiki-themes ${themeRegs.map(t => t.name).join(' ')}`;\n        rootStyle = defaultColor ? undefined : [fg, bg].join(';');\n    }\n    else if ('theme' in options) {\n        const colorReplacements = resolveColorReplacements(options.theme, options);\n        tokens = codeToTokensBase(internal, code, options);\n        const _theme = internal.getTheme(options.theme);\n        bg = applyColorReplacements(_theme.bg, colorReplacements);\n        fg = applyColorReplacements(_theme.fg, colorReplacements);\n        themeName = _theme.name;\n    }\n    else {\n        throw new ShikiError('Invalid options, either `theme` or `themes` must be provided');\n    }\n    return {\n        tokens,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    };\n}\nfunction mergeToken(merged, variantsOrder, cssVariablePrefix, defaultColor) {\n    const token = {\n        content: merged.content,\n        explanation: merged.explanation,\n        offset: merged.offset,\n    };\n    const styles = variantsOrder.map(t => getTokenStyleObject(merged.variants[t]));\n    // Get all style keys, for themes that missing some style, we put `inherit` to override as needed\n    const styleKeys = new Set(styles.flatMap(t => Object.keys(t)));\n    const mergedStyles = styles.reduce((acc, cur, idx) => {\n        for (const key of styleKeys) {\n            const value = cur[key] || 'inherit';\n            if (idx === 0 && defaultColor) {\n                acc[key] = value;\n            }\n            else {\n                const keyName = key === 'color' ? '' : key === 'background-color' ? '-bg' : `-${key}`;\n                const varKey = cssVariablePrefix + variantsOrder[idx] + (key === 'color' ? '' : keyName);\n                if (acc[key])\n                    acc[key] += `;${varKey}:${value}`;\n                else\n                    acc[key] = `${varKey}:${value}`;\n            }\n        }\n        return acc;\n    }, {});\n    token.htmlStyle = defaultColor\n        ? stringifyTokenStyle(mergedStyles)\n        : Object.values(mergedStyles).join(';');\n    return token;\n}\n\n/**\n * A built-in transformer to add decorations to the highlighted code.\n */\nfunction transformerDecorations() {\n    const map = new WeakMap();\n    function getContext(shiki) {\n        if (!map.has(shiki.meta)) {\n            const converter = createPositionConverter(shiki.source);\n            function normalizePosition(p) {\n                if (typeof p === 'number') {\n                    if (p < 0 || p > shiki.source.length)\n                        throw new ShikiError(`Invalid decoration offset: ${p}. Code length: ${shiki.source.length}`);\n                    return {\n                        ...converter.indexToPos(p),\n                        offset: p,\n                    };\n                }\n                else {\n                    const line = converter.lines[p.line];\n                    if (line === undefined)\n                        throw new ShikiError(`Invalid decoration position ${JSON.stringify(p)}. Lines length: ${converter.lines.length}`);\n                    if (p.character < 0 || p.character > line.length)\n                        throw new ShikiError(`Invalid decoration position ${JSON.stringify(p)}. Line ${p.line} length: ${line.length}`);\n                    return {\n                        ...p,\n                        offset: converter.posToIndex(p.line, p.character),\n                    };\n                }\n            }\n            const decorations = (shiki.options.decorations || [])\n                .map((d) => ({\n                ...d,\n                start: normalizePosition(d.start),\n                end: normalizePosition(d.end),\n            }));\n            verifyIntersections(decorations);\n            map.set(shiki.meta, {\n                decorations,\n                converter,\n                source: shiki.source,\n            });\n        }\n        return map.get(shiki.meta);\n    }\n    function verifyIntersections(items) {\n        for (let i = 0; i < items.length; i++) {\n            const foo = items[i];\n            if (foo.start.offset > foo.end.offset)\n                throw new ShikiError(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n            for (let j = i + 1; j < items.length; j++) {\n                const bar = items[j];\n                const isFooHasBarStart = foo.start.offset < bar.start.offset && bar.start.offset < foo.end.offset;\n                const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset < foo.end.offset;\n                const isBarHasFooStart = bar.start.offset < foo.start.offset && foo.start.offset < bar.end.offset;\n                const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset < bar.end.offset;\n                if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n                    if (isFooHasBarEnd && isFooHasBarEnd)\n                        continue; // nested\n                    if (isBarHasFooStart && isBarHasFooEnd)\n                        continue; // nested\n                    throw new ShikiError(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n                }\n            }\n        }\n    }\n    return {\n        name: 'shiki:decorations',\n        tokens(tokens) {\n            if (!this.options.decorations?.length)\n                return;\n            const ctx = getContext(this);\n            const breakpoints = ctx.decorations.flatMap(d => [d.start.offset, d.end.offset]);\n            const splitted = splitTokens(tokens, breakpoints);\n            return splitted;\n        },\n        code(codeEl) {\n            if (!this.options.decorations?.length)\n                return;\n            const ctx = getContext(this);\n            const lines = Array.from(codeEl.children).filter(i => i.type === 'element' && i.tagName === 'span');\n            if (lines.length !== ctx.converter.lines.length)\n                throw new ShikiError(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n            function applyLineSection(line, start, end, decoration) {\n                const lineEl = lines[line];\n                let text = '';\n                let startIndex = -1;\n                let endIndex = -1;\n                function stringify(el) {\n                    if (el.type === 'text')\n                        return el.value;\n                    if (el.type === 'element')\n                        return el.children.map(stringify).join('');\n                    return '';\n                }\n                if (start === 0)\n                    startIndex = 0;\n                if (end === 0)\n                    endIndex = 0;\n                if (end === Number.POSITIVE_INFINITY)\n                    endIndex = lineEl.children.length;\n                if (startIndex === -1 || endIndex === -1) {\n                    for (let i = 0; i < lineEl.children.length; i++) {\n                        text += stringify(lineEl.children[i]);\n                        if (startIndex === -1 && text.length === start)\n                            startIndex = i + 1;\n                        if (endIndex === -1 && text.length === end)\n                            endIndex = i + 1;\n                    }\n                }\n                if (startIndex === -1)\n                    throw new ShikiError(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n                if (endIndex === -1)\n                    throw new ShikiError(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n                const children = lineEl.children.slice(startIndex, endIndex);\n                // Full line decoration\n                if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n                    applyDecoration(lineEl, decoration, 'line');\n                }\n                // Single token decoration\n                else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === 'element') {\n                    applyDecoration(children[0], decoration, 'token');\n                }\n                // Create a wrapper for the decoration\n                else {\n                    const wrapper = {\n                        type: 'element',\n                        tagName: 'span',\n                        properties: {},\n                        children,\n                    };\n                    applyDecoration(wrapper, decoration, 'wrapper');\n                    lineEl.children.splice(startIndex, children.length, wrapper);\n                }\n            }\n            function applyLine(line, decoration) {\n                lines[line] = applyDecoration(lines[line], decoration, 'line');\n            }\n            function applyDecoration(el, decoration, type) {\n                const properties = decoration.properties || {};\n                const transform = decoration.transform || (i => i);\n                el.tagName = decoration.tagName || 'span';\n                el.properties = {\n                    ...el.properties,\n                    ...properties,\n                    class: el.properties.class,\n                };\n                if (decoration.properties?.class)\n                    addClassToHast(el, decoration.properties.class);\n                el = transform(el, type) || el;\n                return el;\n            }\n            const lineApplies = [];\n            // Apply decorations in reverse order so the nested ones get applied first.\n            const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset);\n            for (const decoration of sorted) {\n                const { start, end } = decoration;\n                if (start.line === end.line) {\n                    applyLineSection(start.line, start.character, end.character, decoration);\n                }\n                else if (start.line < end.line) {\n                    applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n                    for (let i = start.line + 1; i < end.line; i++)\n                        lineApplies.unshift(() => applyLine(i, decoration));\n                    applyLineSection(end.line, 0, end.character, decoration);\n                }\n            }\n            lineApplies.forEach(i => i());\n        },\n    };\n}\n\nconst builtInTransformers = [\n    /* @__PURE__ */ transformerDecorations(),\n];\nfunction getTransformers(options) {\n    return [\n        ...options.transformers || [],\n        ...builtInTransformers,\n    ];\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options),\n}) {\n    let input = code;\n    for (const transformer of getTransformers(options))\n        input = transformer.preprocess?.call(transformerContext, input, options) || input;\n    let { tokens, fg, bg, themeName, rootStyle, } = codeToTokens(internal, input, options);\n    const { mergeWhitespaces = true, } = options;\n    if (mergeWhitespaces === true)\n        tokens = mergeWhitespaceTokens(tokens);\n    else if (mergeWhitespaces === 'never')\n        tokens = splitWhitespaceTokens(tokens);\n    const contextSource = {\n        ...transformerContext,\n        get source() {\n            return input;\n        },\n    };\n    for (const transformer of getTransformers(options))\n        tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n    return tokensToHast(tokens, {\n        ...options,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    }, contextSource);\n}\nfunction tokensToHast(tokens, options, transformerContext) {\n    const transformers = getTransformers(options);\n    const lines = [];\n    const root = {\n        type: 'root',\n        children: [],\n    };\n    const { structure = 'classic', } = options;\n    let preNode = {\n        type: 'element',\n        tagName: 'pre',\n        properties: {\n            class: `shiki ${options.themeName || ''}`,\n            style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n            tabindex: '0',\n            ...Object.fromEntries(Array.from(Object.entries(options.meta || {}))\n                .filter(([key]) => !key.startsWith('_'))),\n        },\n        children: [],\n    };\n    let codeNode = {\n        type: 'element',\n        tagName: 'code',\n        properties: {},\n        children: lines,\n    };\n    const lineNodes = [];\n    const context = {\n        ...transformerContext,\n        structure,\n        addClassToHast,\n        get source() {\n            return transformerContext.source;\n        },\n        get tokens() {\n            return tokens;\n        },\n        get options() {\n            return options;\n        },\n        get root() {\n            return root;\n        },\n        get pre() {\n            return preNode;\n        },\n        get code() {\n            return codeNode;\n        },\n        get lines() {\n            return lineNodes;\n        },\n    };\n    tokens.forEach((line, idx) => {\n        if (idx) {\n            if (structure === 'inline')\n                root.children.push({ type: 'element', tagName: 'br', properties: {}, children: [] });\n            else if (structure === 'classic')\n                lines.push({ type: 'text', value: '\\n' });\n        }\n        let lineNode = {\n            type: 'element',\n            tagName: 'span',\n            properties: { class: 'line' },\n            children: [],\n        };\n        let col = 0;\n        for (const token of line) {\n            let tokenNode = {\n                type: 'element',\n                tagName: 'span',\n                properties: {},\n                children: [{ type: 'text', value: token.content }],\n            };\n            const style = token.htmlStyle || stringifyTokenStyle(getTokenStyleObject(token));\n            if (style)\n                tokenNode.properties.style = style;\n            for (const transformer of transformers)\n                tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode) || tokenNode;\n            if (structure === 'inline')\n                root.children.push(tokenNode);\n            else if (structure === 'classic')\n                lineNode.children.push(tokenNode);\n            col += token.content.length;\n        }\n        if (structure === 'classic') {\n            for (const transformer of transformers)\n                lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n            lineNodes.push(lineNode);\n            lines.push(lineNode);\n        }\n    });\n    if (structure === 'classic') {\n        for (const transformer of transformers)\n            codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n        preNode.children.push(codeNode);\n        for (const transformer of transformers)\n            preNode = transformer?.pre?.call(context, preNode) || preNode;\n        root.children.push(preNode);\n    }\n    let result = root;\n    for (const transformer of transformers)\n        result = transformer?.root?.call(context, result) || result;\n    return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        const newLine = [];\n        let carryOnContent = '';\n        let firstOffset = 0;\n        line.forEach((token, idx) => {\n            const isUnderline = token.fontStyle && token.fontStyle & FontStyle.Underline;\n            const couldMerge = !isUnderline;\n            if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n                if (!firstOffset)\n                    firstOffset = token.offset;\n                carryOnContent += token.content;\n            }\n            else {\n                if (carryOnContent) {\n                    if (couldMerge) {\n                        newLine.push({\n                            ...token,\n                            offset: firstOffset,\n                            content: carryOnContent + token.content,\n                        });\n                    }\n                    else {\n                        newLine.push({\n                            content: carryOnContent,\n                            offset: firstOffset,\n                        }, token);\n                    }\n                    firstOffset = 0;\n                    carryOnContent = '';\n                }\n                else {\n                    newLine.push(token);\n                }\n            }\n        });\n        return newLine;\n    });\n}\nfunction splitWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            if (token.content.match(/^\\s+$/))\n                return token;\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n            if (!match)\n                return token;\n            const [, leading, content, trailing] = match;\n            if (!leading && !trailing)\n                return token;\n            const expanded = [{\n                    ...token,\n                    offset: token.offset + leading.length,\n                    content,\n                }];\n            if (leading) {\n                expanded.unshift({\n                    content: leading,\n                    offset: token.offset,\n                });\n            }\n            if (trailing) {\n                expanded.push({\n                    content: trailing,\n                    offset: token.offset + leading.length + content.length,\n                });\n            }\n            return expanded;\n        });\n    });\n}\n\n/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nconst htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n];\n\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nclass Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property;\n    this.normal = normal;\n    if (space) {\n      this.space = space;\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  let index = -1;\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n\n  return new Schema(property, normal, space)\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n\nclass Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property;\n    /** @type {string} */\n    this.attribute = attribute;\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;\n\nlet powers = 0;\n\nconst boolean = increment();\nconst booleanish = increment();\nconst overloadedBoolean = increment();\nconst number = increment();\nconst spaceSeparated = increment();\nconst commaSeparated = increment();\nconst commaOrSpaceSeparated = increment();\n\nfunction increment() {\n  return 2 ** ++powers\n}\n\nvar types = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  boolean: boolean,\n  booleanish: booleanish,\n  commaOrSpaceSeparated: commaOrSpaceSeparated,\n  commaSeparated: commaSeparated,\n  number: number,\n  overloadedBoolean: overloadedBoolean,\n  spaceSeparated: spaceSeparated\n});\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types);\n\nclass DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1;\n\n    super(property, attribute);\n\n    mark(this, 'space', space);\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index];\n        mark(this, checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\n\nconst own$3 = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nfunction create(definition) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  /** @type {string} */\n  let prop;\n\n  for (prop in definition.properties) {\n    if (own$3.call(definition.properties, prop)) {\n      const value = definition.properties[prop];\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      );\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true;\n      }\n\n      property[prop] = info;\n\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n\nconst xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\n\nconst xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n});\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n\nconst xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n});\n\nconst aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\n\nconst html$3 = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});\n\nconst svg$1 = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});\n\n/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\n\nconst valid = /^data[-\\w.:]+$/i;\nconst dash = /-[a-z]/g;\nconst cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nfunction find(schema, value) {\n  const normal = normalize(value);\n  let prop = value;\n  let Type = Info;\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4);\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab);\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n\n        value = 'data' + dashes;\n      }\n    }\n\n    Type = DefinedInfo;\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nconst html$2 = merge([xml, xlink, xmlns, aria, html$3], 'html');\nconst svg = merge([xml, xlink, xmlns, aria, svg$1], 'svg');\n\n/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own$2 = {}.hasOwnProperty;\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nfunction zwitch(key, options) {\n  const settings = options || {};\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid;\n    const handlers = one.handlers;\n\n    if (value && own$2.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key]);\n      // @ts-expect-error Indexable.\n      fn = own$2.call(handlers, id) ? handlers[id] : one.unknown;\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n\n  // @ts-expect-error: matches!\n  return one\n}\n\n/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nfunction core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  );\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = [];\n  let index = -1;\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'));\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nconst characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n];\n\n/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nconst characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n};\n\n/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nconst dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n];\n\nconst own$1 = {}.hasOwnProperty;\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {};\n\n/** @type {string} */\nlet key;\n\nfor (key in characterEntitiesHtml4) {\n  if (own$1.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key;\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nfunction toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code);\n\n  if (own$1.call(characters, character)) {\n    const name = characters[character];\n    const value = '&' + name;\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n\n/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nfunction formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);\n  /** @type {string|undefined} */\n  let named;\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    );\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons);\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal;\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n\n/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nfunction stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g;\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>'];\nconst commentEntitySubset = ['<', '>'];\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n\n/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n\n/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nfunction ccount(value, character) {\n  const source = String(value);\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0;\n  let index = source.indexOf(character);\n\n  while (index !== -1) {\n    count++;\n    index = source.indexOf(character, index + character.length);\n  }\n\n  return count\n}\n\n/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nfunction stringify$1(values, options) {\n  const settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values;\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nfunction stringify(values) {\n  return values.join(' ').trim()\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g;\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nfunction whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\n\nconst siblingAfter = siblings(1);\nconst siblingBefore = siblings(-1);\n\n/** @type {Array<RootContent>} */\nconst emptyChildren$1 = [];\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren$1;\n    let offset = (index || 0) + increment;\n    let next = siblings[offset];\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nfunction omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n\nconst closing = omission({\n  body: body$1,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html: html$1,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody: tbody$1,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n});\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true);\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n\nconst opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n});\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1);\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children;\n  /** @type {Array<string>} */\n  const seen = [];\n  let index = -1;\n\n  while (++index < children.length) {\n    const child = children[index];\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName);\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true);\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1, true);\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1);\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n};\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction element(node, index, parent, state) {\n  const schema = state.schema;\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags;\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase());\n  /** @type {Array<string>} */\n  const parts = [];\n  /** @type {string} */\n  let last;\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg;\n  }\n\n  const attributes = serializeAttributes(state, node.properties);\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  );\n\n  state.schema = schema;\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false;\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '');\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1);\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ');\n      }\n\n      parts.push('/');\n    }\n\n    parts.push('>');\n  }\n\n  parts.push(content);\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>');\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = [];\n  let index = -1;\n  /** @type {string} */\n  let key;\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key]);\n        if (value) values.push(value);\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined;\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' ';\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key);\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1;\n  const y = state.settings.allowDangerousCharacters ? 0 : 1;\n  let quote = state.quote;\n  /** @type {string | undefined} */\n  let result;\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true;\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value);\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  );\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? stringify$1 : stringify)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value);\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    );\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative;\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote;\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&'];\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction root(node, _1, _2, state) {\n  return state.all(node)\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nconst handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n});\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_);\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {};\n\n/** @type {Array<never>} */\nconst emptyChildren = [];\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nfunction toHtml(tree, options) {\n  const options_ = options || emptyOptions;\n  const quote = options_.quote || '\"';\n  const alternative = quote === '\"' ? \"'\" : '\"';\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html$2,\n    quote,\n    alternative\n  };\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nfunction all(parent) {\n  /** @type {Array<string>} */\n  const results = [];\n  const children = (parent && parent.children) || emptyChildren;\n  let index = -1;\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent);\n  }\n\n  return results.join('')\n}\n\n/**\n * Get highlighted code in HTML.\n */\nfunction codeToHtml(internal, code, options) {\n    const context = {\n        meta: {},\n        options,\n        codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n        codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options),\n    };\n    let result = toHtml(codeToHast(internal, code, options, context));\n    for (const transformer of getTransformers(options))\n        result = transformer.postprocess?.call(context, result, options) || result;\n    return result;\n}\n\nasync function main(init) {\n    let wasmMemory;\n    let buffer;\n    const binding = {};\n    function updateGlobalBufferAndViews(buf) {\n        buffer = buf;\n        binding.HEAPU8 = new Uint8Array(buf);\n        binding.HEAPU32 = new Uint32Array(buf);\n    }\n    function _emscripten_get_now() {\n        return typeof performance !== 'undefined' ? performance.now() : Date.now();\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n        binding.HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function getHeapMax() {\n        return 2147483648;\n    }\n    function emscripten_realloc_buffer(size) {\n        try {\n            wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n        }\n        catch { }\n    }\n    function _emscripten_resize_heap(requestedSize) {\n        const oldSize = binding.HEAPU8.length;\n        requestedSize = requestedSize >>> 0;\n        const maxHeapSize = getHeapMax();\n        if (requestedSize > maxHeapSize)\n            return false;\n        const alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\n        for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            const replacement = emscripten_realloc_buffer(newSize);\n            if (replacement)\n                return true;\n        }\n        return false;\n    }\n    const UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n        const endIdx = idx + maxBytesToRead;\n        let endPtr = idx;\n        while (heapOrArray[endPtr] && !(endPtr >= endIdx))\n            ++endPtr;\n        if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n            return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n        }\n        let str = '';\n        while (idx < endPtr) {\n            let u0 = heapOrArray[idx++];\n            if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n            }\n            const u1 = heapOrArray[idx++] & 63;\n            if ((u0 & 224) === 192) {\n                str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                continue;\n            }\n            const u2 = heapOrArray[idx++] & 63;\n            if ((u0 & 240) === 224) {\n                u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n            }\n            else {\n                u0 = ((u0 & 7) << 18)\n                    | (u1 << 12)\n                    | (u2 << 6)\n                    | (heapOrArray[idx++] & 63);\n            }\n            if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n            }\n            else {\n                const ch = u0 - 65536;\n                str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n            }\n        }\n        return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n        return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : '';\n    }\n    const asmLibraryArg = {\n        emscripten_get_now: _emscripten_get_now,\n        emscripten_memcpy_big: _emscripten_memcpy_big,\n        emscripten_resize_heap: _emscripten_resize_heap,\n        fd_write: () => 0,\n    };\n    async function createWasm() {\n        const info = {\n            env: asmLibraryArg,\n            wasi_snapshot_preview1: asmLibraryArg,\n        };\n        const exports = await init(info);\n        wasmMemory = exports.memory;\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        Object.assign(binding, exports);\n        binding.UTF8ToString = UTF8ToString;\n    }\n    await createWasm();\n    return binding;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\nlet onigBinding = null;\nlet defaultDebugCall = false;\nfunction throwLastOnigError(onigBinding) {\n    throw new ShikiError(onigBinding.UTF8ToString(onigBinding.getLastOnigError()));\n}\nclass UtfString {\n    static _utf8ByteLength(str) {\n        let result = 0;\n        for (let i = 0, len = str.length; i < len; i++) {\n            const charCode = str.charCodeAt(i);\n            let codepoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i + 1 < len) {\n                    const nextCharCode = str.charCodeAt(i + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codepoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (codepoint <= 0x7F)\n                result += 1;\n            else if (codepoint <= 0x7FF)\n                result += 2;\n            else if (codepoint <= 0xFFFF)\n                result += 3;\n            else\n                result += 4;\n            if (wasSurrogatePair)\n                i++;\n        }\n        return result;\n    }\n    utf16Length;\n    utf8Length;\n    utf16Value;\n    utf8Value;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    constructor(str) {\n        const utf16Length = str.length;\n        const utf8Length = UtfString._utf8ByteLength(str);\n        const computeIndicesMapping = (utf8Length !== utf16Length);\n        const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n        if (computeIndicesMapping)\n            utf16OffsetToUtf8[utf16Length] = utf8Length;\n        const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n        if (computeIndicesMapping)\n            utf8OffsetToUtf16[utf8Length] = utf16Length;\n        const utf8Value = new Uint8Array(utf8Length);\n        let i8 = 0;\n        for (let i16 = 0; i16 < utf16Length; i16++) {\n            const charCode = str.charCodeAt(i16);\n            let codePoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i16 + 1 < utf16Length) {\n                    const nextCharCode = str.charCodeAt(i16 + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codePoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (computeIndicesMapping) {\n                utf16OffsetToUtf8[i16] = i8;\n                if (wasSurrogatePair)\n                    utf16OffsetToUtf8[i16 + 1] = i8;\n                if (codePoint <= 0x7F) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                }\n                else if (codePoint <= 0x7FF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                }\n                else if (codePoint <= 0xFFFF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                }\n                else {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                    utf8OffsetToUtf16[i8 + 3] = i16;\n                }\n            }\n            if (codePoint <= 0x7F) {\n                utf8Value[i8++] = codePoint;\n            }\n            else if (codePoint <= 0x7FF) {\n                utf8Value[i8++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else if (codePoint <= 0xFFFF) {\n                utf8Value[i8++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else {\n                utf8Value[i8++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            if (wasSurrogatePair)\n                i16++;\n        }\n        this.utf16Length = utf16Length;\n        this.utf8Length = utf8Length;\n        this.utf16Value = str;\n        this.utf8Value = utf8Value;\n        this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n    }\n    createString(onigBinding) {\n        const result = onigBinding.omalloc(this.utf8Length);\n        onigBinding.HEAPU8.set(this.utf8Value, result);\n        return result;\n    }\n}\nclass OnigString {\n    static LAST_ID = 0;\n    static _sharedPtr = 0; // a pointer to a string of 10000 bytes\n    static _sharedPtrInUse = false;\n    id = (++OnigString.LAST_ID);\n    _onigBinding;\n    content;\n    utf16Length;\n    utf8Length;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    ptr;\n    constructor(str) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        this._onigBinding = onigBinding;\n        this.content = str;\n        const utfString = new UtfString(str);\n        this.utf16Length = utfString.utf16Length;\n        this.utf8Length = utfString.utf8Length;\n        this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n        if (this.utf8Length < 10000 && !OnigString._sharedPtrInUse) {\n            if (!OnigString._sharedPtr)\n                OnigString._sharedPtr = onigBinding.omalloc(10000);\n            OnigString._sharedPtrInUse = true;\n            onigBinding.HEAPU8.set(utfString.utf8Value, OnigString._sharedPtr);\n            this.ptr = OnigString._sharedPtr;\n        }\n        else {\n            this.ptr = utfString.createString(onigBinding);\n        }\n    }\n    convertUtf8OffsetToUtf16(utf8Offset) {\n        if (this.utf8OffsetToUtf16) {\n            if (utf8Offset < 0)\n                return 0;\n            if (utf8Offset > this.utf8Length)\n                return this.utf16Length;\n            return this.utf8OffsetToUtf16[utf8Offset];\n        }\n        return utf8Offset;\n    }\n    convertUtf16OffsetToUtf8(utf16Offset) {\n        if (this.utf16OffsetToUtf8) {\n            if (utf16Offset < 0)\n                return 0;\n            if (utf16Offset > this.utf16Length)\n                return this.utf8Length;\n            return this.utf16OffsetToUtf8[utf16Offset];\n        }\n        return utf16Offset;\n    }\n    dispose() {\n        if (this.ptr === OnigString._sharedPtr)\n            OnigString._sharedPtrInUse = false;\n        else\n            this._onigBinding.ofree(this.ptr);\n    }\n}\nclass OnigScanner {\n    _onigBinding;\n    _ptr;\n    constructor(patterns) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        const strPtrsArr = [];\n        const strLenArr = [];\n        for (let i = 0, len = patterns.length; i < len; i++) {\n            const utfString = new UtfString(patterns[i]);\n            strPtrsArr[i] = utfString.createString(onigBinding);\n            strLenArr[i] = utfString.utf8Length;\n        }\n        const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n        const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n        const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n        for (let i = 0, len = patterns.length; i < len; i++)\n            onigBinding.ofree(strPtrsArr[i]);\n        onigBinding.ofree(strLenPtr);\n        onigBinding.ofree(strPtrsPtr);\n        if (scannerPtr === 0)\n            throwLastOnigError(onigBinding);\n        this._onigBinding = onigBinding;\n        this._ptr = scannerPtr;\n    }\n    dispose() {\n        this._onigBinding.freeOnigScanner(this._ptr);\n    }\n    findNextMatchSync(string, startPosition, arg) {\n        let debugCall = defaultDebugCall;\n        let options = 0 /* FindOption.None */;\n        if (typeof arg === 'number') {\n            if (arg & 8 /* FindOption.DebugCall */)\n                debugCall = true;\n            options = arg;\n        }\n        else if (typeof arg === 'boolean') {\n            debugCall = arg;\n        }\n        if (typeof string === 'string') {\n            string = new OnigString(string);\n            const result = this._findNextMatchSync(string, startPosition, debugCall, options);\n            string.dispose();\n            return result;\n        }\n        return this._findNextMatchSync(string, startPosition, debugCall, options);\n    }\n    _findNextMatchSync(string, startPosition, debugCall, options) {\n        const onigBinding = this._onigBinding;\n        let resultPtr;\n        if (debugCall)\n            resultPtr = onigBinding.findNextOnigScannerMatchDbg(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        else\n            resultPtr = onigBinding.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        if (resultPtr === 0) {\n            // no match\n            return null;\n        }\n        const HEAPU32 = onigBinding.HEAPU32;\n        let offset = resultPtr / 4; // byte offset -> uint32 offset\n        const index = HEAPU32[offset++];\n        const count = HEAPU32[offset++];\n        const captureIndices = [];\n        for (let i = 0; i < count; i++) {\n            const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            captureIndices[i] = {\n                start: beg,\n                end,\n                length: end - beg,\n            };\n        }\n        return {\n            index,\n            captureIndices,\n        };\n    }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.instantiator === 'function');\n}\nfunction isInstantiatorModule(dataOrOptions) {\n    return (typeof dataOrOptions.default === 'function');\n}\nfunction isDataOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.data !== 'undefined');\n}\nfunction isResponse(dataOrOptions) {\n    return (typeof Response !== 'undefined' && dataOrOptions instanceof Response);\n}\nfunction isArrayBuffer(data) {\n    return (typeof ArrayBuffer !== 'undefined' && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)))\n        // eslint-disable-next-line node/prefer-global/buffer\n        || (typeof Buffer !== 'undefined' && Buffer.isBuffer?.(data))\n        || (typeof SharedArrayBuffer !== 'undefined' && data instanceof SharedArrayBuffer)\n        || (typeof Uint32Array !== 'undefined' && data instanceof Uint32Array);\n}\nlet initPromise;\nfunction loadWasm(options) {\n    if (initPromise)\n        return initPromise;\n    async function _load() {\n        onigBinding = await main(async (info) => {\n            let instance = options;\n            instance = await instance;\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (isInstantiatorOptionsObject(instance)) {\n                instance = await instance.instantiator(info);\n            }\n            else if (isInstantiatorModule(instance)) {\n                instance = await instance.default(info);\n            }\n            else {\n                if (isDataOptionsObject(instance))\n                    instance = instance.data;\n                if (isResponse(instance)) {\n                    if (typeof WebAssembly.instantiateStreaming === 'function')\n                        instance = await _makeResponseStreamingLoader(instance)(info);\n                    else\n                        instance = await _makeResponseNonStreamingLoader(instance)(info);\n                }\n                else if (isArrayBuffer(instance)) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                // import(\"shiki/onig.wasm\") returns `{ default: WebAssembly.Module }` on cloudflare workers\n                // https://developers.cloudflare.com/workers/wrangler/bundling/\n                else if (instance instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                else if ('default' in instance && instance.default instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance.default)(info);\n                }\n            }\n            if ('instance' in instance)\n                instance = instance.instance;\n            if ('exports' in instance)\n                instance = instance.exports;\n            return instance;\n        });\n    }\n    initPromise = _load();\n    return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n    return importObject => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n    return importObject => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n    return async (importObject) => {\n        const arrayBuffer = await data.arrayBuffer();\n        return WebAssembly.instantiate(arrayBuffer, importObject);\n    };\n}\nfunction createOnigString(str) {\n    return new OnigString(str);\n}\nfunction createOnigScanner(patterns) {\n    return new OnigScanner(patterns);\n}\n\n/**\n * https://github.com/microsoft/vscode/blob/f7f05dee53fb33fe023db2e06e30a89d3094488f/src/vs/platform/theme/common/colorRegistry.ts#L258-L268\n */\nconst VSCODE_FALLBACK_EDITOR_FG = { light: '#333333', dark: '#bbbbbb' };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: '#fffffe', dark: '#1e1e1e' };\nconst RESOLVED_KEY = '__shiki_resolved';\n/**\n * Normalize a textmate theme to shiki theme\n */\nfunction normalizeTheme(rawTheme) {\n    // @ts-expect-error private field\n    if (rawTheme?.[RESOLVED_KEY])\n        return rawTheme;\n    const theme = {\n        ...rawTheme,\n    };\n    // Fallback settings\n    if (theme.tokenColors && !theme.settings) {\n        theme.settings = theme.tokenColors;\n        delete theme.tokenColors;\n    }\n    theme.type ||= 'dark';\n    theme.colorReplacements = { ...theme.colorReplacements };\n    theme.settings ||= [];\n    // Guess fg/bg colors\n    let { bg, fg } = theme;\n    if (!bg || !fg) {\n        /**\n         * First try:\n         * Theme might contain a global `tokenColor` without `name` or `scope`\n         * Used as default value for foreground/background\n         */\n        const globalSetting = theme.settings\n            ? theme.settings.find((s) => !s.name && !s.scope)\n            : undefined;\n        if (globalSetting?.settings?.foreground)\n            fg = globalSetting.settings.foreground;\n        if (globalSetting?.settings?.background)\n            bg = globalSetting.settings.background;\n        /**\n         * Second try:\n         * If there's no global `tokenColor` without `name` or `scope`\n         * Use `editor.foreground` and `editor.background`\n         */\n        if (!fg && theme?.colors?.['editor.foreground'])\n            fg = theme.colors['editor.foreground'];\n        if (!bg && theme?.colors?.['editor.background'])\n            bg = theme.colors['editor.background'];\n        /**\n         * Last try:\n         * If there's no fg/bg color specified in theme, use default\n         */\n        if (!fg)\n            fg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n        if (!bg)\n            bg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n        theme.fg = fg;\n        theme.bg = bg;\n    }\n    // Push a no-scope setting with fallback colors\n    if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n        theme.settings.unshift({\n            settings: {\n                foreground: theme.fg,\n                background: theme.bg,\n            },\n        });\n    }\n    // Push non-hex colors to color replacements, as `vscode-textmate` doesn't support them\n    let replacementCount = 0;\n    const replacementMap = new Map();\n    function getReplacementColor(value) {\n        if (replacementMap.has(value))\n            return replacementMap.get(value);\n        replacementCount += 1;\n        const hex = `#${replacementCount.toString(16).padStart(8, '0').toLowerCase()}`;\n        if (theme.colorReplacements?.[`#${hex}`]) // already exists\n            return getReplacementColor(value);\n        replacementMap.set(value, hex);\n        return hex;\n    }\n    theme.settings = theme.settings.map((setting) => {\n        const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith('#');\n        const replaceBg = setting.settings?.background && !setting.settings.background.startsWith('#');\n        if (!replaceFg && !replaceBg)\n            return setting;\n        const clone = {\n            ...setting,\n            settings: {\n                ...setting.settings,\n            },\n        };\n        if (replaceFg) {\n            const replacement = getReplacementColor(setting.settings.foreground);\n            theme.colorReplacements[replacement] = setting.settings.foreground;\n            clone.settings.foreground = replacement;\n        }\n        if (replaceBg) {\n            const replacement = getReplacementColor(setting.settings.background);\n            theme.colorReplacements[replacement] = setting.settings.background;\n            clone.settings.background = replacement;\n        }\n        return clone;\n    });\n    for (const key of Object.keys(theme.colors || {})) {\n        // Only patch for known keys\n        if (key === 'editor.foreground' || key === 'editor.background' || key.startsWith('terminal.ansi')) {\n            if (!theme.colors[key]?.startsWith('#')) {\n                const replacement = getReplacementColor(theme.colors[key]);\n                theme.colorReplacements[replacement] = theme.colors[key];\n                theme.colors[key] = replacement;\n            }\n        }\n    }\n    Object.defineProperty(theme, RESOLVED_KEY, {\n        enumerable: false,\n        writable: false,\n        value: true,\n    });\n    return theme;\n}\n\nclass Registry extends Registry$1 {\n    _resolver;\n    _themes;\n    _langs;\n    _alias;\n    _resolvedThemes = new Map();\n    _resolvedGrammars = new Map();\n    _langMap = new Map();\n    _langGraph = new Map();\n    _textmateThemeCache = new WeakMap();\n    _loadedThemesCache = null;\n    _loadedLanguagesCache = null;\n    constructor(_resolver, _themes, _langs, _alias = {}) {\n        super(_resolver);\n        this._resolver = _resolver;\n        this._themes = _themes;\n        this._langs = _langs;\n        this._alias = _alias;\n        _themes.forEach(t => this.loadTheme(t));\n        _langs.forEach(l => this.loadLanguage(l));\n    }\n    getTheme(theme) {\n        if (typeof theme === 'string')\n            return this._resolvedThemes.get(theme);\n        else\n            return this.loadTheme(theme);\n    }\n    loadTheme(theme) {\n        const _theme = normalizeTheme(theme);\n        if (_theme.name) {\n            this._resolvedThemes.set(_theme.name, _theme);\n            // Reset cache\n            this._loadedThemesCache = null;\n        }\n        return _theme;\n    }\n    getLoadedThemes() {\n        if (!this._loadedThemesCache)\n            this._loadedThemesCache = [...this._resolvedThemes.keys()];\n        return this._loadedThemesCache;\n    }\n    // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n    // is expensive. Themes can switch often especially for dual-theme support.\n    //\n    // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n    // we omit here so it's easier to cache the themes.\n    setTheme(theme) {\n        let textmateTheme = this._textmateThemeCache.get(theme);\n        if (!textmateTheme) {\n            textmateTheme = Theme.createFromRawTheme(theme);\n            this._textmateThemeCache.set(theme, textmateTheme);\n        }\n        // @ts-expect-error Access private `_syncRegistry`, but should work in runtime\n        this._syncRegistry.setTheme(textmateTheme);\n    }\n    getGrammar(name) {\n        if (this._alias[name]) {\n            const resolved = new Set([name]);\n            while (this._alias[name]) {\n                name = this._alias[name];\n                if (resolved.has(name))\n                    throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(' -> ')} -> ${name}\\``);\n                resolved.add(name);\n            }\n        }\n        return this._resolvedGrammars.get(name);\n    }\n    async loadLanguage(lang) {\n        if (this.getGrammar(lang.name))\n            return;\n        const embeddedLazilyBy = new Set([...this._langMap.values()]\n            .filter(i => i.embeddedLangsLazy?.includes(lang.name)));\n        this._resolver.addLanguage(lang);\n        const grammarConfig = {\n            balancedBracketSelectors: lang.balancedBracketSelectors || ['*'],\n            unbalancedBracketSelectors: lang.unbalancedBracketSelectors || [],\n        };\n        // @ts-expect-error Private members, set this to override the previous grammar (that can be a stub)\n        this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n        const g = await this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n        g.name = lang.name;\n        this._resolvedGrammars.set(lang.name, g);\n        if (lang.aliases) {\n            lang.aliases.forEach((alias) => {\n                this._alias[alias] = lang.name;\n            });\n        }\n        // Reset cache\n        this._loadedLanguagesCache = null;\n        // If there is a language that embeds this language lazily, we need to reload it\n        if (embeddedLazilyBy.size) {\n            for (const e of embeddedLazilyBy) {\n                this._resolvedGrammars.delete(e.name);\n                // Reset cache\n                this._loadedLanguagesCache = null;\n                // @ts-expect-error clear cache\n                this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n                // @ts-expect-error clear cache\n                this._syncRegistry?._grammars?.delete(e.scopeName);\n                await this.loadLanguage(this._langMap.get(e.name));\n            }\n        }\n    }\n    async init() {\n        this._themes.map(t => this.loadTheme(t));\n        await this.loadLanguages(this._langs);\n    }\n    dispose() {\n        super.dispose();\n        this._resolvedThemes.clear();\n        this._resolvedGrammars.clear();\n        this._langMap.clear();\n        this._langGraph.clear();\n        this._loadedThemesCache = null;\n    }\n    async loadLanguages(langs) {\n        for (const lang of langs)\n            this.resolveEmbeddedLanguages(lang);\n        const langsGraphArray = Array.from(this._langGraph.entries());\n        const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n        if (missingLangs.length) {\n            const dependents = langsGraphArray\n                .filter(([_, lang]) => lang && lang.embeddedLangs?.some(l => missingLangs.map(([name]) => name).includes(l)))\n                .filter(lang => !missingLangs.includes(lang));\n            throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(', ')}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(', ')}`);\n        }\n        for (const [_, lang] of langsGraphArray)\n            this._resolver.addLanguage(lang);\n        for (const [_, lang] of langsGraphArray)\n            await this.loadLanguage(lang);\n    }\n    getLoadedLanguages() {\n        if (!this._loadedLanguagesCache) {\n            this._loadedLanguagesCache = [\n                ...new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)]),\n            ];\n        }\n        return this._loadedLanguagesCache;\n    }\n    resolveEmbeddedLanguages(lang) {\n        this._langMap.set(lang.name, lang);\n        this._langGraph.set(lang.name, lang);\n        if (lang.embeddedLangs) {\n            for (const embeddedLang of lang.embeddedLangs)\n                this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n        }\n    }\n}\n\nclass Resolver {\n    _langs = new Map();\n    _scopeToLang = new Map();\n    _injections = new Map();\n    _onigLibPromise;\n    constructor(onigLibPromise, langs) {\n        this._onigLibPromise = onigLibPromise;\n        langs.forEach(i => this.addLanguage(i));\n    }\n    get onigLib() {\n        return this._onigLibPromise;\n    }\n    getLangRegistration(langIdOrAlias) {\n        return this._langs.get(langIdOrAlias);\n    }\n    async loadGrammar(scopeName) {\n        return this._scopeToLang.get(scopeName);\n    }\n    addLanguage(l) {\n        this._langs.set(l.name, l);\n        if (l.aliases) {\n            l.aliases.forEach((a) => {\n                this._langs.set(a, l);\n            });\n        }\n        this._scopeToLang.set(l.scopeName, l);\n        if (l.injectTo) {\n            l.injectTo.forEach((i) => {\n                if (!this._injections.get(i))\n                    this._injections.set(i, []);\n                this._injections.get(i).push(l.scopeName);\n            });\n        }\n    }\n    getInjections(scopeName) {\n        const scopeParts = scopeName.split('.');\n        let injections = [];\n        for (let i = 1; i <= scopeParts.length; i++) {\n            const subScopeName = scopeParts.slice(0, i).join('.');\n            injections = [...injections, ...(this._injections.get(subScopeName) || [])];\n        }\n        return injections;\n    }\n}\n\nlet _defaultWasmLoader;\n/**\n * Set the default wasm loader for `loadWasm`.\n * @internal\n */\nfunction setDefaultWasmLoader(_loader) {\n    _defaultWasmLoader = _loader;\n}\nlet instancesCount = 0;\n/**\n * Get the minimal shiki context for rendering.\n */\nasync function createShikiInternal(options = {}) {\n    instancesCount += 1;\n    if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n        console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n    let isDisposed = false;\n    async function normalizeGetter(p) {\n        return Promise.resolve(typeof p === 'function' ? p() : p).then(r => r.default || r);\n    }\n    async function resolveLangs(langs) {\n        return Array.from(new Set((await Promise.all(langs\n            .filter(l => !isSpecialLang(l))\n            .map(async (lang) => await normalizeGetter(lang).then(r => Array.isArray(r) ? r : [r])))).flat()));\n    }\n    const wasmLoader = options.loadWasm || _defaultWasmLoader;\n    const [themes, langs,] = await Promise.all([\n        Promise.all((options.themes || []).map(normalizeGetter)).then(r => r.map(normalizeTheme)),\n        resolveLangs(options.langs || []),\n        wasmLoader ? loadWasm(wasmLoader) : undefined,\n    ]);\n    const resolver = new Resolver(Promise.resolve({\n        createOnigScanner(patterns) {\n            return createOnigScanner(patterns);\n        },\n        createOnigString(s) {\n            return createOnigString(s);\n        },\n    }), langs);\n    const _registry = new Registry(resolver, themes, langs, options.langAlias);\n    await _registry.init();\n    let _lastTheme;\n    function getLanguage(name) {\n        ensureNotDisposed();\n        const _lang = _registry.getGrammar(typeof name === 'string' ? name : name.name);\n        if (!_lang)\n            throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n        return _lang;\n    }\n    function getTheme(name) {\n        if (name === 'none')\n            return { bg: '', fg: '', name: 'none', settings: [], type: 'dark' };\n        ensureNotDisposed();\n        const _theme = _registry.getTheme(name);\n        if (!_theme)\n            throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n        return _theme;\n    }\n    function setTheme(name) {\n        ensureNotDisposed();\n        const theme = getTheme(name);\n        if (_lastTheme !== name) {\n            _registry.setTheme(theme);\n            _lastTheme = name;\n        }\n        const colorMap = _registry.getColorMap();\n        return {\n            theme,\n            colorMap,\n        };\n    }\n    function getLoadedThemes() {\n        ensureNotDisposed();\n        return _registry.getLoadedThemes();\n    }\n    function getLoadedLanguages() {\n        ensureNotDisposed();\n        return _registry.getLoadedLanguages();\n    }\n    async function loadLanguage(...langs) {\n        ensureNotDisposed();\n        await _registry.loadLanguages(await resolveLangs(langs));\n    }\n    async function loadTheme(...themes) {\n        ensureNotDisposed();\n        await Promise.all(themes.map(async (theme) => isSpecialTheme(theme)\n            ? null\n            : _registry.loadTheme(await normalizeGetter(theme))));\n    }\n    function ensureNotDisposed() {\n        if (isDisposed)\n            throw new ShikiError('Shiki instance has been disposed');\n    }\n    function dispose() {\n        if (isDisposed)\n            return;\n        isDisposed = true;\n        _registry.dispose();\n        instancesCount -= 1;\n    }\n    return {\n        setTheme,\n        getTheme,\n        getLanguage,\n        getLoadedThemes,\n        getLoadedLanguages,\n        loadLanguage,\n        loadTheme,\n        dispose,\n        [Symbol.dispose]: dispose,\n    };\n}\n/**\n * @deprecated Use `createShikiInternal` instead.\n */\nfunction getShikiInternal(options = {}) {\n    // TODO: next: console.warn('`getShikiInternal` is deprecated. Use `createShikiInternal` instead.')\n    return createShikiInternal(options);\n}\n\n/**\n * Create a Shiki core highlighter instance, with no languages or themes bundled.\n * Wasm and each language and theme must be loaded manually.\n *\n * @see http://shiki.style/guide/install#fine-grained-bundle\n */\nasync function createHighlighterCore(options = {}) {\n    const internal = await createShikiInternal(options);\n    return {\n        getLastGrammarState: (code, options) => getLastGrammarState(internal, code, options),\n        codeToTokensBase: (code, options) => codeToTokensBase(internal, code, options),\n        codeToTokensWithThemes: (code, options) => codeToTokensWithThemes(internal, code, options),\n        codeToTokens: (code, options) => codeToTokens(internal, code, options),\n        codeToHast: (code, options) => codeToHast(internal, code, options),\n        codeToHtml: (code, options) => codeToHtml(internal, code, options),\n        ...internal,\n        getInternalContext: () => internal,\n    };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n    let _shiki;\n    async function getSingletonHighlighterCore(options = {}) {\n        if (!_shiki) {\n            _shiki = createHighlighter({\n                ...options,\n                themes: options.themes || [],\n                langs: options.langs || [],\n            });\n            return _shiki;\n        }\n        else {\n            const s = await _shiki;\n            await Promise.all([\n                s.loadTheme(...(options.themes || [])),\n                s.loadLanguage(...(options.langs || [])),\n            ]);\n            return s;\n        }\n    }\n    return getSingletonHighlighterCore;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\n/**\n * @deprecated Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.\n */\n/* v8 ignore next 5 */\nfunction getHighlighterCore(options = {}) {\n    // TODO: next:  console.warn('`getHighlighterCore` is deprecated. Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.')\n    return createHighlighterCore(options);\n}\n\n/**\n * Create a `createHighlighter` function with bundled themes and languages.\n *\n * @param bundledLanguages\n * @param bundledThemes\n * @param loadWasm\n */\nfunction createdBundledHighlighter(bundledLanguages, bundledThemes, loadWasm) {\n    async function createHighlighter(options) {\n        function resolveLang(lang) {\n            if (typeof lang === 'string') {\n                if (isSpecialLang(lang))\n                    return [];\n                const bundle = bundledLanguages[lang];\n                if (!bundle)\n                    throw new ShikiError(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n                return bundle;\n            }\n            return lang;\n        }\n        function resolveTheme(theme) {\n            if (isSpecialTheme(theme))\n                return 'none';\n            if (typeof theme === 'string') {\n                const bundle = bundledThemes[theme];\n                if (!bundle)\n                    throw new ShikiError(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n                return bundle;\n            }\n            return theme;\n        }\n        const _themes = (options.themes ?? []).map(i => resolveTheme(i));\n        const langs = (options.langs ?? [])\n            .map(i => resolveLang(i));\n        const core = await createHighlighterCore({\n            ...options,\n            themes: _themes,\n            langs,\n            loadWasm,\n        });\n        return {\n            ...core,\n            loadLanguage(...langs) {\n                return core.loadLanguage(...langs.map(resolveLang));\n            },\n            loadTheme(...themes) {\n                return core.loadTheme(...themes.map(resolveTheme));\n            },\n        };\n    }\n    return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n    let _shiki;\n    async function getSingletonHighlighter(options = {}) {\n        if (!_shiki) {\n            _shiki = createHighlighter({\n                ...options,\n                themes: options.themes || [],\n                langs: options.langs || [],\n            });\n            return _shiki;\n        }\n        else {\n            const s = await _shiki;\n            await Promise.all([\n                s.loadTheme(...(options.themes || [])),\n                s.loadLanguage(...(options.langs || [])),\n            ]);\n            return s;\n        }\n    }\n    return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter) {\n    const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n    return {\n        getSingletonHighlighter(options) {\n            return getSingletonHighlighter(options);\n        },\n        async codeToHtml(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToHtml(code, options);\n        },\n        async codeToHast(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToHast(code, options);\n        },\n        async codeToTokens(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToTokens(code, options);\n        },\n        async codeToTokensBase(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: [options.theme],\n            });\n            return shiki.codeToTokensBase(code, options);\n        },\n        async codeToTokensWithThemes(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: Object.values(options.themes).filter(Boolean),\n            });\n            return shiki.codeToTokensWithThemes(code, options);\n        },\n        async getLastGrammarState(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: [options.theme],\n            });\n            return shiki.getLastGrammarState(code, options);\n        },\n    };\n}\n\nexport { FontStyle, ShikiError, addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighterCore, createPositionConverter, createShikiInternal, createSingletonShorthands, createdBundledHighlighter, getHighlighterCore, getShikiInternal, getSingletonHighlighterCore, getTokenStyleObject, toHtml as hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, loadWasm, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeTheme, resolveColorReplacements, setDefaultWasmLoader, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations };\n","import { FontStyle } from './types.mjs';\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n({\n    InDebugMode: (typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG'])\n});\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n    function toBinaryStr(encodedTokenAttributes) {\n        return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n    }\n    EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n    function print(encodedTokenAttributes) {\n        const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    }\n    EncodedTokenAttributes.print = print;\n    function getLanguageId(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 255 /* EncodedTokenDataConsts.LANGUAGEID_MASK */) >>>\n            0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */);\n    }\n    EncodedTokenAttributes.getLanguageId = getLanguageId;\n    function getTokenType(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 768 /* EncodedTokenDataConsts.TOKEN_TYPE_MASK */) >>>\n            8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */);\n    }\n    EncodedTokenAttributes.getTokenType = getTokenType;\n    function containsBalancedBrackets(encodedTokenAttributes) {\n        return (encodedTokenAttributes & 1024 /* EncodedTokenDataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n    function getFontStyle(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 30720 /* EncodedTokenDataConsts.FONT_STYLE_MASK */) >>>\n            11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */);\n    }\n    EncodedTokenAttributes.getFontStyle = getFontStyle;\n    function getForeground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 16744448 /* EncodedTokenDataConsts.FOREGROUND_MASK */) >>>\n            15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getForeground = getForeground;\n    function getBackground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 4278190080 /* EncodedTokenDataConsts.BACKGROUND_MASK */) >>>\n            24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getBackground = getBackground;\n    /**\n     * Updates the fields in `metadata`.\n     * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n     */\n    function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n        let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n        let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 8 /* OptionalStandardTokenType.NotSet */) {\n            _tokenType = fromOptionalTokenType(tokenType);\n        }\n        if (containsBalancedBrackets !== null) {\n            _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n        }\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return (((_languageId << 0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */) |\n            (_tokenType << 8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */) |\n            (_containsBalancedBracketsBit <<\n                10 /* EncodedTokenDataConsts.BALANCED_BRACKETS_OFFSET */) |\n            (_fontStyle << 11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */) |\n            (_foreground << 15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */) |\n            (_background << 24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */)) >>>\n            0);\n    }\n    EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes || (EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n    return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n    return standardType;\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createMatchers(selector, matchesName) {\n    const results = [];\n    const tokenizer = newTokenizer(selector);\n    let token = tokenizer.next();\n    while (token !== null) {\n        let priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${token} in scope selector`);\n            }\n            token = tokenizer.next();\n        }\n        let matcher = parseConjunction();\n        results.push({ matcher, priority });\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            const expressionToNegate = parseOperand();\n            return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            const expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            const identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return matcherInput => matchesName(identifiers, matcherInput);\n        }\n        return null;\n    }\n    function parseConjunction() {\n        const matchers = [];\n        let matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n    }\n    function parseInnerExpression() {\n        const matchers = [];\n        let matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n    }\n}\nfunction isIdentifier(token) {\n    return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    let match = regex.exec(input);\n    return {\n        next: () => {\n            if (!match) {\n                return null;\n            }\n            const res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction disposeOnigString(str) {\n    if (typeof str.dispose === 'function') {\n        str.dispose();\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction clone(something) {\n    return doClone(something);\n}\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    let r = {};\n    for (let key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target, ...sources) {\n    sources.forEach(source => {\n        for (let key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nfunction basename(path) {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    }\n    else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    }\n    else {\n        return path.substr(~idx + 1);\n    }\n}\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n    static hasCaptures(regexSource) {\n        if (regexSource === null) {\n            return false;\n        }\n        CAPTURING_REGEX_SOURCE.lastIndex = 0;\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    }\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                let result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    let len1 = a.length;\n    let len2 = b.length;\n    if (len1 === len2) {\n        for (let i = 0; i < len1; i++) {\n            let res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nclass CachedFn {\n    fn;\n    cache = new Map();\n    constructor(fn) {\n        this.fn = fn;\n    }\n    get(key) {\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        const value = this.fn(key);\n        this.cache.set(key, value);\n        return value;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n    scopeName;\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n    scopeName;\n    ruleName;\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nclass ExternalReferenceCollector {\n    _references = [];\n    _seenReferenceKeys = new Set();\n    get references() {\n        return this._references;\n    }\n    visitedRule = new Set();\n    add(reference) {\n        const key = reference.toKey();\n        if (this._seenReferenceKeys.has(key)) {\n            return;\n        }\n        this._seenReferenceKeys.add(key);\n        this._references.push(reference);\n    }\n}\nclass ScopeDependencyProcessor {\n    repo;\n    initialScopeName;\n    seenFullScopeRequests = new Set();\n    seenPartialScopeRequests = new Set();\n    Q;\n    constructor(repo, initialScopeName) {\n        this.repo = repo;\n        this.initialScopeName = initialScopeName;\n        this.seenFullScopeRequests.add(this.initialScopeName);\n        this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n    }\n    processQueue() {\n        const q = this.Q;\n        this.Q = [];\n        const deps = new ExternalReferenceCollector();\n        for (const dep of q) {\n            collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n        }\n        for (const dep of deps.references) {\n            if (dep instanceof TopLevelRuleReference) {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed\n                    continue;\n                }\n                this.seenFullScopeRequests.add(dep.scopeName);\n                this.Q.push(dep);\n            }\n            else {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed in full\n                    continue;\n                }\n                if (this.seenPartialScopeRequests.has(dep.toKey())) {\n                    // already processed\n                    continue;\n                }\n                this.seenPartialScopeRequests.add(dep.toKey());\n                this.Q.push(dep);\n            }\n        }\n    }\n}\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n    const selfGrammar = repo.lookup(reference.scopeName);\n    if (!selfGrammar) {\n        if (reference.scopeName === baseGrammarScopeName) {\n            throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n        }\n        return;\n    }\n    const baseGrammar = repo.lookup(baseGrammarScopeName);\n    if (reference instanceof TopLevelRuleReference) {\n        collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n    }\n    else {\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { baseGrammar, selfGrammar, repository: selfGrammar.repository }, result);\n    }\n    const injections = repo.injections(reference.scopeName);\n    if (injections) {\n        for (const injection of injections) {\n            result.add(new TopLevelRuleReference(injection));\n        }\n    }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n    if (context.repository && context.repository[ruleName]) {\n        const rule = context.repository[ruleName];\n        collectExternalReferencesInRules([rule], context, result);\n    }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n    if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n        collectExternalReferencesInRules(context.selfGrammar.patterns, { ...context, repository: context.selfGrammar.repository }, result);\n    }\n    if (context.selfGrammar.injections) {\n        collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), { ...context, repository: context.selfGrammar.repository }, result);\n    }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n    for (const rule of rules) {\n        if (result.visitedRule.has(rule)) {\n            continue;\n        }\n        result.visitedRule.add(rule);\n        const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n        if (Array.isArray(rule.patterns)) {\n            collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n        }\n        const include = rule.include;\n        if (!include) {\n            continue;\n        }\n        const reference = parseInclude(include);\n        switch (reference.kind) {\n            case 0 /* IncludeReferenceKind.Base */:\n                collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n                break;\n            case 1 /* IncludeReferenceKind.Self */:\n                collectExternalReferencesInTopLevelRule(context, result);\n                break;\n            case 2 /* IncludeReferenceKind.RelativeReference */:\n                collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n                break;\n            case 3 /* IncludeReferenceKind.TopLevelReference */:\n            case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n                const selfGrammar = reference.scopeName === context.selfGrammar.scopeName\n                    ? context.selfGrammar\n                    : reference.scopeName === context.baseGrammar.scopeName\n                        ? context.baseGrammar\n                        : undefined;\n                if (selfGrammar) {\n                    const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n                    if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n                        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n                    }\n                    else {\n                        collectExternalReferencesInTopLevelRule(newContext, result);\n                    }\n                }\n                else {\n                    if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n                        result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n                    }\n                    else {\n                        result.add(new TopLevelRuleReference(reference.scopeName));\n                    }\n                }\n                break;\n        }\n    }\n}\nclass BaseReference {\n    kind = 0 /* IncludeReferenceKind.Base */;\n}\nclass SelfReference {\n    kind = 1 /* IncludeReferenceKind.Self */;\n}\nclass RelativeReference {\n    ruleName;\n    kind = 2 /* IncludeReferenceKind.RelativeReference */;\n    constructor(ruleName) {\n        this.ruleName = ruleName;\n    }\n}\nclass TopLevelReference {\n    scopeName;\n    kind = 3 /* IncludeReferenceKind.TopLevelReference */;\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n}\nclass TopLevelRepositoryReference {\n    scopeName;\n    ruleName;\n    kind = 4 /* IncludeReferenceKind.TopLevelRepositoryReference */;\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n}\nfunction parseInclude(include) {\n    if (include === '$base') {\n        return new BaseReference();\n    }\n    else if (include === '$self') {\n        return new SelfReference();\n    }\n    const indexOfSharp = include.indexOf(\"#\");\n    if (indexOfSharp === -1) {\n        return new TopLevelReference(include);\n    }\n    else if (indexOfSharp === 0) {\n        return new RelativeReference(include.substring(1));\n    }\n    else {\n        const scopeName = include.substring(0, indexOfSharp);\n        const ruleName = include.substring(indexOfSharp + 1);\n        return new TopLevelRepositoryReference(scopeName, ruleName);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\n// This is a special constant to indicate that the end regexp matched.\nconst endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nconst whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n    return id;\n}\nfunction ruleIdToNumber(id) {\n    return id;\n}\nclass Rule {\n    $location;\n    id;\n    _nameIsCapturing;\n    _name;\n    _contentNameIsCapturing;\n    _contentName;\n    constructor($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n        return `${this.constructor.name}#${this.id} @ ${location}`;\n    }\n    getName(lineText, captureIndices) {\n        if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n            return this._name;\n        }\n        return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    }\n    getContentName(lineText, captureIndices) {\n        if (!this._contentNameIsCapturing || this._contentName === null) {\n            return this._contentName;\n        }\n        return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    }\n}\nclass CaptureRule extends Rule {\n    retokenizeCapturedWithRuleId;\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        super($location, id, name, contentName);\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n    }\n    dispose() {\n        // nothing to dispose\n    }\n    collectPatterns(grammar, out) {\n        throw new Error('Not supported!');\n    }\n    compile(grammar, endRegexSource) {\n        throw new Error('Not supported!');\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Not supported!');\n    }\n}\nclass MatchRule extends Rule {\n    _match;\n    captures;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, match, captures) {\n        super($location, id, name, null);\n        this._match = new RegExpSource(match, this.id);\n        this.captures = captures;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._match);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass IncludeOnlyRule extends Rule {\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, contentName, patterns) {\n        super($location, id, name, contentName);\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    collectPatterns(grammar, out) {\n        for (const pattern of this.patterns) {\n            const rule = grammar.getRule(pattern);\n            rule.collectPatterns(grammar, out);\n        }\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass BeginEndRule extends Rule {\n    _begin;\n    beginCaptures;\n    _end;\n    endHasBackReferences;\n    endCaptures;\n    applyEndPatternLast;\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n        this.endHasBackReferences = this._end.hasBackReferences;\n        this.endCaptures = endCaptures;\n        this.applyEndPatternLast = applyEndPatternLast || false;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n            }\n            else {\n                this._cachedCompiledPatterns.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass BeginWhileRule extends Rule {\n    _begin;\n    beginCaptures;\n    whileCaptures;\n    _while;\n    whileHasBackReferences;\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    _cachedCompiledWhilePatterns;\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this.whileCaptures = whileCaptures;\n        this._while = new RegExpSource(_while, whileRuleId);\n        this.whileHasBackReferences = this._while.hasBackReferences;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n        this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n        if (this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns.dispose();\n            this._cachedCompiledWhilePatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(grammar, endRegexSource) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n        }\n        return this._cachedCompiledWhilePatterns;\n    }\n}\nclass RuleFactory {\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule((id) => {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    }\n    static getCompiledRuleId(desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule((id) => {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (typeof desc.begin === 'undefined') {\n                    if (desc.repository) {\n                        repository = mergeObjects({}, repository, desc.repository);\n                    }\n                    let patterns = desc.patterns;\n                    if (typeof patterns === 'undefined' && desc.include) {\n                        patterns = [{ include: desc.include }];\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    }\n    static _compileCaptures(captures, helper, repository) {\n        let r = [];\n        if (captures) {\n            // Find the maximum capture id\n            let maximumCaptureId = 0;\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (let i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                let retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    }\n    static _compilePatterns(patterns, helper, repository) {\n        let r = [];\n        if (patterns) {\n            for (let i = 0, len = patterns.length; i < len; i++) {\n                const pattern = patterns[i];\n                let ruleId = -1;\n                if (pattern.include) {\n                    const reference = parseInclude(pattern.include);\n                    switch (reference.kind) {\n                        case 0 /* IncludeReferenceKind.Base */:\n                        case 1 /* IncludeReferenceKind.Self */:\n                            ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                            break;\n                        case 2 /* IncludeReferenceKind.RelativeReference */:\n                            // Local include found in `repository`\n                            let localIncludedRule = repository[reference.ruleName];\n                            if (localIncludedRule) {\n                                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                            }\n                            break;\n                        case 3 /* IncludeReferenceKind.TopLevelReference */:\n                        case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n                            const externalGrammarName = reference.scopeName;\n                            const externalGrammarInclude = reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */\n                                ? reference.ruleName\n                                : null;\n                            // External include\n                            const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                            if (externalGrammar) {\n                                if (externalGrammarInclude) {\n                                    let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                    if (externalIncludedRule) {\n                                        ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                    }\n                                }\n                                else {\n                                    ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                                }\n                            }\n                            break;\n                    }\n                }\n                else {\n                    ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (ruleId !== -1) {\n                    const rule = helper.getRule(ruleId);\n                    let skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(ruleId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    }\n}\nclass RegExpSource {\n    source;\n    ruleId;\n    hasAnchor;\n    hasBackReferences;\n    _anchorCache;\n    constructor(regExpSource, ruleId) {\n        if (regExpSource) {\n            const len = regExpSource.length;\n            let lastPushedPos = 0;\n            let output = [];\n            let hasAnchor = false;\n            for (let pos = 0; pos < len; pos++) {\n                const ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        const nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        else {\n            this._anchorCache = null;\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    clone() {\n        return new RegExpSource(this.source, this.ruleId);\n    }\n    setSource(newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    }\n    resolveBackReferences(lineText, captureIndices) {\n        let capturedValues = captureIndices.map((capture) => {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n            return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    }\n    _buildAnchorCache() {\n        let A0_G0_result = [];\n        let A0_G1_result = [];\n        let A1_G0_result = [];\n        let A1_G1_result = [];\n        let pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    }\n    resolveAnchors(allowA, allowG) {\n        if (!this.hasAnchor || !this._anchorCache) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    }\n}\nclass RegExpSourceList {\n    _items;\n    _hasAnchors;\n    _cached;\n    _anchorCache;\n    constructor() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        if (this._cached) {\n            this._cached.dispose();\n            this._cached = null;\n        }\n        if (this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0.dispose();\n            this._anchorCache.A0_G0 = null;\n        }\n        if (this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1.dispose();\n            this._anchorCache.A0_G1 = null;\n        }\n        if (this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0.dispose();\n            this._anchorCache.A1_G0 = null;\n        }\n        if (this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1.dispose();\n            this._anchorCache.A1_G1 = null;\n        }\n    }\n    push(item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    unshift(item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._disposeCaches();\n            this._items[index].setSource(newSource);\n        }\n    }\n    compile(onigLib) {\n        if (!this._cached) {\n            let regExps = this._items.map(e => e.source);\n            this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(onigLib, allowA, allowG) {\n        if (!this._hasAnchors) {\n            return this.compile(onigLib);\n        }\n        else {\n            if (allowA) {\n                if (allowG) {\n                    if (!this._anchorCache.A1_G1) {\n                        this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    if (!this._anchorCache.A1_G0) {\n                        this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    if (!this._anchorCache.A0_G1) {\n                        this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    if (!this._anchorCache.A0_G0) {\n                        this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    }\n    _resolveAnchors(onigLib, allowA, allowG) {\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n        return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n}\nclass CompiledRule {\n    regExps;\n    rules;\n    scanner;\n    constructor(onigLib, regExps, rules) {\n        this.regExps = regExps;\n        this.rules = rules;\n        this.scanner = onigLib.createOnigScanner(regExps);\n    }\n    dispose() {\n        if (typeof this.scanner.dispose === \"function\") {\n            this.scanner.dispose();\n        }\n    }\n    toString() {\n        const r = [];\n        for (let i = 0, len = this.rules.length; i < len; i++) {\n            r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n        }\n        return r.join(\"\\n\");\n    }\n    findNextMatchSync(string, startPosition, options) {\n        const result = this.scanner.findNextMatchSync(string, startPosition, options);\n        if (!result) {\n            return null;\n        }\n        return {\n            ruleId: this.rules[result.index],\n            captureIndices: result.captureIndices,\n        };\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass Theme {\n    _colorMap;\n    _defaults;\n    _root;\n    static createFromRawTheme(source, colorMap) {\n        return this.createFromParsedTheme(parseTheme(source), colorMap);\n    }\n    static createFromParsedTheme(source, colorMap) {\n        return resolveParsedThemeRules(source, colorMap);\n    }\n    _cachedMatchRoot = new CachedFn((scopeName) => this._root.match(scopeName));\n    constructor(_colorMap, _defaults, _root) {\n        this._colorMap = _colorMap;\n        this._defaults = _defaults;\n        this._root = _root;\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(scopePath) {\n        if (scopePath === null) {\n            return this._defaults;\n        }\n        const scopeName = scopePath.scopeName;\n        const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n        const effectiveRule = matchingTrieElements.find((v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n        if (!effectiveRule) {\n            return null;\n        }\n        return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n    }\n}\nclass ScopeStack {\n    parent;\n    scopeName;\n    static push(path, scopeNames) {\n        for (const name of scopeNames) {\n            path = new ScopeStack(path, name);\n        }\n        return path;\n    }\n    static from(...segments) {\n        let result = null;\n        for (let i = 0; i < segments.length; i++) {\n            result = new ScopeStack(result, segments[i]);\n        }\n        return result;\n    }\n    constructor(parent, scopeName) {\n        this.parent = parent;\n        this.scopeName = scopeName;\n    }\n    push(scopeName) {\n        return new ScopeStack(this, scopeName);\n    }\n    getSegments() {\n        let item = this;\n        const result = [];\n        while (item) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        result.reverse();\n        return result;\n    }\n    toString() {\n        return this.getSegments().join(' ');\n    }\n    extends(other) {\n        if (this === other) {\n            return true;\n        }\n        if (this.parent === null) {\n            return false;\n        }\n        return this.parent.extends(other);\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let item = this;\n        while (item && item !== base) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        return item === base ? result.reverse() : undefined;\n    }\n}\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n    if (parentScopes === null) {\n        return true;\n    }\n    let index = 0;\n    let scopePattern = parentScopes[index];\n    while (scopePath) {\n        if (_matchesScope(scopePath.scopeName, scopePattern)) {\n            index++;\n            if (index === parentScopes.length) {\n                return true;\n            }\n            scopePattern = parentScopes[index];\n        }\n        scopePath = scopePath.parent;\n    }\n    return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n    return scopePattern === scopeName || (scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.');\n}\nclass StyleAttributes {\n    fontStyle;\n    foregroundId;\n    backgroundId;\n    constructor(fontStyle, foregroundId, backgroundId) {\n        this.fontStyle = fontStyle;\n        this.foregroundId = foregroundId;\n        this.backgroundId = backgroundId;\n    }\n}\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    let settings = source.settings;\n    let result = [], resultLen = 0;\n    for (let i = 0, len = settings.length; i < len; i++) {\n        let entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        let scopes;\n        if (typeof entry.scope === 'string') {\n            let _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* FontStyle.None */;\n            let segments = entry.settings.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                let segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* FontStyle.Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* FontStyle.Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* FontStyle.Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* FontStyle.Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.settings.foreground === 'string' && isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        let background = null;\n        if (typeof entry.settings.background === 'string' && isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            let _scope = scopes[j].trim();\n            let segments = _scope.split(' ');\n            let scope = segments[segments.length - 1];\n            let parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\nclass ParsedThemeRule {\n    scope;\n    parentScopes;\n    index;\n    fontStyle;\n    foreground;\n    background;\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        let r = strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* FontStyle.None */;\n    let defaultForeground = '#000000';\n    let defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        let incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* FontStyle.NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    let colorMap = new ColorMap(_colorMap);\n    let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* FontStyle.NotSet */, 0, 0), []);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        let rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n    _isFrozen;\n    _lastColorId;\n    _id2color;\n    _color2id;\n    constructor(_colorMap) {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n        if (Array.isArray(_colorMap)) {\n            this._isFrozen = true;\n            for (let i = 0, len = _colorMap.length; i < len; i++) {\n                this._color2id[_colorMap[i]] = i;\n                this._id2color[i] = _colorMap[i];\n            }\n        }\n        else {\n            this._isFrozen = false;\n        }\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        let value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        if (this._isFrozen) {\n            throw new Error(`Missing color in color map - ${color}`);\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nclass ThemeTrieElementRule {\n    scopeDepth;\n    parentScopes;\n    fontStyle;\n    foreground;\n    background;\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(arr) {\n        let r = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    }\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    }\n}\nclass ThemeTrieElement {\n    _mainRule;\n    _children;\n    _rulesWithParentScopes;\n    constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n        this._mainRule = _mainRule;\n        this._children = _children;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n    }\n    static _sortBySpecificity(arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    }\n    static _cmpBySpecificity(a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            const aParentScopes = a.parentScopes;\n            const bParentScopes = b.parentScopes;\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (let i = 0; i < aParentScopesLen; i++) {\n                    const aLen = aParentScopes[i].length;\n                    const bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    }\n    match(scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        let child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    }\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            let rule = this._rulesWithParentScopes[i];\n            if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* FontStyle.NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass BasicScopeAttributes {\n    languageId;\n    tokenType;\n    constructor(languageId, tokenType) {\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n    }\n}\nclass BasicScopeAttributesProvider {\n    _defaultAttributes;\n    _embeddedLanguagesMatcher;\n    constructor(initialLanguageId, embeddedLanguages) {\n        this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* OptionalStandardTokenType.NotSet */);\n        this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(scopeName) {\n        if (scopeName === null) {\n            return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n        }\n        return this._getBasicScopeAttributes.get(scopeName);\n    }\n    static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n    _getBasicScopeAttributes = new CachedFn((scopeName) => {\n        const languageId = this._scopeToLanguage(scopeName);\n        const standardTokenType = this._toStandardTokenType(scopeName);\n        return new BasicScopeAttributes(languageId, standardTokenType);\n    });\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    _scopeToLanguage(scope) {\n        return this._embeddedLanguagesMatcher.match(scope) || 0;\n    }\n    _toStandardTokenType(scopeName) {\n        const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 8 /* OptionalStandardTokenType.NotSet */;\n        }\n        switch (m[1]) {\n            case \"comment\":\n                return 1 /* OptionalStandardTokenType.Comment */;\n            case \"string\":\n                return 2 /* OptionalStandardTokenType.String */;\n            case \"regex\":\n                return 3 /* OptionalStandardTokenType.RegEx */;\n            case \"meta.embedded\":\n                return 0 /* OptionalStandardTokenType.Other */;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n    static STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n}\nclass ScopeMatcher {\n    values;\n    scopesRegExp;\n    constructor(values) {\n        if (values.length === 0) {\n            this.values = null;\n            this.scopesRegExp = null;\n        }\n        else {\n            this.values = new Map(values);\n            // create the regex\n            const escapedScopes = values.map(([scopeName, value]) => escapeRegExpCharacters(scopeName));\n            escapedScopes.sort();\n            escapedScopes.reverse(); // Longest scope first\n            this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(scope) {\n        if (!this.scopesRegExp) {\n            return undefined;\n        }\n        const m = scope.match(this.scopesRegExp);\n        if (!m) {\n            // no scopes matched\n            return undefined;\n        }\n        return this.values.get(m[1]);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass TokenizeStringResult {\n    stack;\n    stoppedEarly;\n    constructor(stack, stoppedEarly) {\n        this.stack = stack;\n        this.stoppedEarly = stoppedEarly;\n    }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n    const lineLength = lineText.content.length;\n    let STOP = false;\n    let anchorPosition = -1;\n    if (checkWhileConditions) {\n        const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n        stack = whileCheckResult.stack;\n        linePos = whileCheckResult.linePos;\n        isFirstLine = whileCheckResult.isFirstLine;\n        anchorPosition = whileCheckResult.anchorPosition;\n    }\n    const startTime = Date.now();\n    while (!STOP) {\n        if (timeLimit !== 0) {\n            const elapsedTime = Date.now() - startTime;\n            if (elapsedTime > timeLimit) {\n                return new TokenizeStringResult(stack, true);\n            }\n        }\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    return new TokenizeStringResult(stack, false);\n    function scanNext() {\n        const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        const captureIndices = r.captureIndices;\n        const matchedRuleId = r.matchedRuleId;\n        const hasAdvanced = captureIndices && captureIndices.length > 0\n            ? captureIndices[0].end > linePos\n            : false;\n        if (matchedRuleId === endRuleId) {\n            // We matched the `end` for this rule => pop it\n            const poppedRule = stack.getRule(grammar);\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.withContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            const popped = stack;\n            stack = stack.parent;\n            anchorPosition = popped.getAnchorPos();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            const _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            const beforePush = stack;\n            // push it on the stack rule\n            const scopeName = _rule.getName(lineText.content, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n            if (_rule instanceof BeginEndRule) {\n                const pushedRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof BeginWhileRule) {\n                const pushedRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                const matchingRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n}\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    let anchorPosition = (stack.beginRuleCapturedEOL ? 0 : -1);\n    const whileRules = [];\n    for (let node = stack; node; node = node.pop()) {\n        const nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n        const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (r) {\n            const matchedRuleId = r.ruleId;\n            if (matchedRuleId !== whileRuleId) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    const injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    const matchResultScore = matchResult.captureIndices[0].start;\n    const injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    const rule = stack.getRule(grammar);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: r.ruleId\n        };\n    }\n    return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    let bestMatchRating = Number.MAX_VALUE;\n    let bestMatchCaptureIndices = null;\n    let bestMatchRuleId;\n    let bestMatchResultPriority = 0;\n    const scopes = stack.contentNameScopesList.getScopeNames();\n    for (let i = 0, len = injections.length; i < len; i++) {\n        const injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        const rule = grammar.getRule(injection.ruleId);\n        const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n        const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (!matchResult) {\n            continue;\n        }\n        const matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = matchResult.ruleId;\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* FindOption.None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* FindOption.None */ };\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    const lineTextContent = lineText.content;\n    const len = Math.min(captures.length, captureIndices.length);\n    const localStack = [];\n    const maxEnd = captureIndices[0].end;\n    for (let i = 0; i < len; i++) {\n        const captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        const captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            const scopeName = captureRule.getName(lineTextContent, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n            const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n            const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n            const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n            _tokenizeString(grammar, onigSubStr, (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens, false, /* no time limit */ 0);\n            disposeOnigString(onigSubStr);\n            continue;\n        }\n        const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nclass LocalStackElement {\n    scopes;\n    endPos;\n    constructor(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n    return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    const matchers = createMatchers(selector, nameMatcher);\n    const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (const matcher of matchers) {\n        result.push({\n            debugSelector: selector,\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    let lastIndex = 0;\n    return identifers.every(identifier => {\n        for (let i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    const len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n    _rootScopeName;\n    balancedBracketSelectors;\n    _onigLib;\n    _rootId;\n    _lastRuleId;\n    _ruleId2desc;\n    _includedGrammars;\n    _grammarRepository;\n    _grammar;\n    _injections;\n    _basicScopeAttributesProvider;\n    _tokenTypeMatchers;\n    get themeProvider() { return this._grammarRepository; }\n    constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n        this._rootScopeName = _rootScopeName;\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._onigLib = _onigLib;\n        this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [null];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._injections = null;\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (const selector of Object.keys(tokenTypes)) {\n                const matchers = createMatchers(selector, nameMatcher);\n                for (const matcher of matchers) {\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector],\n                    });\n                }\n            }\n        }\n    }\n    dispose() {\n        for (const rule of this._ruleId2desc) {\n            if (rule) {\n                rule.dispose();\n            }\n        }\n    }\n    createOnigScanner(sources) {\n        return this._onigLib.createOnigScanner(sources);\n    }\n    createOnigString(sources) {\n        return this._onigLib.createOnigString(sources);\n    }\n    getMetadataForScope(scope) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n    }\n    _collectInjections() {\n        const grammarRepository = {\n            lookup: (scopeName) => {\n                if (scopeName === this._rootScopeName) {\n                    return this._grammar;\n                }\n                return this.getExternalGrammar(scopeName);\n            },\n            injections: (scopeName) => {\n                return this._grammarRepository.injections(scopeName);\n            },\n        };\n        const result = [];\n        const scopeName = this._rootScopeName;\n        const grammar = grammarRepository.lookup(scopeName);\n        if (grammar) {\n            // add injections from the current grammar\n            const rawInjections = grammar.injections;\n            if (rawInjections) {\n                for (let expression in rawInjections) {\n                    collectInjections(result, expression, rawInjections[expression], this, grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            const injectionScopeNames = this._grammarRepository.injections(scopeName);\n            if (injectionScopeNames) {\n                injectionScopeNames.forEach((injectionScopeName) => {\n                    const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n                    if (injectionGrammar) {\n                        const selector = injectionGrammar.injectionSelector;\n                        if (selector) {\n                            collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n                        }\n                    }\n                });\n            }\n        }\n        result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n        return result;\n    }\n    getInjections() {\n        if (this._injections === null) {\n            this._injections = this._collectInjections();\n        }\n        return this._injections;\n    }\n    registerRule(factory) {\n        const id = ++this._lastRuleId;\n        const result = factory(ruleIdFromNumber(id));\n        this._ruleId2desc[id] = result;\n        return result;\n    }\n    getRule(ruleId) {\n        return this._ruleId2desc[ruleIdToNumber(ruleId)];\n    }\n    getExternalGrammar(scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n        return undefined;\n    }\n    tokenizeLine(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, false, timeLimit);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    tokenizeLine2(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, true, timeLimit);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n        if (this._rootId === -1) {\n            this._rootId = RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n            // This ensures ids are deterministic, and thus equal in renderer and webworker.\n            this.getInjections();\n        }\n        let isFirstLine;\n        if (!prevState || prevState === StateStackImpl.NULL) {\n            isFirstLine = true;\n            const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n            const defaultStyle = this.themeProvider.getDefaults();\n            const defaultMetadata = EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n            const rootScopeName = this.getRule(this._rootId).getName(null, null);\n            let scopeList;\n            if (rootScopeName) {\n                scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n            }\n            else {\n                scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n            }\n            prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + \"\\n\";\n        const onigLineText = this.createOnigString(lineText);\n        const lineLength = onigLineText.content.length;\n        const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n        const r = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n        disposeOnigString(onigLineText);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: r.stack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n}\nfunction initGrammar(grammar, base) {\n    grammar = clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nclass AttributedScopeStack {\n    parent;\n    scopePath;\n    tokenAttributes;\n    static fromExtension(namesScopeList, contentNameScopesList) {\n        let current = namesScopeList;\n        let scopeNames = namesScopeList?.scopePath ?? null;\n        for (const frame of contentNameScopesList) {\n            scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n            current = new AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n        }\n        return current;\n    }\n    static createRoot(scopeName, tokenAttributes) {\n        return new AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n    }\n    static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n        const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n        const scopePath = new ScopeStack(null, scopeName);\n        const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n        const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n        return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n    }\n    get scopeName() { return this.scopePath.scopeName; }\n    /**\n     * Invariant:\n     * ```\n     * if (parent && !scopePath.extends(parent.scopePath)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(parent, scopePath, tokenAttributes) {\n        this.parent = parent;\n        this.scopePath = scopePath;\n        this.tokenAttributes = tokenAttributes;\n    }\n    toString() {\n        return this.getScopeNames().join(' ');\n    }\n    equals(other) {\n        return AttributedScopeStack.equals(this, other);\n    }\n    static equals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        let foreground = 0;\n        let background = 0;\n        if (styleAttributes !== null) {\n            fontStyle = styleAttributes.fontStyle;\n            foreground = styleAttributes.foregroundId;\n            background = styleAttributes.backgroundId;\n        }\n        return EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n    }\n    pushAttributed(scopePath, grammar) {\n        if (scopePath === null) {\n            return this;\n        }\n        if (scopePath.indexOf(' ') === -1) {\n            // This is the common case and much faster\n            return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n        }\n        const scopes = scopePath.split(/ /g);\n        let result = this;\n        for (const scope of scopes) {\n            result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n        }\n        return result;\n    }\n    static _pushAttributed(target, scopeName, grammar) {\n        const rawMetadata = grammar.getMetadataForScope(scopeName);\n        const newPath = target.scopePath.push(scopeName);\n        const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n        const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n        return new AttributedScopeStack(target, newPath, metadata);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let self = this;\n        while (self && self !== base) {\n            result.push({\n                encodedTokenAttributes: self.tokenAttributes,\n                scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null),\n            });\n            self = self.parent;\n        }\n        return self === base ? result.reverse() : undefined;\n    }\n}\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStackImpl {\n    parent;\n    ruleId;\n    beginRuleCapturedEOL;\n    endRule;\n    nameScopesList;\n    contentNameScopesList;\n    _stackElementBrand = undefined;\n    // TODO remove me\n    static NULL = new StateStackImpl(null, 0, 0, 0, false, null, null, null);\n    /**\n     * The position on the current line where this state was pushed.\n     * This is relevant only while tokenizing a line, to detect endless loops.\n     * Its value is meaningless across lines.\n     */\n    _enterPos;\n    /**\n     * The captured anchor position when this stack element was pushed.\n     * This is relevant only while tokenizing a line, to restore the anchor position when popping.\n     * Its value is meaningless across lines.\n     */\n    _anchorPos;\n    /**\n     * The depth of the stack.\n     */\n    depth;\n    /**\n     * Invariant:\n     * ```\n     * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n     * \tthrow new Error();\n     * }\n     * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(\n    /**\n     * The previous state on the stack (or null for the root state).\n     */\n    parent, \n    /**\n     * The state (rule) that this element represents.\n     */\n    ruleId, enterPos, anchorPos, \n    /**\n     * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n     */\n    beginRuleCapturedEOL, \n    /**\n     * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n     */\n    endRule, \n    /**\n     * The list of scopes containing the \"name\" for this state.\n     */\n    nameScopesList, \n    /**\n     * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n     * This list **must** contain as an element `scopeName`.\n     */\n    contentNameScopesList) {\n        this.parent = parent;\n        this.ruleId = ruleId;\n        this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n        this.depth = this.parent ? this.parent.depth + 1 : 1;\n        this._enterPos = enterPos;\n        this._anchorPos = anchorPos;\n    }\n    equals(other) {\n        if (other === null) {\n            return false;\n        }\n        return StateStackImpl._equals(this, other);\n    }\n    static _equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    static _structuralEquals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.depth !== b.depth ||\n                a.ruleId !== b.ruleId ||\n                a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    clone() {\n        return this;\n    }\n    static _reset(el) {\n        while (el) {\n            el._enterPos = -1;\n            el._anchorPos = -1;\n            el = el.parent;\n        }\n    }\n    reset() {\n        StateStackImpl._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    }\n    push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n        return new StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(grammar) {\n        return grammar.getRule(this.ruleId);\n    }\n    toString() {\n        const r = [];\n        this._writeString(r, 0);\n        return \"[\" + r.join(\",\") + \"]\";\n    }\n    _writeString(res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n        return outIndex;\n    }\n    withContentNameScopesList(contentNameScopeStack) {\n        if (this.contentNameScopesList === contentNameScopeStack) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n    }\n    withEndRule(endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n    }\n    // Used to warn of endless loops\n    hasSameRuleAs(other) {\n        let el = this;\n        while (el && el._enterPos === other._enterPos) {\n            if (el.ruleId === other.ruleId) {\n                return true;\n            }\n            el = el.parent;\n        }\n        return false;\n    }\n    toStateStackFrame() {\n        return {\n            ruleId: ruleIdToNumber(this.ruleId),\n            beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n            endRule: this.endRule,\n            nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n            contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? [],\n        };\n    }\n    static pushFrame(self, frame) {\n        const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n        return new StateStackImpl(self, ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));\n    }\n}\nclass BalancedBracketSelectors {\n    balancedBracketScopes;\n    unbalancedBracketScopes;\n    allowAny = false;\n    constructor(balancedBracketScopes, unbalancedBracketScopes) {\n        this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {\n            if (selector === '*') {\n                this.allowAny = true;\n                return [];\n            }\n            return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n        });\n        this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && this.unbalancedBracketScopes.length === 0;\n    }\n    get matchesNever() {\n        return this.balancedBracketScopes.length === 0 && !this.allowAny;\n    }\n    match(scopes) {\n        for (const excluder of this.unbalancedBracketScopes) {\n            if (excluder(scopes)) {\n                return false;\n            }\n        }\n        for (const includer of this.balancedBracketScopes) {\n            if (includer(scopes)) {\n                return true;\n            }\n        }\n        return this.allowAny;\n    }\n}\nclass LineTokens {\n    balancedBracketSelectors;\n    _emitBinaryTokens;\n    /**\n     * defined only if `false`.\n     */\n    _lineText;\n    /**\n     * used only if `_emitBinaryTokens` is false.\n     */\n    _tokens;\n    /**\n     * used only if `_emitBinaryTokens` is true.\n     */\n    _binaryTokens;\n    _lastTokenEndIndex;\n    _tokenTypeOverrides;\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        {\n            this._lineText = null;\n        }\n        this._tokens = [];\n        this._binaryTokens = [];\n        this._lastTokenEndIndex = 0;\n    }\n    produce(stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    }\n    produceFromScopes(scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            let metadata = scopesList?.tokenAttributes ?? 0;\n            let containsBalancedBrackets = false;\n            if (this.balancedBracketSelectors?.matchesAlways) {\n                containsBalancedBrackets = true;\n            }\n            if (this._tokenTypeOverrides.length > 0 || (this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever)) {\n                // Only generate scope array when required to improve performance\n                const scopes = scopesList?.getScopeNames() ?? [];\n                for (const tokenType of this._tokenTypeOverrides) {\n                    if (tokenType.matcher(scopes)) {\n                        metadata = EncodedTokenAttributes.set(metadata, 0, toOptionalTokenType(tokenType.type), null, -1 /* FontStyle.NotSet */, 0, 0);\n                    }\n                }\n                if (this.balancedBracketSelectors) {\n                    containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n                }\n            }\n            if (containsBalancedBrackets) {\n                metadata = EncodedTokenAttributes.set(metadata, 0, 8 /* OptionalStandardTokenType.NotSet */, containsBalancedBrackets, -1 /* FontStyle.NotSet */, 0, 0);\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        const scopes = scopesList?.getScopeNames() ?? [];\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    }\n    getResult(stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    }\n    getBinaryResult(stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        const result = new Uint32Array(this._binaryTokens.length);\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass SyncRegistry {\n    _onigLibPromise;\n    _grammars = new Map();\n    _rawGrammars = new Map();\n    _injectionGrammars = new Map();\n    _theme;\n    constructor(theme, _onigLibPromise) {\n        this._onigLibPromise = _onigLibPromise;\n        this._theme = theme;\n    }\n    dispose() {\n        for (const grammar of this._grammars.values()) {\n            grammar.dispose();\n        }\n    }\n    setTheme(theme) {\n        this._theme = theme;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    addGrammar(grammar, injectionScopeNames) {\n        this._rawGrammars.set(grammar.scopeName, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n        }\n    }\n    /**\n     * Lookup a raw grammar.\n     */\n    lookup(scopeName) {\n        return this._rawGrammars.get(scopeName);\n    }\n    /**\n     * Returns the injections for the given grammar\n     */\n    injections(targetScope) {\n        return this._injectionGrammars.get(targetScope);\n    }\n    /**\n     * Get the default theme settings\n     */\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    /**\n     * Match a scope in the theme.\n     */\n    themeMatch(scopePath) {\n        return this._theme.match(scopePath);\n    }\n    /**\n     * Lookup a grammar.\n     */\n    async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        if (!this._grammars.has(scopeName)) {\n            let rawGrammar = this._rawGrammars.get(scopeName);\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars.set(scopeName, createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(scopeName);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * The registry that will hold all grammars.\n */\nlet Registry$1 = class Registry {\n    _options;\n    _syncRegistry;\n    _ensureGrammarCache;\n    constructor(options) {\n        this._options = options;\n        this._syncRegistry = new SyncRegistry(Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n        this._ensureGrammarCache = new Map();\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    setTheme(theme, colorMap) {\n        this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n    }\n    /**\n     * Returns a lookup array for color ids.\n     */\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n        return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    loadGrammar(initialScopeName) {\n        return this._loadGrammar(initialScopeName, 0, null, null, null);\n    }\n    async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n        while (dependencyProcessor.Q.length > 0) {\n            await Promise.all(dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName)));\n            dependencyProcessor.processQueue();\n        }\n        return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n    async _loadSingleGrammar(scopeName) {\n        if (!this._ensureGrammarCache.has(scopeName)) {\n            this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n        }\n        return this._ensureGrammarCache.get(scopeName);\n    }\n    async _doLoadSingleGrammar(scopeName) {\n        const grammar = await this._options.loadGrammar(scopeName);\n        if (grammar) {\n            const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n            this._syncRegistry.addGrammar(grammar, injections);\n        }\n    }\n    /**\n     * Adds a rawGrammar.\n     */\n    async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n        this._syncRegistry.addGrammar(rawGrammar, injections);\n        return (await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages));\n    }\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n     */\n    _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n};\nconst INITIAL = StateStackImpl.NULL;\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n */\nconst MetadataConsts = {\n    LANGUAGEID_MASK: 0b00000000000000000000000011111111,\n    TOKEN_TYPE_MASK: 0b00000000000000000000001100000000,\n    BALANCED_BRACKETS_MASK: 0b00000000000000000000010000000000,\n    FONT_STYLE_MASK: 0b00000000000000000011100000000000,\n    FOREGROUND_MASK: 0b00000000011111111100000000000000,\n    BACKGROUND_MASK: 0b11111111100000000000000000000000,\n    LANGUAGEID_OFFSET: 0,\n    TOKEN_TYPE_OFFSET: 8,\n    BALANCED_BRACKETS_OFFSET: 10,\n    FONT_STYLE_OFFSET: 11,\n    FOREGROUND_OFFSET: 15,\n    BACKGROUND_OFFSET: 24,\n};\nclass StackElementMetadata {\n    static toBinaryStr(metadata) {\n        let r = metadata.toString(2);\n        while (r.length < 32)\n            r = `0${r}`;\n        return r;\n    }\n    // public static printMetadata(metadata: number): void {\n    //   const languageId = StackElementMetadata.getLanguageId(metadata)\n    //   const tokenType = StackElementMetadata.getTokenType(metadata)\n    //   const fontStyle = StackElementMetadata.getFontStyle(metadata)\n    //   const foreground = StackElementMetadata.getForeground(metadata)\n    //   const background = StackElementMetadata.getBackground(metadata)\n    //   console.log({\n    //     languageId,\n    //     tokenType,\n    //     fontStyle,\n    //     foreground,\n    //     background,\n    //   })\n    // }\n    static getLanguageId(metadata) {\n        return (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n    }\n    static getTokenType(metadata) {\n        return (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n    }\n    static getForeground(metadata) {\n        return (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n    }\n    static getBackground(metadata) {\n        return (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n    }\n    static set(metadata, languageId, tokenType, fontStyle, foreground, background) {\n        let _languageId = StackElementMetadata.getLanguageId(metadata);\n        let _tokenType = StackElementMetadata.getTokenType(metadata);\n        let _fontStyle = StackElementMetadata.getFontStyle(metadata);\n        let _foreground = StackElementMetadata.getForeground(metadata);\n        let _background = StackElementMetadata.getBackground(metadata);\n        const _containsBalancedBracketsBit = StackElementMetadata.containsBalancedBrackets(metadata)\n            ? 1\n            : 0;\n        if (languageId !== 0)\n            _languageId = languageId;\n        if (tokenType !== 0 /* TemporaryStandardTokenType.Other */) {\n            _tokenType\n                = tokenType === 8 /* TemporaryStandardTokenType.MetaEmbedded */ ? 0 /* StandardTokenType.Other */ : tokenType;\n        }\n        if (fontStyle !== FontStyle.NotSet)\n            _fontStyle = fontStyle;\n        if (foreground !== 0)\n            _foreground = foreground;\n        if (background !== 0)\n            _background = background;\n        return (((_languageId << MetadataConsts.LANGUAGEID_OFFSET)\n            | (_tokenType << MetadataConsts.TOKEN_TYPE_OFFSET)\n            | (_fontStyle << MetadataConsts.FONT_STYLE_OFFSET)\n            | (_containsBalancedBracketsBit << MetadataConsts.BALANCED_BRACKETS_OFFSET)\n            | (_foreground << MetadataConsts.FOREGROUND_OFFSET)\n            | (_background << MetadataConsts.BACKGROUND_OFFSET))\n            >>> 0);\n    }\n}\n\nexport { INITIAL, Registry$1 as Registry, StackElementMetadata, Theme };\n","var FontStyle;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n    FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n    FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n    FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n    FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n})(FontStyle || (FontStyle = {}));\n\nexport { FontStyle };\n","function separateContinuousSpaces(inputs) {\n  const result = [];\n  let current = \"\";\n  function bump() {\n    if (current.length)\n      result.push(current);\n    current = \"\";\n  }\n  inputs.forEach((part, idx) => {\n    if (isTab(part)) {\n      bump();\n      result.push(part);\n    } else if (isSpace(part) && (isSpace(inputs[idx - 1]) || isSpace(inputs[idx + 1]))) {\n      bump();\n      result.push(part);\n    } else {\n      current += part;\n    }\n  });\n  bump();\n  return result;\n}\nfunction isTab(part) {\n  return part === \"\t\";\n}\nfunction isSpace(part) {\n  return part === \" \" || part === \"\t\";\n}\nfunction splitSpaces(parts, type, renderContinuousSpaces = true) {\n  if (type === \"all\")\n    return parts;\n  let leftCount = 0;\n  let rightCount = 0;\n  if (type === \"boundary\") {\n    for (let i = 0; i < parts.length; i++) {\n      if (isSpace(parts[i]))\n        leftCount++;\n      else\n        break;\n    }\n  }\n  if (type === \"boundary\" || type === \"trailing\") {\n    for (let i = parts.length - 1; i >= 0; i--) {\n      if (isSpace(parts[i]))\n        rightCount++;\n      else\n        break;\n    }\n  }\n  const middle = parts.slice(leftCount, parts.length - rightCount);\n  return [\n    ...parts.slice(0, leftCount),\n    ...renderContinuousSpaces ? separateContinuousSpaces(middle) : [middle.join(\"\")],\n    ...parts.slice(parts.length - rightCount)\n  ];\n}\n\nfunction transformerRenderWhitespace(options = {}) {\n  const classMap = {\n    \" \": options.classSpace ?? \"space\",\n    \"\t\": options.classTab ?? \"tab\"\n  };\n  const position = options.position ?? \"all\";\n  const keys = Object.keys(classMap);\n  return {\n    name: \"@shikijs/transformers:render-whitespace\",\n    // We use `root` hook here to ensure it runs after all other transformers\n    root(root) {\n      const pre = root.children[0];\n      const code = pre.children[0];\n      code.children.forEach(\n        (line) => {\n          if (line.type !== \"element\")\n            return;\n          const elements = line.children.filter((token) => token.type === \"element\");\n          const last = elements.length - 1;\n          line.children = line.children.flatMap((token) => {\n            if (token.type !== \"element\")\n              return token;\n            const index = elements.indexOf(token);\n            if (position === \"boundary\" && index !== 0 && index !== last)\n              return token;\n            if (position === \"trailing\" && index !== last)\n              return token;\n            const node = token.children[0];\n            if (node.type !== \"text\" || !node.value)\n              return token;\n            const parts = splitSpaces(\n              node.value.split(/([ \\t])/).filter((i) => i.length),\n              position === \"boundary\" && index === last && last !== 0 ? \"trailing\" : position,\n              position !== \"trailing\"\n            );\n            if (parts.length <= 1)\n              return token;\n            return parts.map((part) => {\n              const clone = {\n                ...token,\n                properties: { ...token.properties }\n              };\n              clone.children = [{ type: \"text\", value: part }];\n              if (keys.includes(part)) {\n                this.addClassToHast(clone, classMap[part]);\n                delete clone.properties.style;\n              }\n              return clone;\n            });\n          });\n        }\n      );\n    }\n  };\n}\n\nfunction transformerRemoveLineBreak() {\n  return {\n    name: \"@shikijs/transformers:remove-line-break\",\n    code(code) {\n      code.children = code.children.filter((line) => !(line.type === \"text\" && line.value === \"\\n\"));\n    }\n  };\n}\n\nfunction transformerRemoveNotationEscape() {\n  return {\n    name: \"@shikijs/transformers:remove-notation-escape\",\n    postprocess(code) {\n      return code.replace(/\\[\\\\!code/g, \"[!code\");\n    }\n  };\n}\n\nfunction transformerCompactLineOptions(lineOptions = []) {\n  return {\n    name: \"@shikijs/transformers:compact-line-options\",\n    line(node, line) {\n      const lineOption = lineOptions.find((o) => o.line === line);\n      if (lineOption?.classes)\n        this.addClassToHast(node, lineOption.classes);\n      return node;\n    }\n  };\n}\n\nfunction createCommentNotationTransformer(name, regex, onMatch, removeEmptyLines = false) {\n  return {\n    name,\n    code(code) {\n      const lines = code.children.filter((i) => i.type === \"element\");\n      const linesToRemove = [];\n      lines.forEach((line, idx) => {\n        let nodeToRemove;\n        for (const child of line.children) {\n          if (child.type !== \"element\")\n            continue;\n          const text = child.children[0];\n          if (text.type !== \"text\")\n            continue;\n          let replaced = false;\n          text.value = text.value.replace(regex, (...match) => {\n            if (onMatch.call(this, match, line, child, lines, idx)) {\n              replaced = true;\n              return \"\";\n            }\n            return match[0];\n          });\n          if (replaced && !text.value.trim())\n            nodeToRemove = child;\n        }\n        if (nodeToRemove) {\n          line.children.splice(line.children.indexOf(nodeToRemove), 1);\n          if (line.children.length === 0) {\n            linesToRemove.push(line);\n            if (removeEmptyLines) {\n              const next = code.children[code.children.indexOf(line) + 1];\n              if (next && next.type === \"text\" && next.value === \"\\n\")\n                linesToRemove.push(next);\n            }\n          }\n        }\n      });\n      for (const line of linesToRemove)\n        code.children.splice(code.children.indexOf(line), 1);\n    }\n  };\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction transformerNotationMap(options = {}, name = \"@shikijs/transformers:notation-map\") {\n  const {\n    classMap = {},\n    classActivePre = void 0\n  } = options;\n  return createCommentNotationTransformer(\n    name,\n    new RegExp(`\\\\s*(?://|/\\\\*|<!--|#|--)\\\\s+\\\\[!code (${Object.keys(classMap).map(escapeRegExp).join(\"|\")})(:\\\\d+)?\\\\]\\\\s*(?:\\\\*/|-->)?`),\n    function([_, match, range = \":1\"], _line, _comment, lines, index) {\n      const lineNum = Number.parseInt(range.slice(1), 10);\n      lines.slice(index, index + lineNum).forEach((line) => {\n        this.addClassToHast(line, classMap[match]);\n      });\n      if (classActivePre)\n        this.addClassToHast(this.pre, classActivePre);\n      return true;\n    }\n  );\n}\n\nfunction transformerNotationFocus(options = {}) {\n  const {\n    classActiveLine = \"focused\",\n    classActivePre = \"has-focused\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap: {\n        focus: classActiveLine\n      },\n      classActivePre\n    },\n    \"@shikijs/transformers:notation-focus\"\n  );\n}\n\nfunction transformerNotationHighlight(options = {}) {\n  const {\n    classActiveLine = \"highlighted\",\n    classActivePre = \"has-highlighted\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap: {\n        highlight: classActiveLine,\n        hl: classActiveLine\n      },\n      classActivePre\n    },\n    \"@shikijs/transformers:notation-highlight\"\n  );\n}\n\nfunction highlightWordInLine(line, ignoredElement, word, className) {\n  const content = getTextContent(line);\n  let index = content.indexOf(word);\n  while (index !== -1) {\n    highlightRange.call(this, line.children, ignoredElement, index, word.length, className);\n    index = content.indexOf(word, index + 1);\n  }\n}\nfunction getTextContent(element) {\n  if (element.type === \"text\")\n    return element.value;\n  if (element.type === \"element\" && element.tagName === \"span\")\n    return element.children.map(getTextContent).join(\"\");\n  return \"\";\n}\nfunction highlightRange(elements, ignoredElement, index, len, className) {\n  let currentIdx = 0;\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    if (element.type !== \"element\" || element.tagName !== \"span\" || element === ignoredElement)\n      continue;\n    const textNode = element.children[0];\n    if (textNode.type !== \"text\")\n      continue;\n    if (hasOverlap([currentIdx, currentIdx + textNode.value.length - 1], [index, index + len])) {\n      const start = Math.max(0, index - currentIdx);\n      const length = len - Math.max(0, currentIdx - index);\n      if (length === 0)\n        continue;\n      const separated = separateToken(element, textNode, start, length);\n      this.addClassToHast(separated[1], className);\n      const output = separated.filter(Boolean);\n      elements.splice(i, 1, ...output);\n      i += output.length - 1;\n    }\n    currentIdx += textNode.value.length;\n  }\n}\nfunction hasOverlap(range1, range2) {\n  return range1[0] <= range2[1] && range1[1] >= range2[0];\n}\nfunction separateToken(span, textNode, index, len) {\n  const text = textNode.value;\n  const createNode = (value) => inheritElement(span, {\n    children: [\n      {\n        type: \"text\",\n        value\n      }\n    ]\n  });\n  return [\n    index > 0 ? createNode(text.slice(0, index)) : void 0,\n    createNode(text.slice(index, index + len)),\n    index + len < text.length ? createNode(text.slice(index + len)) : void 0\n  ];\n}\nfunction inheritElement(original, overrides) {\n  return {\n    ...original,\n    properties: {\n      ...original.properties\n    },\n    ...overrides\n  };\n}\n\nfunction transformerNotationWordHighlight(options = {}) {\n  const {\n    classActiveWord = \"highlighted-word\",\n    classActivePre = void 0\n  } = options;\n  return createCommentNotationTransformer(\n    \"@shikijs/transformers:notation-highlight-word\",\n    // comment-start             | marker    | word           | range | comment-end\n    /^\\s*(?:\\/\\/|\\/\\*|<!--|#)\\s+\\[!code word:((?:\\\\.|[^:\\]])+)(:\\d+)?\\]\\s*(?:\\*\\/|-->)?/,\n    function([_, word, range], _line, comment, lines, index) {\n      const lineNum = range ? Number.parseInt(range.slice(1), 10) : lines.length;\n      word = word.replace(/\\\\(.)/g, \"$1\");\n      lines.slice(index + 1, index + 1 + lineNum).forEach((line) => highlightWordInLine.call(this, line, comment, word, classActiveWord));\n      if (classActivePre)\n        this.addClassToHast(this.pre, classActivePre);\n      return true;\n    },\n    true\n    // remove empty lines\n  );\n}\n\nfunction parseMetaHighlightWords(meta) {\n  if (!meta)\n    return [];\n  const match = Array.from(meta.matchAll(/\\/((?:\\\\.|[^/])+)\\//g));\n  return match.map((v) => v[1].replace(/\\\\(.)/g, \"$1\"));\n}\nfunction transformerMetaWordHighlight(options = {}) {\n  const {\n    className = \"highlighted-word\"\n  } = options;\n  return {\n    name: \"@shikijs/transformers:meta-word-highlight\",\n    preprocess(code, options2) {\n      if (!this.options.meta?.__raw)\n        return;\n      const words = parseMetaHighlightWords(this.options.meta.__raw);\n      options2.decorations || (options2.decorations = []);\n      for (const word of words) {\n        const indexes = findAllSubstringIndexes(code, word);\n        for (const index of indexes) {\n          options2.decorations.push({\n            start: index,\n            end: index + word.length,\n            properties: {\n              class: className\n            }\n          });\n        }\n      }\n    }\n  };\n}\nfunction findAllSubstringIndexes(str, substr) {\n  const indexes = [];\n  let i = -1;\n  while ((i = str.indexOf(substr, i + 1)) !== -1)\n    indexes.push(i);\n  return indexes;\n}\n\nfunction transformerNotationDiff(options = {}) {\n  const {\n    classLineAdd = \"diff add\",\n    classLineRemove = \"diff remove\",\n    classActivePre = \"has-diff\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap: {\n        \"++\": classLineAdd,\n        \"--\": classLineRemove\n      },\n      classActivePre\n    },\n    \"@shikijs/transformers:notation-diff\"\n  );\n}\n\nfunction transformerNotationErrorLevel(options = {}) {\n  const {\n    classMap = {\n      error: [\"highlighted\", \"error\"],\n      warning: [\"highlighted\", \"warning\"]\n    },\n    classActivePre = \"has-highlighted\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap,\n      classActivePre\n    },\n    \"@shikijs/transformers:notation-error-level\"\n  );\n}\n\nfunction parseMetaHighlightString(meta) {\n  if (!meta)\n    return null;\n  const match = meta.match(/\\{([\\d,-]+)\\}/);\n  if (!match)\n    return null;\n  const lines = match[1].split(\",\").flatMap((v) => {\n    const num = v.split(\"-\").map((v2) => Number.parseInt(v2, 10));\n    if (num.length === 1)\n      return [num[0]];\n    else\n      return Array.from({ length: num[1] - num[0] + 1 }, (_, i) => i + num[0]);\n  });\n  return lines;\n}\nconst symbol = Symbol(\"highlighted-lines\");\nfunction transformerMetaHighlight(options = {}) {\n  const {\n    className = \"highlighted\"\n  } = options;\n  return {\n    name: \"@shikijs/transformers:meta-highlight\",\n    line(node, line) {\n      var _a;\n      if (!this.options.meta?.__raw) {\n        return;\n      }\n      (_a = this.meta)[symbol] || (_a[symbol] = parseMetaHighlightString(this.options.meta.__raw));\n      const lines = this.meta[symbol] || [];\n      if (lines.includes(line))\n        this.addClassToHast(node, className);\n      return node;\n    }\n  };\n}\n\nexport { createCommentNotationTransformer, parseMetaHighlightString, parseMetaHighlightWords, transformerCompactLineOptions, transformerMetaHighlight, transformerMetaWordHighlight, transformerNotationDiff, transformerNotationErrorLevel, transformerNotationFocus, transformerNotationHighlight, transformerNotationWordHighlight, transformerRemoveLineBreak, transformerRemoveNotationEscape, transformerRenderWhitespace };\n","import { bundledLanguages } from './langs.mjs';\nexport { bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo } from './langs.mjs';\nimport { g as getWasmInlined } from './chunks/wasm-dynamic.mjs';\nimport { bundledThemes } from './themes.mjs';\nexport { bundledThemesInfo } from './themes.mjs';\nimport { createdBundledHighlighter, createSingletonShorthands } from '@shikijs/core';\nexport * from '@shikijs/core';\nexport { createCssVariablesTheme } from './theme-css-variables.mjs';\n\nconst createHighlighter = /* @__PURE__ */ createdBundledHighlighter(\n  bundledLanguages,\n  bundledThemes,\n  getWasmInlined\n);\nconst {\n  codeToHtml,\n  codeToHast,\n  codeToTokens,\n  codeToTokensBase,\n  codeToTokensWithThemes,\n  getSingletonHighlighter,\n  getLastGrammarState\n} = /* @__PURE__ */ createSingletonShorthands(\n  createHighlighter\n);\nconst getHighlighter = (options) => {\n  return createHighlighter(options);\n};\n\nexport { bundledLanguages, bundledThemes, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighter, getHighlighter, getLastGrammarState, getSingletonHighlighter, getWasmInlined };\n","const getWasmInlined = async (info) => {\n  return import('shiki/wasm').then((wasm) => wasm.default(info));\n};\n\nexport { getWasmInlined as g };\n","const bundledLanguagesInfo = [\n  {\n    \"id\": \"abap\",\n    \"name\": \"ABAP\",\n    \"import\": () => import('./langs/abap.mjs')\n  },\n  {\n    \"id\": \"actionscript-3\",\n    \"name\": \"ActionScript\",\n    \"import\": () => import('./langs/actionscript-3.mjs')\n  },\n  {\n    \"id\": \"ada\",\n    \"name\": \"Ada\",\n    \"import\": () => import('./langs/ada.mjs')\n  },\n  {\n    \"id\": \"angular-html\",\n    \"name\": \"Angular HTML\",\n    \"import\": () => import('./langs/angular-html.mjs')\n  },\n  {\n    \"id\": \"angular-ts\",\n    \"name\": \"Angular TypeScript\",\n    \"import\": () => import('./langs/angular-ts.mjs')\n  },\n  {\n    \"id\": \"apache\",\n    \"name\": \"Apache Conf\",\n    \"import\": () => import('./langs/apache.mjs')\n  },\n  {\n    \"id\": \"apex\",\n    \"name\": \"Apex\",\n    \"import\": () => import('./langs/apex.mjs')\n  },\n  {\n    \"id\": \"apl\",\n    \"name\": \"APL\",\n    \"import\": () => import('./langs/apl.mjs')\n  },\n  {\n    \"id\": \"applescript\",\n    \"name\": \"AppleScript\",\n    \"import\": () => import('./langs/applescript.mjs')\n  },\n  {\n    \"id\": \"ara\",\n    \"name\": \"Ara\",\n    \"import\": () => import('./langs/ara.mjs')\n  },\n  {\n    \"id\": \"asciidoc\",\n    \"name\": \"AsciiDoc\",\n    \"aliases\": [\n      \"adoc\"\n    ],\n    \"import\": () => import('./langs/asciidoc.mjs')\n  },\n  {\n    \"id\": \"asm\",\n    \"name\": \"Assembly\",\n    \"import\": () => import('./langs/asm.mjs')\n  },\n  {\n    \"id\": \"astro\",\n    \"name\": \"Astro\",\n    \"import\": () => import('./langs/astro.mjs')\n  },\n  {\n    \"id\": \"awk\",\n    \"name\": \"AWK\",\n    \"import\": () => import('./langs/awk.mjs')\n  },\n  {\n    \"id\": \"ballerina\",\n    \"name\": \"Ballerina\",\n    \"import\": () => import('./langs/ballerina.mjs')\n  },\n  {\n    \"id\": \"bat\",\n    \"name\": \"Batch File\",\n    \"aliases\": [\n      \"batch\"\n    ],\n    \"import\": () => import('./langs/bat.mjs')\n  },\n  {\n    \"id\": \"beancount\",\n    \"name\": \"Beancount\",\n    \"import\": () => import('./langs/beancount.mjs')\n  },\n  {\n    \"id\": \"berry\",\n    \"name\": \"Berry\",\n    \"aliases\": [\n      \"be\"\n    ],\n    \"import\": () => import('./langs/berry.mjs')\n  },\n  {\n    \"id\": \"bibtex\",\n    \"name\": \"BibTeX\",\n    \"import\": () => import('./langs/bibtex.mjs')\n  },\n  {\n    \"id\": \"bicep\",\n    \"name\": \"Bicep\",\n    \"import\": () => import('./langs/bicep.mjs')\n  },\n  {\n    \"id\": \"blade\",\n    \"name\": \"Blade\",\n    \"import\": () => import('./langs/blade.mjs')\n  },\n  {\n    \"id\": \"c\",\n    \"name\": \"C\",\n    \"import\": () => import('./langs/c.mjs')\n  },\n  {\n    \"id\": \"cadence\",\n    \"name\": \"Cadence\",\n    \"aliases\": [\n      \"cdc\"\n    ],\n    \"import\": () => import('./langs/cadence.mjs')\n  },\n  {\n    \"id\": \"clarity\",\n    \"name\": \"Clarity\",\n    \"import\": () => import('./langs/clarity.mjs')\n  },\n  {\n    \"id\": \"clojure\",\n    \"name\": \"Clojure\",\n    \"aliases\": [\n      \"clj\"\n    ],\n    \"import\": () => import('./langs/clojure.mjs')\n  },\n  {\n    \"id\": \"cmake\",\n    \"name\": \"CMake\",\n    \"import\": () => import('./langs/cmake.mjs')\n  },\n  {\n    \"id\": \"cobol\",\n    \"name\": \"COBOL\",\n    \"import\": () => import('./langs/cobol.mjs')\n  },\n  {\n    \"id\": \"codeowners\",\n    \"name\": \"CODEOWNERS\",\n    \"import\": () => import('./langs/codeowners.mjs')\n  },\n  {\n    \"id\": \"codeql\",\n    \"name\": \"CodeQL\",\n    \"aliases\": [\n      \"ql\"\n    ],\n    \"import\": () => import('./langs/codeql.mjs')\n  },\n  {\n    \"id\": \"coffee\",\n    \"name\": \"CoffeeScript\",\n    \"aliases\": [\n      \"coffeescript\"\n    ],\n    \"import\": () => import('./langs/coffee.mjs')\n  },\n  {\n    \"id\": \"common-lisp\",\n    \"name\": \"Common Lisp\",\n    \"aliases\": [\n      \"lisp\"\n    ],\n    \"import\": () => import('./langs/common-lisp.mjs')\n  },\n  {\n    \"id\": \"coq\",\n    \"name\": \"Coq\",\n    \"import\": () => import('./langs/coq.mjs')\n  },\n  {\n    \"id\": \"cpp\",\n    \"name\": \"C++\",\n    \"aliases\": [\n      \"c++\"\n    ],\n    \"import\": () => import('./langs/cpp.mjs')\n  },\n  {\n    \"id\": \"crystal\",\n    \"name\": \"Crystal\",\n    \"import\": () => import('./langs/crystal.mjs')\n  },\n  {\n    \"id\": \"csharp\",\n    \"name\": \"C#\",\n    \"aliases\": [\n      \"c#\",\n      \"cs\"\n    ],\n    \"import\": () => import('./langs/csharp.mjs')\n  },\n  {\n    \"id\": \"css\",\n    \"name\": \"CSS\",\n    \"import\": () => import('./langs/css.mjs')\n  },\n  {\n    \"id\": \"csv\",\n    \"name\": \"CSV\",\n    \"import\": () => import('./langs/csv.mjs')\n  },\n  {\n    \"id\": \"cue\",\n    \"name\": \"CUE\",\n    \"import\": () => import('./langs/cue.mjs')\n  },\n  {\n    \"id\": \"cypher\",\n    \"name\": \"Cypher\",\n    \"aliases\": [\n      \"cql\"\n    ],\n    \"import\": () => import('./langs/cypher.mjs')\n  },\n  {\n    \"id\": \"d\",\n    \"name\": \"D\",\n    \"import\": () => import('./langs/d.mjs')\n  },\n  {\n    \"id\": \"dart\",\n    \"name\": \"Dart\",\n    \"import\": () => import('./langs/dart.mjs')\n  },\n  {\n    \"id\": \"dax\",\n    \"name\": \"DAX\",\n    \"import\": () => import('./langs/dax.mjs')\n  },\n  {\n    \"id\": \"desktop\",\n    \"name\": \"Desktop\",\n    \"import\": () => import('./langs/desktop.mjs')\n  },\n  {\n    \"id\": \"diff\",\n    \"name\": \"Diff\",\n    \"import\": () => import('./langs/diff.mjs')\n  },\n  {\n    \"id\": \"docker\",\n    \"name\": \"Dockerfile\",\n    \"aliases\": [\n      \"dockerfile\"\n    ],\n    \"import\": () => import('./langs/docker.mjs')\n  },\n  {\n    \"id\": \"dotenv\",\n    \"name\": \"dotEnv\",\n    \"import\": () => import('./langs/dotenv.mjs')\n  },\n  {\n    \"id\": \"dream-maker\",\n    \"name\": \"Dream Maker\",\n    \"import\": () => import('./langs/dream-maker.mjs')\n  },\n  {\n    \"id\": \"edge\",\n    \"name\": \"Edge\",\n    \"import\": () => import('./langs/edge.mjs')\n  },\n  {\n    \"id\": \"elixir\",\n    \"name\": \"Elixir\",\n    \"import\": () => import('./langs/elixir.mjs')\n  },\n  {\n    \"id\": \"elm\",\n    \"name\": \"Elm\",\n    \"import\": () => import('./langs/elm.mjs')\n  },\n  {\n    \"id\": \"emacs-lisp\",\n    \"name\": \"Emacs Lisp\",\n    \"aliases\": [\n      \"elisp\"\n    ],\n    \"import\": () => import('./langs/emacs-lisp.mjs')\n  },\n  {\n    \"id\": \"erb\",\n    \"name\": \"ERB\",\n    \"import\": () => import('./langs/erb.mjs')\n  },\n  {\n    \"id\": \"erlang\",\n    \"name\": \"Erlang\",\n    \"aliases\": [\n      \"erl\"\n    ],\n    \"import\": () => import('./langs/erlang.mjs')\n  },\n  {\n    \"id\": \"fennel\",\n    \"name\": \"Fennel\",\n    \"import\": () => import('./langs/fennel.mjs')\n  },\n  {\n    \"id\": \"fish\",\n    \"name\": \"Fish\",\n    \"import\": () => import('./langs/fish.mjs')\n  },\n  {\n    \"id\": \"fluent\",\n    \"name\": \"Fluent\",\n    \"aliases\": [\n      \"ftl\"\n    ],\n    \"import\": () => import('./langs/fluent.mjs')\n  },\n  {\n    \"id\": \"fortran-fixed-form\",\n    \"name\": \"Fortran (Fixed Form)\",\n    \"aliases\": [\n      \"f\",\n      \"for\",\n      \"f77\"\n    ],\n    \"import\": () => import('./langs/fortran-fixed-form.mjs')\n  },\n  {\n    \"id\": \"fortran-free-form\",\n    \"name\": \"Fortran (Free Form)\",\n    \"aliases\": [\n      \"f90\",\n      \"f95\",\n      \"f03\",\n      \"f08\",\n      \"f18\"\n    ],\n    \"import\": () => import('./langs/fortran-free-form.mjs')\n  },\n  {\n    \"id\": \"fsharp\",\n    \"name\": \"F#\",\n    \"aliases\": [\n      \"f#\",\n      \"fs\"\n    ],\n    \"import\": () => import('./langs/fsharp.mjs')\n  },\n  {\n    \"id\": \"gdresource\",\n    \"name\": \"GDResource\",\n    \"import\": () => import('./langs/gdresource.mjs')\n  },\n  {\n    \"id\": \"gdscript\",\n    \"name\": \"GDScript\",\n    \"import\": () => import('./langs/gdscript.mjs')\n  },\n  {\n    \"id\": \"gdshader\",\n    \"name\": \"GDShader\",\n    \"import\": () => import('./langs/gdshader.mjs')\n  },\n  {\n    \"id\": \"genie\",\n    \"name\": \"Genie\",\n    \"import\": () => import('./langs/genie.mjs')\n  },\n  {\n    \"id\": \"gherkin\",\n    \"name\": \"Gherkin\",\n    \"import\": () => import('./langs/gherkin.mjs')\n  },\n  {\n    \"id\": \"git-commit\",\n    \"name\": \"Git Commit Message\",\n    \"import\": () => import('./langs/git-commit.mjs')\n  },\n  {\n    \"id\": \"git-rebase\",\n    \"name\": \"Git Rebase Message\",\n    \"import\": () => import('./langs/git-rebase.mjs')\n  },\n  {\n    \"id\": \"gleam\",\n    \"name\": \"Gleam\",\n    \"import\": () => import('./langs/gleam.mjs')\n  },\n  {\n    \"id\": \"glimmer-js\",\n    \"name\": \"Glimmer JS\",\n    \"aliases\": [\n      \"gjs\"\n    ],\n    \"import\": () => import('./langs/glimmer-js.mjs')\n  },\n  {\n    \"id\": \"glimmer-ts\",\n    \"name\": \"Glimmer TS\",\n    \"aliases\": [\n      \"gts\"\n    ],\n    \"import\": () => import('./langs/glimmer-ts.mjs')\n  },\n  {\n    \"id\": \"glsl\",\n    \"name\": \"GLSL\",\n    \"import\": () => import('./langs/glsl.mjs')\n  },\n  {\n    \"id\": \"gnuplot\",\n    \"name\": \"Gnuplot\",\n    \"import\": () => import('./langs/gnuplot.mjs')\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Go\",\n    \"import\": () => import('./langs/go.mjs')\n  },\n  {\n    \"id\": \"graphql\",\n    \"name\": \"GraphQL\",\n    \"aliases\": [\n      \"gql\"\n    ],\n    \"import\": () => import('./langs/graphql.mjs')\n  },\n  {\n    \"id\": \"groovy\",\n    \"name\": \"Groovy\",\n    \"import\": () => import('./langs/groovy.mjs')\n  },\n  {\n    \"id\": \"hack\",\n    \"name\": \"Hack\",\n    \"import\": () => import('./langs/hack.mjs')\n  },\n  {\n    \"id\": \"haml\",\n    \"name\": \"Ruby Haml\",\n    \"import\": () => import('./langs/haml.mjs')\n  },\n  {\n    \"id\": \"handlebars\",\n    \"name\": \"Handlebars\",\n    \"aliases\": [\n      \"hbs\"\n    ],\n    \"import\": () => import('./langs/handlebars.mjs')\n  },\n  {\n    \"id\": \"haskell\",\n    \"name\": \"Haskell\",\n    \"aliases\": [\n      \"hs\"\n    ],\n    \"import\": () => import('./langs/haskell.mjs')\n  },\n  {\n    \"id\": \"haxe\",\n    \"name\": \"Haxe\",\n    \"import\": () => import('./langs/haxe.mjs')\n  },\n  {\n    \"id\": \"hcl\",\n    \"name\": \"HashiCorp HCL\",\n    \"import\": () => import('./langs/hcl.mjs')\n  },\n  {\n    \"id\": \"hjson\",\n    \"name\": \"Hjson\",\n    \"import\": () => import('./langs/hjson.mjs')\n  },\n  {\n    \"id\": \"hlsl\",\n    \"name\": \"HLSL\",\n    \"import\": () => import('./langs/hlsl.mjs')\n  },\n  {\n    \"id\": \"html\",\n    \"name\": \"HTML\",\n    \"import\": () => import('./langs/html.mjs')\n  },\n  {\n    \"id\": \"html-derivative\",\n    \"name\": \"HTML (Derivative)\",\n    \"import\": () => import('./langs/html-derivative.mjs')\n  },\n  {\n    \"id\": \"http\",\n    \"name\": \"HTTP\",\n    \"import\": () => import('./langs/http.mjs')\n  },\n  {\n    \"id\": \"hxml\",\n    \"name\": \"HXML\",\n    \"import\": () => import('./langs/hxml.mjs')\n  },\n  {\n    \"id\": \"hy\",\n    \"name\": \"Hy\",\n    \"import\": () => import('./langs/hy.mjs')\n  },\n  {\n    \"id\": \"imba\",\n    \"name\": \"Imba\",\n    \"import\": () => import('./langs/imba.mjs')\n  },\n  {\n    \"id\": \"ini\",\n    \"name\": \"INI\",\n    \"aliases\": [\n      \"properties\"\n    ],\n    \"import\": () => import('./langs/ini.mjs')\n  },\n  {\n    \"id\": \"java\",\n    \"name\": \"Java\",\n    \"import\": () => import('./langs/java.mjs')\n  },\n  {\n    \"id\": \"javascript\",\n    \"name\": \"JavaScript\",\n    \"aliases\": [\n      \"js\"\n    ],\n    \"import\": () => import('./langs/javascript.mjs')\n  },\n  {\n    \"id\": \"jinja\",\n    \"name\": \"Jinja\",\n    \"import\": () => import('./langs/jinja.mjs')\n  },\n  {\n    \"id\": \"jison\",\n    \"name\": \"Jison\",\n    \"import\": () => import('./langs/jison.mjs')\n  },\n  {\n    \"id\": \"json\",\n    \"name\": \"JSON\",\n    \"import\": () => import('./langs/json.mjs')\n  },\n  {\n    \"id\": \"json5\",\n    \"name\": \"JSON5\",\n    \"import\": () => import('./langs/json5.mjs')\n  },\n  {\n    \"id\": \"jsonc\",\n    \"name\": \"JSON with Comments\",\n    \"import\": () => import('./langs/jsonc.mjs')\n  },\n  {\n    \"id\": \"jsonl\",\n    \"name\": \"JSON Lines\",\n    \"import\": () => import('./langs/jsonl.mjs')\n  },\n  {\n    \"id\": \"jsonnet\",\n    \"name\": \"Jsonnet\",\n    \"import\": () => import('./langs/jsonnet.mjs')\n  },\n  {\n    \"id\": \"jssm\",\n    \"name\": \"JSSM\",\n    \"aliases\": [\n      \"fsl\"\n    ],\n    \"import\": () => import('./langs/jssm.mjs')\n  },\n  {\n    \"id\": \"jsx\",\n    \"name\": \"JSX\",\n    \"import\": () => import('./langs/jsx.mjs')\n  },\n  {\n    \"id\": \"julia\",\n    \"name\": \"Julia\",\n    \"aliases\": [\n      \"jl\"\n    ],\n    \"import\": () => import('./langs/julia.mjs')\n  },\n  {\n    \"id\": \"kotlin\",\n    \"name\": \"Kotlin\",\n    \"aliases\": [\n      \"kt\",\n      \"kts\"\n    ],\n    \"import\": () => import('./langs/kotlin.mjs')\n  },\n  {\n    \"id\": \"kusto\",\n    \"name\": \"Kusto\",\n    \"aliases\": [\n      \"kql\"\n    ],\n    \"import\": () => import('./langs/kusto.mjs')\n  },\n  {\n    \"id\": \"latex\",\n    \"name\": \"LaTeX\",\n    \"import\": () => import('./langs/latex.mjs')\n  },\n  {\n    \"id\": \"lean\",\n    \"name\": \"Lean 4\",\n    \"aliases\": [\n      \"lean4\"\n    ],\n    \"import\": () => import('./langs/lean.mjs')\n  },\n  {\n    \"id\": \"less\",\n    \"name\": \"Less\",\n    \"import\": () => import('./langs/less.mjs')\n  },\n  {\n    \"id\": \"liquid\",\n    \"name\": \"Liquid\",\n    \"import\": () => import('./langs/liquid.mjs')\n  },\n  {\n    \"id\": \"log\",\n    \"name\": \"Log file\",\n    \"import\": () => import('./langs/log.mjs')\n  },\n  {\n    \"id\": \"logo\",\n    \"name\": \"Logo\",\n    \"import\": () => import('./langs/logo.mjs')\n  },\n  {\n    \"id\": \"lua\",\n    \"name\": \"Lua\",\n    \"import\": () => import('./langs/lua.mjs')\n  },\n  {\n    \"id\": \"luau\",\n    \"name\": \"Luau\",\n    \"import\": () => import('./langs/luau.mjs')\n  },\n  {\n    \"id\": \"make\",\n    \"name\": \"Makefile\",\n    \"aliases\": [\n      \"makefile\"\n    ],\n    \"import\": () => import('./langs/make.mjs')\n  },\n  {\n    \"id\": \"markdown\",\n    \"name\": \"Markdown\",\n    \"aliases\": [\n      \"md\"\n    ],\n    \"import\": () => import('./langs/markdown.mjs')\n  },\n  {\n    \"id\": \"marko\",\n    \"name\": \"Marko\",\n    \"import\": () => import('./langs/marko.mjs')\n  },\n  {\n    \"id\": \"matlab\",\n    \"name\": \"MATLAB\",\n    \"import\": () => import('./langs/matlab.mjs')\n  },\n  {\n    \"id\": \"mdc\",\n    \"name\": \"MDC\",\n    \"import\": () => import('./langs/mdc.mjs')\n  },\n  {\n    \"id\": \"mdx\",\n    \"name\": \"MDX\",\n    \"import\": () => import('./langs/mdx.mjs')\n  },\n  {\n    \"id\": \"mermaid\",\n    \"name\": \"Mermaid\",\n    \"import\": () => import('./langs/mermaid.mjs')\n  },\n  {\n    \"id\": \"mojo\",\n    \"name\": \"Mojo\",\n    \"import\": () => import('./langs/mojo.mjs')\n  },\n  {\n    \"id\": \"move\",\n    \"name\": \"Move\",\n    \"import\": () => import('./langs/move.mjs')\n  },\n  {\n    \"id\": \"narrat\",\n    \"name\": \"Narrat Language\",\n    \"aliases\": [\n      \"nar\"\n    ],\n    \"import\": () => import('./langs/narrat.mjs')\n  },\n  {\n    \"id\": \"nextflow\",\n    \"name\": \"Nextflow\",\n    \"aliases\": [\n      \"nf\"\n    ],\n    \"import\": () => import('./langs/nextflow.mjs')\n  },\n  {\n    \"id\": \"nginx\",\n    \"name\": \"Nginx\",\n    \"import\": () => import('./langs/nginx.mjs')\n  },\n  {\n    \"id\": \"nim\",\n    \"name\": \"Nim\",\n    \"import\": () => import('./langs/nim.mjs')\n  },\n  {\n    \"id\": \"nix\",\n    \"name\": \"Nix\",\n    \"import\": () => import('./langs/nix.mjs')\n  },\n  {\n    \"id\": \"nushell\",\n    \"name\": \"nushell\",\n    \"aliases\": [\n      \"nu\"\n    ],\n    \"import\": () => import('./langs/nushell.mjs')\n  },\n  {\n    \"id\": \"objective-c\",\n    \"name\": \"Objective-C\",\n    \"aliases\": [\n      \"objc\"\n    ],\n    \"import\": () => import('./langs/objective-c.mjs')\n  },\n  {\n    \"id\": \"objective-cpp\",\n    \"name\": \"Objective-C++\",\n    \"import\": () => import('./langs/objective-cpp.mjs')\n  },\n  {\n    \"id\": \"ocaml\",\n    \"name\": \"OCaml\",\n    \"import\": () => import('./langs/ocaml.mjs')\n  },\n  {\n    \"id\": \"pascal\",\n    \"name\": \"Pascal\",\n    \"import\": () => import('./langs/pascal.mjs')\n  },\n  {\n    \"id\": \"perl\",\n    \"name\": \"Perl\",\n    \"import\": () => import('./langs/perl.mjs')\n  },\n  {\n    \"id\": \"php\",\n    \"name\": \"PHP\",\n    \"import\": () => import('./langs/php.mjs')\n  },\n  {\n    \"id\": \"plsql\",\n    \"name\": \"PL/SQL\",\n    \"import\": () => import('./langs/plsql.mjs')\n  },\n  {\n    \"id\": \"po\",\n    \"name\": \"Gettext PO\",\n    \"aliases\": [\n      \"pot\",\n      \"potx\"\n    ],\n    \"import\": () => import('./langs/po.mjs')\n  },\n  {\n    \"id\": \"postcss\",\n    \"name\": \"PostCSS\",\n    \"import\": () => import('./langs/postcss.mjs')\n  },\n  {\n    \"id\": \"powerquery\",\n    \"name\": \"PowerQuery\",\n    \"import\": () => import('./langs/powerquery.mjs')\n  },\n  {\n    \"id\": \"powershell\",\n    \"name\": \"PowerShell\",\n    \"aliases\": [\n      \"ps\",\n      \"ps1\"\n    ],\n    \"import\": () => import('./langs/powershell.mjs')\n  },\n  {\n    \"id\": \"prisma\",\n    \"name\": \"Prisma\",\n    \"import\": () => import('./langs/prisma.mjs')\n  },\n  {\n    \"id\": \"prolog\",\n    \"name\": \"Prolog\",\n    \"import\": () => import('./langs/prolog.mjs')\n  },\n  {\n    \"id\": \"proto\",\n    \"name\": \"Protocol Buffer 3\",\n    \"aliases\": [\n      \"protobuf\"\n    ],\n    \"import\": () => import('./langs/proto.mjs')\n  },\n  {\n    \"id\": \"pug\",\n    \"name\": \"Pug\",\n    \"aliases\": [\n      \"jade\"\n    ],\n    \"import\": () => import('./langs/pug.mjs')\n  },\n  {\n    \"id\": \"puppet\",\n    \"name\": \"Puppet\",\n    \"import\": () => import('./langs/puppet.mjs')\n  },\n  {\n    \"id\": \"purescript\",\n    \"name\": \"PureScript\",\n    \"import\": () => import('./langs/purescript.mjs')\n  },\n  {\n    \"id\": \"python\",\n    \"name\": \"Python\",\n    \"aliases\": [\n      \"py\"\n    ],\n    \"import\": () => import('./langs/python.mjs')\n  },\n  {\n    \"id\": \"qml\",\n    \"name\": \"QML\",\n    \"import\": () => import('./langs/qml.mjs')\n  },\n  {\n    \"id\": \"qmldir\",\n    \"name\": \"QML Directory\",\n    \"import\": () => import('./langs/qmldir.mjs')\n  },\n  {\n    \"id\": \"qss\",\n    \"name\": \"Qt Style Sheets\",\n    \"import\": () => import('./langs/qss.mjs')\n  },\n  {\n    \"id\": \"r\",\n    \"name\": \"R\",\n    \"import\": () => import('./langs/r.mjs')\n  },\n  {\n    \"id\": \"racket\",\n    \"name\": \"Racket\",\n    \"import\": () => import('./langs/racket.mjs')\n  },\n  {\n    \"id\": \"raku\",\n    \"name\": \"Raku\",\n    \"aliases\": [\n      \"perl6\"\n    ],\n    \"import\": () => import('./langs/raku.mjs')\n  },\n  {\n    \"id\": \"razor\",\n    \"name\": \"ASP.NET Razor\",\n    \"import\": () => import('./langs/razor.mjs')\n  },\n  {\n    \"id\": \"reg\",\n    \"name\": \"Windows Registry Script\",\n    \"import\": () => import('./langs/reg.mjs')\n  },\n  {\n    \"id\": \"regexp\",\n    \"name\": \"RegExp\",\n    \"aliases\": [\n      \"regex\"\n    ],\n    \"import\": () => import('./langs/regexp.mjs')\n  },\n  {\n    \"id\": \"rel\",\n    \"name\": \"Rel\",\n    \"import\": () => import('./langs/rel.mjs')\n  },\n  {\n    \"id\": \"riscv\",\n    \"name\": \"RISC-V\",\n    \"import\": () => import('./langs/riscv.mjs')\n  },\n  {\n    \"id\": \"rst\",\n    \"name\": \"reStructuredText\",\n    \"import\": () => import('./langs/rst.mjs')\n  },\n  {\n    \"id\": \"ruby\",\n    \"name\": \"Ruby\",\n    \"aliases\": [\n      \"rb\"\n    ],\n    \"import\": () => import('./langs/ruby.mjs')\n  },\n  {\n    \"id\": \"rust\",\n    \"name\": \"Rust\",\n    \"aliases\": [\n      \"rs\"\n    ],\n    \"import\": () => import('./langs/rust.mjs')\n  },\n  {\n    \"id\": \"sas\",\n    \"name\": \"SAS\",\n    \"import\": () => import('./langs/sas.mjs')\n  },\n  {\n    \"id\": \"sass\",\n    \"name\": \"Sass\",\n    \"import\": () => import('./langs/sass.mjs')\n  },\n  {\n    \"id\": \"scala\",\n    \"name\": \"Scala\",\n    \"import\": () => import('./langs/scala.mjs')\n  },\n  {\n    \"id\": \"scheme\",\n    \"name\": \"Scheme\",\n    \"import\": () => import('./langs/scheme.mjs')\n  },\n  {\n    \"id\": \"scss\",\n    \"name\": \"SCSS\",\n    \"import\": () => import('./langs/scss.mjs')\n  },\n  {\n    \"id\": \"shaderlab\",\n    \"name\": \"ShaderLab\",\n    \"aliases\": [\n      \"shader\"\n    ],\n    \"import\": () => import('./langs/shaderlab.mjs')\n  },\n  {\n    \"id\": \"shellscript\",\n    \"name\": \"Shell\",\n    \"aliases\": [\n      \"bash\",\n      \"sh\",\n      \"shell\",\n      \"zsh\"\n    ],\n    \"import\": () => import('./langs/shellscript.mjs')\n  },\n  {\n    \"id\": \"shellsession\",\n    \"name\": \"Shell Session\",\n    \"aliases\": [\n      \"console\"\n    ],\n    \"import\": () => import('./langs/shellsession.mjs')\n  },\n  {\n    \"id\": \"smalltalk\",\n    \"name\": \"Smalltalk\",\n    \"import\": () => import('./langs/smalltalk.mjs')\n  },\n  {\n    \"id\": \"solidity\",\n    \"name\": \"Solidity\",\n    \"import\": () => import('./langs/solidity.mjs')\n  },\n  {\n    \"id\": \"soy\",\n    \"name\": \"Closure Templates\",\n    \"aliases\": [\n      \"closure-templates\"\n    ],\n    \"import\": () => import('./langs/soy.mjs')\n  },\n  {\n    \"id\": \"sparql\",\n    \"name\": \"SPARQL\",\n    \"import\": () => import('./langs/sparql.mjs')\n  },\n  {\n    \"id\": \"splunk\",\n    \"name\": \"Splunk Query Language\",\n    \"aliases\": [\n      \"spl\"\n    ],\n    \"import\": () => import('./langs/splunk.mjs')\n  },\n  {\n    \"id\": \"sql\",\n    \"name\": \"SQL\",\n    \"import\": () => import('./langs/sql.mjs')\n  },\n  {\n    \"id\": \"ssh-config\",\n    \"name\": \"SSH Config\",\n    \"import\": () => import('./langs/ssh-config.mjs')\n  },\n  {\n    \"id\": \"stata\",\n    \"name\": \"Stata\",\n    \"import\": () => import('./langs/stata.mjs')\n  },\n  {\n    \"id\": \"stylus\",\n    \"name\": \"Stylus\",\n    \"aliases\": [\n      \"styl\"\n    ],\n    \"import\": () => import('./langs/stylus.mjs')\n  },\n  {\n    \"id\": \"svelte\",\n    \"name\": \"Svelte\",\n    \"import\": () => import('./langs/svelte.mjs')\n  },\n  {\n    \"id\": \"swift\",\n    \"name\": \"Swift\",\n    \"import\": () => import('./langs/swift.mjs')\n  },\n  {\n    \"id\": \"system-verilog\",\n    \"name\": \"SystemVerilog\",\n    \"import\": () => import('./langs/system-verilog.mjs')\n  },\n  {\n    \"id\": \"systemd\",\n    \"name\": \"Systemd Units\",\n    \"import\": () => import('./langs/systemd.mjs')\n  },\n  {\n    \"id\": \"tasl\",\n    \"name\": \"Tasl\",\n    \"import\": () => import('./langs/tasl.mjs')\n  },\n  {\n    \"id\": \"tcl\",\n    \"name\": \"Tcl\",\n    \"import\": () => import('./langs/tcl.mjs')\n  },\n  {\n    \"id\": \"templ\",\n    \"name\": \"Templ\",\n    \"import\": () => import('./langs/templ.mjs')\n  },\n  {\n    \"id\": \"terraform\",\n    \"name\": \"Terraform\",\n    \"aliases\": [\n      \"tf\",\n      \"tfvars\"\n    ],\n    \"import\": () => import('./langs/terraform.mjs')\n  },\n  {\n    \"id\": \"tex\",\n    \"name\": \"TeX\",\n    \"import\": () => import('./langs/tex.mjs')\n  },\n  {\n    \"id\": \"toml\",\n    \"name\": \"TOML\",\n    \"import\": () => import('./langs/toml.mjs')\n  },\n  {\n    \"id\": \"ts-tags\",\n    \"name\": \"TypeScript with Tags\",\n    \"aliases\": [\n      \"lit\"\n    ],\n    \"import\": () => import('./langs/ts-tags.mjs')\n  },\n  {\n    \"id\": \"tsv\",\n    \"name\": \"TSV\",\n    \"import\": () => import('./langs/tsv.mjs')\n  },\n  {\n    \"id\": \"tsx\",\n    \"name\": \"TSX\",\n    \"import\": () => import('./langs/tsx.mjs')\n  },\n  {\n    \"id\": \"turtle\",\n    \"name\": \"Turtle\",\n    \"import\": () => import('./langs/turtle.mjs')\n  },\n  {\n    \"id\": \"twig\",\n    \"name\": \"Twig\",\n    \"import\": () => import('./langs/twig.mjs')\n  },\n  {\n    \"id\": \"typescript\",\n    \"name\": \"TypeScript\",\n    \"aliases\": [\n      \"ts\"\n    ],\n    \"import\": () => import('./langs/typescript.mjs')\n  },\n  {\n    \"id\": \"typespec\",\n    \"name\": \"TypeSpec\",\n    \"aliases\": [\n      \"tsp\"\n    ],\n    \"import\": () => import('./langs/typespec.mjs')\n  },\n  {\n    \"id\": \"typst\",\n    \"name\": \"Typst\",\n    \"aliases\": [\n      \"typ\"\n    ],\n    \"import\": () => import('./langs/typst.mjs')\n  },\n  {\n    \"id\": \"v\",\n    \"name\": \"V\",\n    \"import\": () => import('./langs/v.mjs')\n  },\n  {\n    \"id\": \"vala\",\n    \"name\": \"Vala\",\n    \"import\": () => import('./langs/vala.mjs')\n  },\n  {\n    \"id\": \"vb\",\n    \"name\": \"Visual Basic\",\n    \"aliases\": [\n      \"cmd\"\n    ],\n    \"import\": () => import('./langs/vb.mjs')\n  },\n  {\n    \"id\": \"verilog\",\n    \"name\": \"Verilog\",\n    \"import\": () => import('./langs/verilog.mjs')\n  },\n  {\n    \"id\": \"vhdl\",\n    \"name\": \"VHDL\",\n    \"import\": () => import('./langs/vhdl.mjs')\n  },\n  {\n    \"id\": \"viml\",\n    \"name\": \"Vim Script\",\n    \"aliases\": [\n      \"vim\",\n      \"vimscript\"\n    ],\n    \"import\": () => import('./langs/viml.mjs')\n  },\n  {\n    \"id\": \"vue\",\n    \"name\": \"Vue\",\n    \"import\": () => import('./langs/vue.mjs')\n  },\n  {\n    \"id\": \"vue-html\",\n    \"name\": \"Vue HTML\",\n    \"import\": () => import('./langs/vue-html.mjs')\n  },\n  {\n    \"id\": \"vyper\",\n    \"name\": \"Vyper\",\n    \"aliases\": [\n      \"vy\"\n    ],\n    \"import\": () => import('./langs/vyper.mjs')\n  },\n  {\n    \"id\": \"wasm\",\n    \"name\": \"WebAssembly\",\n    \"import\": () => import('./langs/wasm.mjs')\n  },\n  {\n    \"id\": \"wenyan\",\n    \"name\": \"Wenyan\",\n    \"aliases\": [\n      \"\\u6587\\u8A00\"\n    ],\n    \"import\": () => import('./langs/wenyan.mjs')\n  },\n  {\n    \"id\": \"wgsl\",\n    \"name\": \"WGSL\",\n    \"import\": () => import('./langs/wgsl.mjs')\n  },\n  {\n    \"id\": \"wikitext\",\n    \"name\": \"Wikitext\",\n    \"aliases\": [\n      \"mediawiki\",\n      \"wiki\"\n    ],\n    \"import\": () => import('./langs/wikitext.mjs')\n  },\n  {\n    \"id\": \"wolfram\",\n    \"name\": \"Wolfram\",\n    \"aliases\": [\n      \"wl\"\n    ],\n    \"import\": () => import('./langs/wolfram.mjs')\n  },\n  {\n    \"id\": \"xml\",\n    \"name\": \"XML\",\n    \"import\": () => import('./langs/xml.mjs')\n  },\n  {\n    \"id\": \"xsl\",\n    \"name\": \"XSL\",\n    \"import\": () => import('./langs/xsl.mjs')\n  },\n  {\n    \"id\": \"yaml\",\n    \"name\": \"YAML\",\n    \"aliases\": [\n      \"yml\"\n    ],\n    \"import\": () => import('./langs/yaml.mjs')\n  },\n  {\n    \"id\": \"zenscript\",\n    \"name\": \"ZenScript\",\n    \"import\": () => import('./langs/zenscript.mjs')\n  },\n  {\n    \"id\": \"zig\",\n    \"name\": \"Zig\",\n    \"import\": () => import('./langs/zig.mjs')\n  }\n];\nconst bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map((i) => [i.id, i.import]));\nconst bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap((i) => i.aliases?.map((a) => [a, i.import]) || []));\nconst bundledLanguages = {\n  ...bundledLanguagesBase,\n  ...bundledLanguagesAlias\n};\n\nexport { bundledLanguages, bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo };\n","function createCssVariablesTheme(options = {}) {\n  const {\n    name = \"css-variables\",\n    variablePrefix = \"--shiki-\",\n    fontStyle = true\n  } = options;\n  const variable = (name2) => {\n    if (options.variableDefaults?.[name2])\n      return `var(${variablePrefix}${name2}, ${options.variableDefaults[name2]})`;\n    return `var(${variablePrefix}${name2})`;\n  };\n  const theme = {\n    name,\n    type: \"dark\",\n    colors: {\n      \"editor.foreground\": variable(\"foreground\"),\n      \"editor.background\": variable(\"background\"),\n      \"terminal.ansiBlack\": variable(\"ansi-black\"),\n      \"terminal.ansiRed\": variable(\"ansi-red\"),\n      \"terminal.ansiGreen\": variable(\"ansi-green\"),\n      \"terminal.ansiYellow\": variable(\"ansi-yellow\"),\n      \"terminal.ansiBlue\": variable(\"ansi-blue\"),\n      \"terminal.ansiMagenta\": variable(\"ansi-magenta\"),\n      \"terminal.ansiCyan\": variable(\"ansi-cyan\"),\n      \"terminal.ansiWhite\": variable(\"ansi-white\"),\n      \"terminal.ansiBrightBlack\": variable(\"ansi-bright-black\"),\n      \"terminal.ansiBrightRed\": variable(\"ansi-bright-red\"),\n      \"terminal.ansiBrightGreen\": variable(\"ansi-bright-green\"),\n      \"terminal.ansiBrightYellow\": variable(\"ansi-bright-yellow\"),\n      \"terminal.ansiBrightBlue\": variable(\"ansi-bright-blue\"),\n      \"terminal.ansiBrightMagenta\": variable(\"ansi-bright-magenta\"),\n      \"terminal.ansiBrightCyan\": variable(\"ansi-bright-cyan\"),\n      \"terminal.ansiBrightWhite\": variable(\"ansi-bright-white\")\n    },\n    tokenColors: [\n      {\n        scope: [\n          \"keyword.operator.accessor\",\n          \"meta.group.braces.round.function.arguments\",\n          \"meta.template.expression\",\n          \"markup.fenced_code meta.embedded.block\"\n        ],\n        settings: {\n          foreground: variable(\"foreground\")\n        }\n      },\n      {\n        scope: \"emphasis\",\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: [\"strong\", \"markup.heading.markdown\", \"markup.bold.markdown\"],\n        settings: {\n          fontStyle: \"bold\"\n        }\n      },\n      {\n        scope: [\"markup.italic.markdown\"],\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: \"meta.link.inline.markdown\",\n        settings: {\n          fontStyle: \"underline\",\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        scope: [\"string\", \"markup.fenced_code\", \"markup.inline\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        scope: [\"comment\", \"string.quoted.docstring.multi\"],\n        settings: {\n          foreground: variable(\"token-comment\")\n        }\n      },\n      {\n        scope: [\n          \"constant.numeric\",\n          \"constant.language\",\n          \"constant.other.placeholder\",\n          \"constant.character.format.placeholder\",\n          \"variable.language.this\",\n          \"variable.other.object\",\n          \"variable.other.class\",\n          \"variable.other.constant\",\n          \"meta.property-name\",\n          \"meta.property-value\",\n          \"support\"\n        ],\n        settings: {\n          foreground: variable(\"token-constant\")\n        }\n      },\n      {\n        scope: [\n          \"keyword\",\n          \"storage.modifier\",\n          \"storage.type\",\n          \"storage.control.clojure\",\n          \"entity.name.function.clojure\",\n          \"entity.name.tag.yaml\",\n          \"support.function.node\",\n          \"support.type.property-name.json\",\n          \"punctuation.separator.key-value\",\n          \"punctuation.definition.template-expression\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        scope: \"variable.parameter.function\",\n        settings: {\n          foreground: variable(\"token-parameter\")\n        }\n      },\n      {\n        scope: [\n          \"support.function\",\n          \"entity.name.type\",\n          \"entity.other.inherited-class\",\n          \"meta.function-call\",\n          \"meta.instance.constructor\",\n          \"entity.other.attribute-name\",\n          \"entity.name.function\",\n          \"constant.keyword.clojure\"\n        ],\n        settings: {\n          foreground: variable(\"token-function\")\n        }\n      },\n      {\n        scope: [\n          \"entity.name.tag\",\n          \"string.quoted\",\n          \"string.regexp\",\n          \"string.interpolated\",\n          \"string.template\",\n          \"string.unquoted.plain.out.yaml\",\n          \"keyword.other.template\"\n        ],\n        settings: {\n          foreground: variable(\"token-string-expression\")\n        }\n      },\n      {\n        scope: [\n          \"punctuation.definition.arguments\",\n          \"punctuation.definition.dict\",\n          \"punctuation.separator\",\n          \"meta.function-call.arguments\"\n        ],\n        settings: {\n          foreground: variable(\"token-punctuation\")\n        }\n      },\n      {\n        // [Custom] Markdown links\n        scope: [\n          \"markup.underline.link\",\n          \"punctuation.definition.metadata.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        // [Custom] Markdown list\n        scope: [\"beginning.punctuation.definition.list.markdown\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        // [Custom] Markdown punctuation definition brackets\n        scope: [\n          \"punctuation.definition.string.begin.markdown\",\n          \"punctuation.definition.string.end.markdown\",\n          \"string.other.link.title.markdown\",\n          \"string.other.link.description.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        // [Custom] Diff\n        scope: [\n          \"markup.inserted\",\n          \"meta.diff.header.to-file\",\n          \"punctuation.definition.inserted\"\n        ],\n        settings: {\n          foreground: variable(\"token-inserted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.deleted\",\n          \"meta.diff.header.from-file\",\n          \"punctuation.definition.deleted\"\n        ],\n        settings: {\n          foreground: variable(\"token-deleted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.changed\",\n          \"punctuation.definition.changed\"\n        ],\n        settings: {\n          foreground: variable(\"token-changed\")\n        }\n      }\n    ]\n  };\n  if (!fontStyle) {\n    theme.tokenColors = theme.tokenColors?.map((tokenColor) => {\n      if (tokenColor.settings?.fontStyle)\n        delete tokenColor.settings.fontStyle;\n      return tokenColor;\n    });\n  }\n  return theme;\n}\n\nexport { createCssVariablesTheme };\n","const bundledThemesInfo = [\n  {\n    \"id\": \"andromeeda\",\n    \"displayName\": \"Andromeeda\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/andromeeda.mjs')\n  },\n  {\n    \"id\": \"aurora-x\",\n    \"displayName\": \"Aurora X\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/aurora-x.mjs')\n  },\n  {\n    \"id\": \"ayu-dark\",\n    \"displayName\": \"Ayu Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/ayu-dark.mjs')\n  },\n  {\n    \"id\": \"catppuccin-frappe\",\n    \"displayName\": \"Catppuccin Frapp\\xE9\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-frappe.mjs')\n  },\n  {\n    \"id\": \"catppuccin-latte\",\n    \"displayName\": \"Catppuccin Latte\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/catppuccin-latte.mjs')\n  },\n  {\n    \"id\": \"catppuccin-macchiato\",\n    \"displayName\": \"Catppuccin Macchiato\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-macchiato.mjs')\n  },\n  {\n    \"id\": \"catppuccin-mocha\",\n    \"displayName\": \"Catppuccin Mocha\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-mocha.mjs')\n  },\n  {\n    \"id\": \"dark-plus\",\n    \"displayName\": \"Dark Plus\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dark-plus.mjs')\n  },\n  {\n    \"id\": \"dracula\",\n    \"displayName\": \"Dracula Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula.mjs')\n  },\n  {\n    \"id\": \"dracula-soft\",\n    \"displayName\": \"Dracula Theme Soft\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula-soft.mjs')\n  },\n  {\n    \"id\": \"everforest-dark\",\n    \"displayName\": \"Everforest Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/everforest-dark.mjs')\n  },\n  {\n    \"id\": \"everforest-light\",\n    \"displayName\": \"Everforest Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/everforest-light.mjs')\n  },\n  {\n    \"id\": \"github-dark\",\n    \"displayName\": \"GitHub Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark.mjs')\n  },\n  {\n    \"id\": \"github-dark-default\",\n    \"displayName\": \"GitHub Dark Default\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-default.mjs')\n  },\n  {\n    \"id\": \"github-dark-dimmed\",\n    \"displayName\": \"GitHub Dark Dimmed\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-dimmed.mjs')\n  },\n  {\n    \"id\": \"github-dark-high-contrast\",\n    \"displayName\": \"GitHub Dark High Contrast\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-high-contrast.mjs')\n  },\n  {\n    \"id\": \"github-light\",\n    \"displayName\": \"GitHub Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light.mjs')\n  },\n  {\n    \"id\": \"github-light-default\",\n    \"displayName\": \"GitHub Light Default\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-default.mjs')\n  },\n  {\n    \"id\": \"github-light-high-contrast\",\n    \"displayName\": \"GitHub Light High Contrast\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-high-contrast.mjs')\n  },\n  {\n    \"id\": \"houston\",\n    \"displayName\": \"Houston\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/houston.mjs')\n  },\n  {\n    \"id\": \"laserwave\",\n    \"displayName\": \"LaserWave\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/laserwave.mjs')\n  },\n  {\n    \"id\": \"light-plus\",\n    \"displayName\": \"Light Plus\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/light-plus.mjs')\n  },\n  {\n    \"id\": \"material-theme\",\n    \"displayName\": \"Material Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme.mjs')\n  },\n  {\n    \"id\": \"material-theme-darker\",\n    \"displayName\": \"Material Theme Darker\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-darker.mjs')\n  },\n  {\n    \"id\": \"material-theme-lighter\",\n    \"displayName\": \"Material Theme Lighter\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/material-theme-lighter.mjs')\n  },\n  {\n    \"id\": \"material-theme-ocean\",\n    \"displayName\": \"Material Theme Ocean\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-ocean.mjs')\n  },\n  {\n    \"id\": \"material-theme-palenight\",\n    \"displayName\": \"Material Theme Palenight\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-palenight.mjs')\n  },\n  {\n    \"id\": \"min-dark\",\n    \"displayName\": \"Min Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/min-dark.mjs')\n  },\n  {\n    \"id\": \"min-light\",\n    \"displayName\": \"Min Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/min-light.mjs')\n  },\n  {\n    \"id\": \"monokai\",\n    \"displayName\": \"Monokai\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/monokai.mjs')\n  },\n  {\n    \"id\": \"night-owl\",\n    \"displayName\": \"Night Owl\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/night-owl.mjs')\n  },\n  {\n    \"id\": \"nord\",\n    \"displayName\": \"Nord\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/nord.mjs')\n  },\n  {\n    \"id\": \"one-dark-pro\",\n    \"displayName\": \"One Dark Pro\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/one-dark-pro.mjs')\n  },\n  {\n    \"id\": \"one-light\",\n    \"displayName\": \"One Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/one-light.mjs')\n  },\n  {\n    \"id\": \"poimandres\",\n    \"displayName\": \"Poimandres\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/poimandres.mjs')\n  },\n  {\n    \"id\": \"red\",\n    \"displayName\": \"Red\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/red.mjs')\n  },\n  {\n    \"id\": \"rose-pine\",\n    \"displayName\": \"Ros\\xE9 Pine\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine.mjs')\n  },\n  {\n    \"id\": \"rose-pine-dawn\",\n    \"displayName\": \"Ros\\xE9 Pine Dawn\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/rose-pine-dawn.mjs')\n  },\n  {\n    \"id\": \"rose-pine-moon\",\n    \"displayName\": \"Ros\\xE9 Pine Moon\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine-moon.mjs')\n  },\n  {\n    \"id\": \"slack-dark\",\n    \"displayName\": \"Slack Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/slack-dark.mjs')\n  },\n  {\n    \"id\": \"slack-ochin\",\n    \"displayName\": \"Slack Ochin\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/slack-ochin.mjs')\n  },\n  {\n    \"id\": \"snazzy-light\",\n    \"displayName\": \"Snazzy Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/snazzy-light.mjs')\n  },\n  {\n    \"id\": \"solarized-dark\",\n    \"displayName\": \"Solarized Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/solarized-dark.mjs')\n  },\n  {\n    \"id\": \"solarized-light\",\n    \"displayName\": \"Solarized Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/solarized-light.mjs')\n  },\n  {\n    \"id\": \"synthwave-84\",\n    \"displayName\": \"Synthwave '84\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/synthwave-84.mjs')\n  },\n  {\n    \"id\": \"tokyo-night\",\n    \"displayName\": \"Tokyo Night\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/tokyo-night.mjs')\n  },\n  {\n    \"id\": \"vesper\",\n    \"displayName\": \"Vesper\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vesper.mjs')\n  },\n  {\n    \"id\": \"vitesse-black\",\n    \"displayName\": \"Vitesse Black\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-black.mjs')\n  },\n  {\n    \"id\": \"vitesse-dark\",\n    \"displayName\": \"Vitesse Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-dark.mjs')\n  },\n  {\n    \"id\": \"vitesse-light\",\n    \"displayName\": \"Vitesse Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/vitesse-light.mjs')\n  }\n];\nconst bundledThemes = Object.fromEntries(bundledThemesInfo.map((i) => [i.id, i.import]));\n\nexport { bundledThemes, bundledThemesInfo };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"shiki-my-code:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(\"./style-index\" != chunkId) {\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkshiki_my_code\"] = self[\"webpackChunkshiki_my_code\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","BlockControls","ToolbarGroup","ToolbarButton","Control","mode","setMode","createElement","icon","label","isActive","onClick","RichText","useBlockProps","createBlock","getDefaultBlockName","useEffect","useState","Panel","codeToHtml","transformerNotationDiff","transformerNotationHighlight","transformerNotationFocus","transformerNotationWordHighlight","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CodeEdit","attributes","setAttributes","onRemove","insertBlocksAfter","mergeBlocks","highlightCode","_content","code","lang","themes","light","themeLight","dark","themeDark","transformers","contentHighlight","content","blockProps","className","showNumber","children","props","tagName","identifier","value","onChange","allowedFormats","onMerge","placeholder","preserveWhiteSpace","__unstablePastePlainText","__unstableOnSplitAtDoubleLineEnd","dangerouslySetInnerHTML","__html","registerBlockType","Edit","metadata","name","transforms","from","type","blocks","transform","edit","languages","PanelBody","ToggleControl","SelectControl","InspectorControls","title","checked","options"],"sourceRoot":""}