{"version":3,"file":"vendors-node_modules_shiki_dist_langs_elm_mjs.js","mappings":"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","sources":["webpack://shiki-my-code/./node_modules/shiki/dist/langs/elm.mjs"],"sourcesContent":["import glsl from './glsl.mjs';\nimport './c.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Elm\", \"fileTypes\": [\"elm\"], \"name\": \"elm\", \"patterns\": [{ \"include\": \"#import\" }, { \"include\": \"#module\" }, { \"include\": \"#debug\" }, { \"include\": \"#comments\" }, { \"match\": \"\\\\b(_)\\\\b\", \"name\": \"keyword.unused.elm\" }, { \"include\": \"#type-signature\" }, { \"include\": \"#type-declaration\" }, { \"include\": \"#type-alias-declaration\" }, { \"include\": \"#string-triple\" }, { \"include\": \"#string-quote\" }, { \"include\": \"#char\" }, { \"comment\": \"Floats are always decimal\", \"match\": \"\\\\b([0-9]+\\\\.[0-9]+([eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)\\\\b\", \"name\": \"constant.numeric.float.elm\" }, { \"match\": \"\\\\b([0-9]+)\\\\b\", \"name\": \"constant.numeric.elm\" }, { \"match\": \"\\\\b(0x[0-9a-fA-F]+)\\\\b\", \"name\": \"constant.numeric.elm\" }, { \"include\": \"#glsl\" }, { \"include\": \"#record-prefix\" }, { \"include\": \"#module-prefix\" }, { \"include\": \"#constructor\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.bracket.elm\" }, \"2\": { \"name\": \"record.name.elm\" }, \"3\": { \"name\": \"keyword.pipe.elm\" }, \"4\": { \"name\": \"entity.name.record.field.elm\" } }, \"match\": \"(\\\\{)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\|)\\\\s+([a-z][a-zA-Z0-9_]*)\", \"name\": \"meta.record.field.update.elm\" }, { \"captures\": { \"1\": { \"name\": \"keyword.pipe.elm\" }, \"2\": { \"name\": \"entity.name.record.field.elm\" }, \"3\": { \"name\": \"keyword.operator.assignment.elm\" } }, \"match\": \"(\\\\|)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\=)\", \"name\": \"meta.record.field.update.elm\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.bracket.elm\" }, \"2\": { \"name\": \"record.name.elm\" } }, \"match\": \"(\\\\{)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+$\", \"name\": \"meta.record.field.update.elm\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.bracket.elm\" }, \"2\": { \"name\": \"entity.name.record.field.elm\" }, \"3\": { \"name\": \"keyword.operator.assignment.elm\" } }, \"match\": \"(\\\\{)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\=)\", \"name\": \"meta.record.field.elm\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.comma.elm\" }, \"2\": { \"name\": \"entity.name.record.field.elm\" }, \"3\": { \"name\": \"keyword.operator.assignment.elm\" } }, \"match\": \"(,)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\=)\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"(\\\\}|\\\\{)\", \"name\": \"punctuation.bracket.elm\" }, { \"include\": \"#unit\" }, { \"include\": \"#comma\" }, { \"include\": \"#parens\" }, { \"match\": \"(->)\", \"name\": \"keyword.operator.arrow.elm\" }, { \"include\": \"#infix_op\" }, { \"match\": \"(\\\\=|\\\\:|\\\\||\\\\\\\\)\", \"name\": \"keyword.other.elm\" }, { \"match\": \"\\\\b(type|as|port|exposing|alias|infixl|infixr|infix)\\\\s+\", \"name\": \"keyword.other.elm\" }, { \"match\": \"\\\\b(if|then|else|case|of|let|in)\\\\s+\", \"name\": \"keyword.control.elm\" }, { \"include\": \"#record-accessor\" }, { \"include\": \"#top_level_value\" }, { \"include\": \"#value\" }, { \"include\": \"#period\" }, { \"include\": \"#square_brackets\" }], \"repository\": { \"block_comment\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\{-(?!#)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.elm\" } }, \"end\": \"-\\\\}\", \"name\": \"comment.block.elm\", \"patterns\": [{ \"include\": \"#block_comment\" }] }, \"char\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.char.begin.elm\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.char.end.elm\" } }, \"name\": \"string.quoted.single.elm\", \"patterns\": [{ \"match\": `\\\\\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"'\\\\&]|x[0-9a-fA-F]{1,5})`, \"name\": \"constant.character.escape.elm\" }, { \"match\": \"\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]\", \"name\": \"constant.character.escape.control.elm\" }] }, \"comma\": { \"match\": \"(,)\", \"name\": \"punctuation.separator.comma.elm\" }, \"comments\": { \"patterns\": [{ \"begin\": \"--\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.elm\" } }, \"end\": \"$\", \"name\": \"comment.line.double-dash.elm\" }, { \"include\": \"#block_comment\" }] }, \"constructor\": { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"constant.type-constructor.elm\" }, \"debug\": { \"match\": \"\\\\b(Debug)\\\\b\", \"name\": \"invalid.illegal.debug.elm\" }, \"glsl\": { \"begin\": \"(\\\\[)(glsl)(\\\\|)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.glsl.bracket.elm\" }, \"2\": { \"name\": \"entity.glsl.name.elm\" }, \"3\": { \"name\": \"entity.glsl.bracket.elm\" } }, \"end\": \"(\\\\|\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"entity.glsl.bracket.elm\" } }, \"name\": \"meta.embedded.block.glsl\", \"patterns\": [{ \"include\": \"source.glsl\" }] }, \"import\": { \"begin\": \"^\\\\b(import)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.import.elm\" } }, \"end\": \"\\\\n(?!\\\\s)\", \"name\": \"meta.import.elm\", \"patterns\": [{ \"match\": \"(as|exposing)\", \"name\": \"keyword.control.elm\" }, { \"include\": \"#module_chunk\" }, { \"include\": \"#period\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#module-exports\" }] }, \"infix_op\": { \"match\": \"(</>|<\\\\?>|<\\\\||<=|\\\\|\\\\||&&|>=|\\\\|>|\\\\|=|\\\\|\\\\.|\\\\+\\\\+|::|/=|==|//|>>|<<|<|>|\\\\^|\\\\+|-|/|\\\\*)\", \"name\": \"keyword.operator.elm\" }, \"module\": { \"begin\": \"^\\\\b((port |effect )?module)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.elm\" } }, \"end\": \"\\\\n(?!\\\\s)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.elm\" } }, \"name\": \"meta.declaration.module.elm\", \"patterns\": [{ \"include\": \"#module_chunk\" }, { \"include\": \"#period\" }, { \"match\": \"(exposing)\", \"name\": \"keyword.other.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#module-exports\" }] }, \"module-exports\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.parens.module-export.elm\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parens.module-export.elm\" } }, \"name\": \"meta.declaration.exports.elm\", \"patterns\": [{ \"match\": \"\\\\b[a-z][a-zA-Z_'0-9]*\", \"name\": \"entity.name.function.elm\" }, { \"match\": \"\\\\b[A-Z][A-Za-z_'0-9]*\", \"name\": \"storage.type.elm\" }, { \"match\": \",\", \"name\": \"punctuation.separator.comma.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#comma\" }, { \"match\": \"\\\\(\\\\.\\\\.\\\\)\", \"name\": \"punctuation.parens.ellipses.elm\" }, { \"match\": \"\\\\.\\\\.\", \"name\": \"punctuation.parens.ellipses.elm\" }, { \"include\": \"#infix_op\" }, { \"comment\": \"So named because I don't know what to call this.\", \"match\": \"\\\\(.*?\\\\)\", \"name\": \"meta.other.unknown.elm\" }] }, \"module-prefix\": { \"captures\": { \"1\": { \"name\": \"support.module.elm\" }, \"2\": { \"name\": \"keyword.other.period.elm\" } }, \"match\": \"([A-Z][a-zA-Z0-9_]*)(\\\\.)\", \"name\": \"meta.module.name.elm\" }, \"module_chunk\": { \"match\": \"[A-Z][a-zA-Z0-9_]*\", \"name\": \"support.module.elm\" }, \"parens\": { \"match\": \"(\\\\(|\\\\))\", \"name\": \"punctuation.parens.elm\" }, \"period\": { \"match\": \"[.]\", \"name\": \"keyword.other.period.elm\" }, \"record-accessor\": { \"captures\": { \"1\": { \"name\": \"keyword.other.period.elm\" }, \"2\": { \"name\": \"entity.name.record.field.accessor.elm\" } }, \"match\": \"(\\\\.)([a-z][a-zA-Z0-9_]*)\", \"name\": \"meta.record.accessor\" }, \"record-prefix\": { \"captures\": { \"1\": { \"name\": \"record.name.elm\" }, \"2\": { \"name\": \"keyword.other.period.elm\" }, \"3\": { \"name\": \"entity.name.record.field.accessor.elm\" } }, \"match\": \"([a-z][a-zA-Z0-9_]*)(\\\\.)([a-z][a-zA-Z0-9_]*)\", \"name\": \"record.accessor.elm\" }, \"square_brackets\": { \"match\": \"[\\\\[\\\\]]\", \"name\": \"punctuation.definition.list.elm\" }, \"string-quote\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elm\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elm\" } }, \"name\": \"string.quoted.double.elm\", \"patterns\": [{ \"match\": `\\\\\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"'\\\\&]|x[0-9a-fA-F]{1,5})`, \"name\": \"constant.character.escape.elm\" }, { \"match\": \"\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]\", \"name\": \"constant.character.escape.control.elm\" }] }, \"string-triple\": { \"begin\": '\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elm\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elm\" } }, \"name\": \"string.quoted.triple.elm\", \"patterns\": [{ \"match\": `\\\\\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"'\\\\&]|x[0-9a-fA-F]{1,5})`, \"name\": \"constant.character.escape.elm\" }, { \"match\": \"\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]\", \"name\": \"constant.character.escape.control.elm\" }] }, \"top_level_value\": { \"match\": \"^[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"entity.name.function.top_level.elm\" }, \"type-alias-declaration\": { \"begin\": \"^(type\\\\s+)(alias\\\\s+)([A-Z][a-zA-Z0-9_']*)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.type.elm\" }, \"2\": { \"name\": \"keyword.type-alias.elm\" }, \"3\": { \"name\": \"storage.type.elm\" } }, \"end\": \"^(?=\\\\S)\", \"name\": \"meta.function.type-declaration.elm\", \"patterns\": [{ \"match\": \"\\\\n\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"type-declaration\": { \"begin\": \"^(type\\\\s+)([A-Z][a-zA-Z0-9_']*)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.type.elm\" }, \"2\": { \"name\": \"storage.type.elm\" } }, \"end\": \"^(?=\\\\S)\", \"name\": \"meta.function.type-declaration.elm\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.type-constructor.elm\" } }, \"match\": \"^\\\\s*([A-Z][a-zA-Z0-9_]*)\\\\b\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.assignment.elm\" }, \"2\": { \"name\": \"constant.type-constructor.elm\" } }, \"match\": \"(\\\\=|\\\\|)\\\\s+([A-Z][a-zA-Z0-9_]*)\\\\b\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.elm\" }, { \"match\": \"\\\\-\\\\>\", \"name\": \"keyword.operator.arrow.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"type-record\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.braces.begin\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.braces.end\" } }, \"name\": \"meta.function.type-record.elm\", \"patterns\": [{ \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"match\": \"->\", \"name\": \"keyword.operator.arrow.elm\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.record.field.elm\" }, \"2\": { \"name\": \"keyword.other.elm\" } }, \"match\": \"([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\:)\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.comma.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"type-signature\": { \"begin\": \"^(port\\\\s+)?([a-z_][a-zA-Z0-9_']*)\\\\s+(\\\\:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.port.elm\" }, \"2\": { \"name\": \"entity.name.function.elm\" }, \"3\": { \"name\": \"keyword.other.colon.elm\" } }, \"end\": \"((^(?=[a-z]))|^$)\", \"name\": \"meta.function.type-declaration.elm\", \"patterns\": [{ \"include\": \"#type-signature-chunk\" }] }, \"type-signature-chunk\": { \"patterns\": [{ \"match\": \"->\", \"name\": \"keyword.operator.arrow.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"match\": \"\\\\(\\\\)\", \"name\": \"constant.unit.elm\" }, { \"include\": \"#comma\" }, { \"include\": \"#parens\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"unit\": { \"match\": \"\\\\(\\\\)\", \"name\": \"constant.unit.elm\" }, \"value\": { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"meta.value.elm\" } }, \"scopeName\": \"source.elm\", \"embeddedLangs\": [\"glsl\"] });\nvar elm = [\n  ...glsl,\n  lang\n];\n\nexport { elm as default };\n"],"names":[],"sourceRoot":""}