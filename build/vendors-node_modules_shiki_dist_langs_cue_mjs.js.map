{"version":3,"file":"vendors-node_modules_shiki_dist_langs_cue_mjs.js","mappings":"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","sources":["webpack://shiki-my-code/./node_modules/shiki/dist/langs/cue.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"CUE\", \"fileTypes\": [\"cue\"], \"name\": \"cue\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.package\" }, \"2\": { \"name\": \"entity.name.namespace\" } }, \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(package)[ \\\\t]+([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\" }, { \"patterns\": [{ \"begin\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(import)[ \\\\t]+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.import\" }, \"2\": { \"name\": \"punctuation.section.parens.begin\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.end\" } }, \"name\": \"meta.imports\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.namespace\" }, \"2\": { \"name\": \"punctuation.definition.string.begin\" }, \"3\": { \"name\": \"string.quoted.double-import\" }, \"4\": { \"name\": \"punctuation.colon\" }, \"5\": { \"name\": \"entity.name\" }, \"6\": { \"name\": \"punctuation.definition.string.end\" } }, \"match\": '(?:([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*)[ \\\\t]+)?(\")([^:\"]+)(?:(:)([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*))?(\")', \"name\": \"meta.import-spec\" }, { \"match\": \";\", \"name\": \"punctuation.separator\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.other.import\" }, \"2\": { \"name\": \"entity.name.namespace\" }, \"3\": { \"name\": \"punctuation.definition.string.begin\" }, \"4\": { \"name\": \"string.quoted.double-import\" }, \"5\": { \"name\": \"punctuation.colon\" }, \"6\": { \"name\": \"entity.name\" }, \"7\": { \"name\": \"punctuation.definition.string.end\" } }, \"match\": '(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(import)[ \\\\t]+(?:([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*)[ \\\\t]+)?(\")([^:\"]+)(?:(:)([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*))?(\")', \"name\": \"meta.import\" }] }, { \"include\": \"#punctuation_comma\" }, { \"include\": \"#declaration\" }, { \"include\": \"#invalid_in_braces\" }], \"repository\": { \"attribute_element\": { \"patterns\": [{ \"begin\": \"([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)(=)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other\" }, \"2\": { \"name\": \"punctuation.bind\" } }, \"end\": \"(?=[,\\\\)])\", \"patterns\": [{ \"include\": \"#attribute_string\" }] }, { \"begin\": \"([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other\" }, \"2\": { \"name\": \"punctuation.attribute-elements.begin\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.attribute-elements.end\" } }, \"patterns\": [{ \"include\": \"#punctuation_comma\" }, { \"include\": \"#attribute_element\" }] }, { \"include\": \"#attribute_string\" }] }, \"attribute_string\": { \"patterns\": [{ \"include\": \"#string\" }, { \"match\": `[^\\\\n,\"'#=\\\\(\\\\)]+`, \"name\": \"string.unquoted\" }, { \"match\": \"[^,\\\\)]+\", \"name\": \"invalid\" }] }, \"comment\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block\" }] }, \"declaration\": { \"patterns\": [{ \"begin\": \"(@)([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.annotation\" }, \"2\": { \"name\": \"variable.annotation\" }, \"3\": { \"name\": \"punctuation.attribute-elements.begin\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.attribute-elements.end\" } }, \"name\": \"meta.annotation\", \"patterns\": [{ \"include\": \"#punctuation_comma\" }, { \"include\": \"#attribute_element\" }] }, { \"match\": \"(?<!:)::(?!:)\", \"name\": \"punctuation.isa\" }, { \"include\": \"#punctuation_colon\" }, { \"match\": \"\\\\?\", \"name\": \"punctuation.option\" }, { \"match\": \"(?<![=!><])=(?![=~])\", \"name\": \"punctuation.bind\" }, { \"match\": \"<-\", \"name\": \"punctuation.arrow\" }, { \"include\": \"#expression\" }] }, \"expression\": { \"patterns\": [{ \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.for\" }, \"2\": { \"name\": \"variable.other\" }, \"3\": { \"name\": \"punctuation.separator\" }, \"4\": { \"name\": \"variable.other\" }, \"5\": { \"name\": \"keyword.control.in\" } }, \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(for)[ \\\\t]+([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)(?:[ \\\\t]*(,)[ \\\\t]*([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+))?[ \\\\t]+(in)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])if(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"keyword.control.conditional\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.let\" }, \"2\": { \"name\": \"variable.other\" }, \"3\": { \"name\": \"punctuation.bind\" } }, \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(let)[ \\\\t]+([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)[ \\\\t]*(=)(?![=])\" }] }, { \"patterns\": [{ \"match\": \"[\\\\+\\\\-\\\\*]|/(?![/*])\", \"name\": \"keyword.operator\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(?:div|mod|quo|rem)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"keyword.operator.word\" }, { \"match\": \"=[=~]|![=~]|<=|>=|[<](?![-=])|[>](?![=])\", \"name\": \"keyword.operator.comparison\" }, { \"match\": \"&{2}|\\\\|{2}|!(?![=~])\", \"name\": \"keyword.operator.logical\" }, { \"match\": \"&(?!&)|\\\\|(?!\\\\|)\", \"name\": \"keyword.operator.set\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor\" }, \"2\": { \"name\": \"variable.other.member\" } }, \"match\": \"(?<!\\\\.)(\\\\.)([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\" }, { \"patterns\": [{ \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])_(?!\\\\|)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"constant.language.top\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])_\\\\|_(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"constant.language.bottom\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])null(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"constant.language.null\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(?:true|false)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"constant.language.bool\" }, { \"patterns\": [{ \"patterns\": [{ \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])[0-9](?:_?[0-9])*\\\\.(?:[0-9](?:_?[0-9])*)?(?:[eE][\\\\+\\\\-]?[0-9](?:_?[0-9])*)?(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.float.decimal\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])[0-9](?:_?[0-9])*[eE][\\\\+\\\\-]?[0-9](?:_?[0-9])*(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.float.decimal\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])\\\\.[0-9](?:_?[0-9])*(?:[eE][\\\\+\\\\-]?[0-9](?:_?[0-9])*)?(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.float.decimal\" }] }, { \"patterns\": [{ \"patterns\": [{ \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])(?:0|[1-9](?:_?[0-9])*)(?:\\\\.[0-9](?:_?[0-9])*)?(?:[KMGTPEYZ]i?)(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.integer.other\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])\\\\.[0-9](?:_?[0-9])*(?:[KMGTPEYZ]i?)(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.integer.other\" }] }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])(?:0|[1-9](?:_?[0-9])*)(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.integer.decimal\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])0b[0-1](?:_?[0-1])*(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.integer.binary\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])0[xX][0-9a-fA-F](?:_?[0-9a-fA-F])*(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.integer.hexadecimal\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\.])0o?[0-7](?:_?[0-7])*(?![\\\\p{L}\\\\p{Nd}_\\\\.])\", \"name\": \"constant.numeric.integer.octal\" }] }] }, { \"include\": \"#string\" }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(?:bool|u?int(?:8|16|32|64|128)?|float(?:32|64)?|string|bytes|number|rune)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"support.type\" }, { \"patterns\": [{ \"begin\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(len|close|and|or)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function\" }, \"2\": { \"name\": \"punctuation.section.parens.begin\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.end\" } }, \"name\": \"meta.function-call\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#punctuation_comma\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"begin\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*)(\\\\.)(\\\\p{Lu}[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.module\" }, \"2\": { \"name\": \"punctuation\" }, \"3\": { \"name\": \"support.function\" }, \"4\": { \"name\": \"punctuation.section.parens.begin\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.end\" } }, \"name\": \"meta.function-call\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#punctuation_comma\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }] }, { \"match\": \"(?<![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])(?:[\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)(?![\\\\p{L}\\\\p{Nd}_\\\\$\\\\#])\", \"name\": \"variable.other\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.struct.begin\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.struct.end\" } }, \"name\": \"meta.struct\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#punctuation_comma\" }, { \"include\": \"#punctuation_ellipsis\" }, { \"include\": \"#declaration\" }, { \"include\": \"#invalid_in_braces\" }] }, { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.brackets.begin\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.brackets.end\" } }, \"name\": \"meta.brackets\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#punctuation_colon\" }, { \"include\": \"#punctuation_comma\" }, { \"include\": \"#punctuation_ellipsis\" }, { \"captures\": { \"1\": { \"name\": \"variable.other\" }, \"2\": { \"name\": \"punctuation.alias\" } }, \"match\": \"([\\\\p{L}\\\\$\\\\#][\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]*|_[\\\\p{L}\\\\p{Nd}_\\\\$\\\\#]+)[ \\\\t]*(=)\" }, { \"include\": \"#expression\" }, { \"match\": \"[^\\\\]]+\", \"name\": \"invalid\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.begin\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.end\" } }, \"name\": \"meta.parens\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#punctuation_comma\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }] }] }, \"invalid_in_braces\": { \"match\": \"[^\\\\}]+\", \"name\": \"invalid\" }, \"invalid_in_parens\": { \"match\": \"[^\\\\)]+\", \"name\": \"invalid\" }, \"punctuation_colon\": { \"match\": \"(?<!:):(?!:)\", \"name\": \"punctuation.colon\" }, \"punctuation_comma\": { \"match\": \",\", \"name\": \"punctuation.separator\" }, \"punctuation_ellipsis\": { \"match\": \"(?<!\\\\.)\\\\.{3}(?!\\\\.)\", \"name\": \"punctuation.ellipsis\" }, \"string\": { \"patterns\": [{ \"begin\": '#\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.double-multiline\", \"end\": '\"\"\"#', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": '\\\\\\\\#(?:\"\"\"|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\#(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"invalid.illegal\" }, { \"begin\": \"\\\\\\\\#\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\#.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": '#\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.double\", \"end\": '\"#', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": '\\\\\\\\#(?:\"|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\#(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"invalid.illegal\" }, { \"begin\": \"\\\\\\\\#\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\#.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": \"#'''\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.single-multiline\", \"end\": \"'''#\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": \"\\\\\\\\#(?:'''|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})\", \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\#(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"constant.character.escape\" }, { \"begin\": \"\\\\\\\\#\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\#.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": \"#'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.single\", \"end\": \"'#\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": \"\\\\\\\\#(?:'|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})\", \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\#(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"constant.character.escape\" }, { \"begin\": \"\\\\\\\\#\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\#.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": '\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.double-multiline\", \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": '\\\\\\\\(?:\"\"\"|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"invalid.illegal\" }, { \"begin\": \"\\\\\\\\\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.double\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": '\\\\\\\\(?:\"|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"invalid.illegal\" }, { \"begin\": \"\\\\\\\\\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": \"'''\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.single-multiline\", \"end\": \"'''\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": \"\\\\\\\\(?:'''|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})\", \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"constant.character.escape\" }, { \"begin\": \"\\\\\\\\\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.single\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\", \"patterns\": [{ \"match\": \"\\\\\\\\(?:'|/|\\\\\\\\|[abfnrtv]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})\", \"name\": \"constant.character.escape\" }, { \"match\": \"\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2})\", \"name\": \"constant.character.escape\" }, { \"begin\": \"\\\\\\\\\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.begin\" } }, \"contentName\": \"source.cue.embedded\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.interpolation.end\" } }, \"name\": \"meta.interpolation\", \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#expression\" }, { \"include\": \"#invalid_in_parens\" }] }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"contentName\": \"string.quoted.backtick\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"meta.string\" }] }, \"whitespace\": { \"match\": \"[ \\\\t\\\\r\\\\n]+\" } }, \"scopeName\": \"source.cue\" });\nvar cue = [\n  lang\n];\n\nexport { cue as default };\n"],"names":[],"sourceRoot":""}