"use strict";
(self["webpackChunkshiki_my_code"] = self["webpackChunkshiki_my_code"] || []).push([["node_modules_shiki_dist_langs_tsv_mjs"],{

/***/ "./node_modules/shiki/dist/langs/tsv.mjs":
/*!***********************************************!*\
  !*** ./node_modules/shiki/dist/langs/tsv.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ tsv)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "TSV", "fileTypes": ["tsv", "tab"], "name": "tsv", "patterns": [{ "captures": { "1": { "name": "rainbow1" }, "2": { "name": "keyword.rainbow2" }, "3": { "name": "entity.name.function.rainbow3" }, "4": { "name": "comment.rainbow4" }, "5": { "name": "string.rainbow5" }, "6": { "name": "variable.parameter.rainbow6" }, "7": { "name": "constant.numeric.rainbow7" }, "8": { "name": "entity.name.type.rainbow8" }, "9": { "name": "markup.bold.rainbow9" }, "10": { "name": "invalid.rainbow10" } }, "match": "([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)([^\\t]*\\t?)", "name": "rainbowgroup" }], "scopeName": "text.tsv" });
var tsv = [
  lang
];




/***/ })

}]);
//# sourceMappingURL=node_modules_shiki_dist_langs_tsv_mjs.js.map