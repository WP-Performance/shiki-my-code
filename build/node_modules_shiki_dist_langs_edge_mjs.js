"use strict";
(self["webpackChunkshiki_my_code"] = self["webpackChunkshiki_my_code"] || []).push([["node_modules_shiki_dist_langs_edge_mjs"],{

/***/ "./node_modules/shiki/dist/langs/edge.mjs":
/*!************************************************!*\
  !*** ./node_modules/shiki/dist/langs/edge.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ edge)
/* harmony export */ });
/* harmony import */ var _typescript_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typescript.mjs */ "./node_modules/shiki/dist/langs/typescript.mjs");
/* harmony import */ var _html_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./html.mjs */ "./node_modules/shiki/dist/langs/html.mjs");
/* harmony import */ var _html_derivative_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./html-derivative.mjs */ "./node_modules/shiki/dist/langs/html-derivative.mjs");






const lang = Object.freeze({ "displayName": "Edge", "injections": { "text.html.edge - (meta.embedded | meta.tag | comment.block.edge), L:(text.html.edge meta.tag - (comment.block.edge | meta.embedded.block.edge)), L:(source.ts.embedded.html - (comment.block.edge | meta.embedded.block.edge))": { "patterns": [{ "include": "#comment" }, { "include": "#escapedMustache" }, { "include": "#safeMustache" }, { "include": "#mustache" }, { "include": "#nonSeekableTag" }, { "include": "#tag" }] } }, "name": "edge", "patterns": [{ "include": "text.html.basic" }, { "include": "text.html.derivative" }], "repository": { "comment": { "begin": "\\{{--", "beginCaptures": { "0": { "name": "punctuation.definition.comment.begin.edge" } }, "end": "\\--}}", "endCaptures": { "0": { "name": "punctuation.definition.comment.end.edge" } }, "name": "comment.block" }, "escapedMustache": { "begin": "\\@{{", "beginCaptures": { "0": { "name": "punctuation.definition.comment.begin.edge" } }, "end": "\\}}", "endCaptures": { "0": { "name": "punctuation.definition.comment.end.edge" } }, "name": "comment.block" }, "mustache": { "begin": "\\{{", "beginCaptures": { "0": { "name": "punctuation.mustache.begin" } }, "end": "\\}}", "endCaptures": { "0": { "name": "punctuation.mustache.end" } }, "name": "meta.embedded.block.javascript", "patterns": [{ "include": "source.ts#expression" }] }, "nonSeekableTag": { "captures": { "2": { "name": "support.function.edge" } }, "match": "^(\\s*)((@{1,2})(!)?([a-zA-Z._]+))(~)?$", "name": "meta.embedded.block.javascript", "patterns": [{ "include": "source.ts#expression" }] }, "safeMustache": { "begin": "\\{{{", "beginCaptures": { "0": { "name": "punctuation.mustache.begin" } }, "end": "\\}}}", "endCaptures": { "0": { "name": "punctuation.mustache.end" } }, "name": "meta.embedded.block.javascript", "patterns": [{ "include": "source.ts#expression" }] }, "tag": { "begin": "^(\\s*)((@{1,2})(!)?([a-zA-Z._]+)(\\s{0,2}))(\\()", "beginCaptures": { "2": { "name": "support.function.edge" }, "7": { "name": "punctuation.paren.open" } }, "end": "\\)", "endCaptures": { "0": { "name": "punctuation.paren.close" } }, "name": "meta.embedded.block.javascript", "patterns": [{ "include": "source.ts#expression" }] } }, "scopeName": "text.html.edge", "embeddedLangs": ["typescript", "html", "html-derivative"] });
var edge = [
  ..._typescript_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
  ..._html_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
  ..._html_derivative_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/html-derivative.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/shiki/dist/langs/html-derivative.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ html_derivative)
/* harmony export */ });
/* harmony import */ var _html_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html.mjs */ "./node_modules/shiki/dist/langs/html.mjs");




const lang = Object.freeze({ "displayName": "HTML (Derivative)", "injections": { "R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)": { "comment": "Uses R: to ensure this matches after any other injections.", "patterns": [{ "match": "<", "name": "invalid.illegal.bad-angle-bracket.html" }] } }, "name": "html-derivative", "patterns": [{ "include": "text.html.basic#core-minus-invalid" }, { "begin": "(</?)(\\w[^\\s>]*)(?<!/)", "beginCaptures": { "1": { "name": "punctuation.definition.tag.begin.html" }, "2": { "name": "entity.name.tag.html" } }, "end": "((?: ?/)?>)", "endCaptures": { "1": { "name": "punctuation.definition.tag.end.html" } }, "name": "meta.tag.other.unrecognized.html.derivative", "patterns": [{ "include": "text.html.basic#attribute" }] }], "scopeName": "text.html.derivative", "embeddedLangs": ["html"] });
var html_derivative = [
  ..._html_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
  lang
];




/***/ })

}]);
//# sourceMappingURL=node_modules_shiki_dist_langs_edge_mjs.js.map