"use strict";
(self["webpackChunkshiki_my_code"] = self["webpackChunkshiki_my_code"] || []).push([["vendors-node_modules_shiki_dist_langs_wikitext_mjs"],{

/***/ "./node_modules/shiki/dist/langs/bibtex.mjs":
/*!**************************************************!*\
  !*** ./node_modules/shiki/dist/langs/bibtex.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ bibtex)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "BibTeX", "name": "bibtex", "patterns": [{ "captures": { "0": { "name": "punctuation.definition.comment.bibtex" } }, "match": "@(?i:comment)(?=[\\s{(])", "name": "comment.block.at-sign.bibtex" }, { "begin": "((@)(?i:preamble))\\s*(\\{)\\s*", "beginCaptures": { "1": { "name": "keyword.other.preamble.bibtex" }, "2": { "name": "punctuation.definition.keyword.bibtex" }, "3": { "name": "punctuation.section.preamble.begin.bibtex" } }, "end": "\\}", "endCaptures": { "0": { "name": "punctuation.section.preamble.end.bibtex" } }, "name": "meta.preamble.braces.bibtex", "patterns": [{ "include": "#field_value" }] }, { "begin": "((@)(?i:preamble))\\s*(\\()\\s*", "beginCaptures": { "1": { "name": "keyword.other.preamble.bibtex" }, "2": { "name": "punctuation.definition.keyword.bibtex" }, "3": { "name": "punctuation.section.preamble.begin.bibtex" } }, "end": "\\)", "endCaptures": { "0": { "name": "punctuation.section.preamble.end.bibtex" } }, "name": "meta.preamble.parenthesis.bibtex", "patterns": [{ "include": "#field_value" }] }, { "begin": "((@)(?i:string))\\s*(\\{)\\s*([a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*)", "beginCaptures": { "1": { "name": "keyword.other.string-constant.bibtex" }, "2": { "name": "punctuation.definition.keyword.bibtex" }, "3": { "name": "punctuation.section.string-constant.begin.bibtex" }, "4": { "name": "variable.other.bibtex" } }, "end": "\\}", "endCaptures": { "0": { "name": "punctuation.section.string-constant.end.bibtex" } }, "name": "meta.string-constant.braces.bibtex", "patterns": [{ "include": "#field_value" }] }, { "begin": "((@)(?i:string))\\s*(\\()\\s*([a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*)", "beginCaptures": { "1": { "name": "keyword.other.string-constant.bibtex" }, "2": { "name": "punctuation.definition.keyword.bibtex" }, "3": { "name": "punctuation.section.string-constant.begin.bibtex" }, "4": { "name": "variable.other.bibtex" } }, "end": "\\)", "endCaptures": { "0": { "name": "punctuation.section.string-constant.end.bibtex" } }, "name": "meta.string-constant.parenthesis.bibtex", "patterns": [{ "include": "#field_value" }] }, { "begin": "((@)[a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*)\\s*(\\{)\\s*([^\\s,}]*)", "beginCaptures": { "1": { "name": "keyword.other.entry-type.bibtex" }, "2": { "name": "punctuation.definition.keyword.bibtex" }, "3": { "name": "punctuation.section.entry.begin.bibtex" }, "4": { "name": "entity.name.type.entry-key.bibtex" } }, "end": "\\}", "endCaptures": { "0": { "name": "punctuation.section.entry.end.bibtex" } }, "name": "meta.entry.braces.bibtex", "patterns": [{ "begin": "([a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*)\\s*(\\=)", "beginCaptures": { "1": { "name": "support.function.key.bibtex" }, "2": { "name": "punctuation.separator.key-value.bibtex" } }, "end": "(?=[,}])", "name": "meta.key-assignment.bibtex", "patterns": [{ "include": "#field_value" }] }] }, { "begin": "((@)[a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*)\\s*(\\()\\s*([^\\s,]*)", "beginCaptures": { "1": { "name": "keyword.other.entry-type.bibtex" }, "2": { "name": "punctuation.definition.keyword.bibtex" }, "3": { "name": "punctuation.section.entry.begin.bibtex" }, "4": { "name": "entity.name.type.entry-key.bibtex" } }, "end": "\\)", "endCaptures": { "0": { "name": "punctuation.section.entry.end.bibtex" } }, "name": "meta.entry.parenthesis.bibtex", "patterns": [{ "begin": "([a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*)\\s*(\\=)", "beginCaptures": { "1": { "name": "support.function.key.bibtex" }, "2": { "name": "punctuation.separator.key-value.bibtex" } }, "end": "(?=[,)])", "name": "meta.key-assignment.bibtex", "patterns": [{ "include": "#field_value" }] }] }, { "begin": "[^@\\n]", "end": "(?=@)", "name": "comment.block.bibtex" }], "repository": { "field_value": { "patterns": [{ "include": "#string_content" }, { "include": "#integer" }, { "include": "#string_var" }, { "match": "#", "name": "keyword.operator.bibtex" }] }, "integer": { "captures": { "1": { "name": "constant.numeric.bibtex" } }, "match": "\\s*(\\d+)\\s*" }, "nested_braces": { "begin": "\\{", "beginCaptures": { "0": { "name": "punctuation.definition.group.begin.bibtex" } }, "end": "\\}", "endCaptures": { "0": { "name": "punctuation.definition.group.end.bibtex" } }, "patterns": [{ "include": "#nested_braces" }] }, "string_content": { "patterns": [{ "begin": "\\{", "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.bibtex" } }, "end": "\\}", "endCaptures": { "0": { "name": "punctuation.definition.string.end.bibtex" } }, "patterns": [{ "include": "#nested_braces" }] }, { "begin": '"', "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.bibtex" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.definition.string.end.bibtex" } }, "patterns": [{ "include": "#nested_braces" }] }] }, "string_var": { "captures": { "0": { "name": "support.variable.bibtex" } }, "match": "[a-zA-Z!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~][a-zA-Z0-9!$&*+\\-./:;<>?@\\[\\\\\\]^_`|~]*" } }, "scopeName": "text.bibtex" });
var bibtex = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/clojure.mjs":
/*!***************************************************!*\
  !*** ./node_modules/shiki/dist/langs/clojure.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ clojure)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "Clojure", "name": "clojure", "patterns": [{ "include": "#comment" }, { "include": "#shebang-comment" }, { "include": "#quoted-sexp" }, { "include": "#sexp" }, { "include": "#keyfn" }, { "include": "#string" }, { "include": "#vector" }, { "include": "#set" }, { "include": "#map" }, { "include": "#regexp" }, { "include": "#var" }, { "include": "#constants" }, { "include": "#dynamic-variables" }, { "include": "#metadata" }, { "include": "#namespace-symbol" }, { "include": "#symbol" }], "repository": { "comment": { "begin": "(?<!\\\\);", "beginCaptures": { "0": { "name": "punctuation.definition.comment.clojure" } }, "end": "$", "name": "comment.line.semicolon.clojure" }, "constants": { "patterns": [{ "match": "(nil)(?=(\\s|\\)|\\]|\\}))", "name": "constant.language.nil.clojure" }, { "match": "(true|false)", "name": "constant.language.boolean.clojure" }, { "match": "(##(?:Inf|-Inf|NaN))", "name": "constant.numeric.symbol.clojure" }, { "match": "([-+]?\\d+/\\d+)", "name": "constant.numeric.ratio.clojure" }, { "match": "([-+]?(?:(?:3[0-6])|(?:[12]\\d)|[2-9])[rR][0-9A-Za-z]+N?)", "name": "constant.numeric.arbitrary-radix.clojure" }, { "match": "([-+]?0[xX][0-9a-fA-F]+N?)", "name": "constant.numeric.hexadecimal.clojure" }, { "match": "([-+]?0[0-7]+N?)", "name": "constant.numeric.octal.clojure" }, { "match": "([-+]?[0-9]+(?:(\\.|(?=[eEM]))[0-9]*([eE][-+]?[0-9]+)?)M?)", "name": "constant.numeric.double.clojure" }, { "match": "([-+]?\\d+N?)", "name": "constant.numeric.long.clojure" }, { "include": "#keyword" }] }, "dynamic-variables": { "match": "\\*[\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\d]+\\*", "name": "meta.symbol.dynamic.clojure" }, "keyfn": { "patterns": [{ "match": "(?<=(\\s|\\(|\\[|\\{))(if(-[-\\p{Ll}\\?]*)?|when(-[-\\p{Ll}]*)?|for(-[-\\p{Ll}]*)?|cond|do|let(-[-\\p{Ll}\\?]*)?|binding|loop|recur|fn|throw[\\p{Ll}\\-]*|try|catch|finally|([\\p{Ll}]*case))(?=(\\s|\\)|\\]|\\}))", "name": "storage.control.clojure" }, { "match": "(?<=(\\s|\\(|\\[|\\{))(declare-?|(in-)?ns|import|use|require|load|compile|(def[\\p{Ll}\\-]*))(?=(\\s|\\)|\\]|\\}))", "name": "keyword.control.clojure" }] }, "keyword": { "match": "(?<=(\\s|\\(|\\[|\\{)):[\\w\\#\\.\\-\\_\\:\\+\\=\\>\\<\\/\\!\\?\\*]+(?=(\\s|\\)|\\]|\\}|\\,))", "name": "constant.keyword.clojure" }, "map": { "begin": "(\\{)", "beginCaptures": { "1": { "name": "punctuation.section.map.begin.clojure" } }, "end": "(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})", "endCaptures": { "1": { "name": "punctuation.section.map.end.trailing.clojure" }, "2": { "name": "punctuation.section.map.end.clojure" } }, "name": "meta.map.clojure", "patterns": [{ "include": "$self" }] }, "metadata": { "patterns": [{ "begin": "(\\^\\{)", "beginCaptures": { "1": { "name": "punctuation.section.metadata.map.begin.clojure" } }, "end": "(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})", "endCaptures": { "1": { "name": "punctuation.section.metadata.map.end.trailing.clojure" }, "2": { "name": "punctuation.section.metadata.map.end.clojure" } }, "name": "meta.metadata.map.clojure", "patterns": [{ "include": "$self" }] }, { "begin": "(\\^)", "end": "(\\s)", "name": "meta.metadata.simple.clojure", "patterns": [{ "include": "#keyword" }, { "include": "$self" }] }] }, "namespace-symbol": { "patterns": [{ "captures": { "1": { "name": "meta.symbol.namespace.clojure" } }, "match": "([\\p{L}\\.\\-\\_\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]*)/" }] }, "quoted-sexp": { "begin": "(['``]\\()", "beginCaptures": { "1": { "name": "punctuation.section.expression.begin.clojure" } }, "end": "(\\))$|(\\)(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\))", "endCaptures": { "1": { "name": "punctuation.section.expression.end.trailing.clojure" }, "2": { "name": "punctuation.section.expression.end.trailing.clojure" }, "3": { "name": "punctuation.section.expression.end.clojure" } }, "name": "meta.quoted-expression.clojure", "patterns": [{ "include": "$self" }] }, "regexp": { "begin": '#"', "beginCaptures": { "0": { "name": "punctuation.definition.regexp.begin.clojure" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.definition.regexp.end.clojure" } }, "name": "string.regexp.clojure", "patterns": [{ "include": "#regexp_escaped_char" }] }, "regexp_escaped_char": { "match": "\\\\.", "name": "constant.character.escape.clojure" }, "set": { "begin": "(\\#\\{)", "beginCaptures": { "1": { "name": "punctuation.section.set.begin.clojure" } }, "end": "(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})", "endCaptures": { "1": { "name": "punctuation.section.set.end.trailing.clojure" }, "2": { "name": "punctuation.section.set.end.clojure" } }, "name": "meta.set.clojure", "patterns": [{ "include": "$self" }] }, "sexp": { "begin": "(\\()", "beginCaptures": { "1": { "name": "punctuation.section.expression.begin.clojure" } }, "end": "(\\))$|(\\)(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\))", "endCaptures": { "1": { "name": "punctuation.section.expression.end.trailing.clojure" }, "2": { "name": "punctuation.section.expression.end.trailing.clojure" }, "3": { "name": "punctuation.section.expression.end.clojure" } }, "name": "meta.expression.clojure", "patterns": [{ "begin": "(?<=\\()(ns|declare|def[\\w\\d._:+=><!?*-]*|[\\w._:+=><!?*-][\\w\\d._:+=><!?*-]*/def[\\w\\d._:+=><!?*-]*)\\s+", "beginCaptures": { "1": { "name": "keyword.control.clojure" } }, "end": "(?=\\))", "name": "meta.definition.global.clojure", "patterns": [{ "include": "#metadata" }, { "include": "#dynamic-variables" }, { "match": "([\\p{L}\\.\\-\\_\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]*)", "name": "entity.global.clojure" }, { "include": "$self" }] }, { "include": "#keyfn" }, { "include": "#constants" }, { "include": "#vector" }, { "include": "#map" }, { "include": "#set" }, { "include": "#sexp" }, { "captures": { "1": { "name": "entity.name.function.clojure" } }, "match": "(?<=\\()(.+?)(?=\\s|\\))", "patterns": [{ "include": "$self" }] }, { "include": "$self" }] }, "shebang-comment": { "begin": "^(#!)", "beginCaptures": { "1": { "name": "punctuation.definition.comment.shebang.clojure" } }, "end": "$", "name": "comment.line.shebang.clojure" }, "string": { "begin": '(?<!\\\\)(")', "beginCaptures": { "1": { "name": "punctuation.definition.string.begin.clojure" } }, "end": '(")', "endCaptures": { "1": { "name": "punctuation.definition.string.end.clojure" } }, "name": "string.quoted.double.clojure", "patterns": [{ "match": "\\\\.", "name": "constant.character.escape.clojure" }] }, "symbol": { "patterns": [{ "match": "([\\p{L}\\.\\-\\_\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]*)", "name": "meta.symbol.clojure" }] }, "var": { "match": "(?<=(\\s|\\(|\\[|\\{)\\#)'[\\w\\.\\-\\_\\:\\+\\=\\>\\<\\/\\!\\?\\*]+(?=(\\s|\\)|\\]|\\}))", "name": "meta.var.clojure" }, "vector": { "begin": "(\\[)", "beginCaptures": { "1": { "name": "punctuation.section.vector.begin.clojure" } }, "end": "(\\](?=[\\}\\]\\)\\s]*(?:;|$)))|(\\])", "endCaptures": { "1": { "name": "punctuation.section.vector.end.trailing.clojure" }, "2": { "name": "punctuation.section.vector.end.clojure" } }, "name": "meta.vector.clojure", "patterns": [{ "include": "$self" }] } }, "scopeName": "source.clojure", "aliases": ["clj"] });
var clojure = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/dart.mjs":
/*!************************************************!*\
  !*** ./node_modules/shiki/dist/langs/dart.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ dart)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "Dart", "name": "dart", "patterns": [{ "match": "^(#!.*)$", "name": "meta.preprocessor.script.dart" }, { "begin": "^\\w*\\b(augment\\s+library|library|import\\s+augment|import|part\\s+of|part|export)\\b", "beginCaptures": { "0": { "name": "keyword.other.import.dart" } }, "end": ";", "endCaptures": { "0": { "name": "punctuation.terminator.dart" } }, "name": "meta.declaration.dart", "patterns": [{ "include": "#strings" }, { "include": "#comments" }, { "match": "\\b(as|show|hide)\\b", "name": "keyword.other.import.dart" }, { "match": "\\b(if)\\b", "name": "keyword.control.dart" }] }, { "include": "#comments" }, { "include": "#punctuation" }, { "include": "#annotations" }, { "include": "#keywords" }, { "include": "#constants-and-special-vars" }, { "include": "#operators" }, { "include": "#strings" }], "repository": { "annotations": { "patterns": [{ "match": "@[a-zA-Z]+", "name": "storage.type.annotation.dart" }] }, "class-identifier": { "patterns": [{ "match": "(?<!\\$)\\b(bool|num|int|double|dynamic)\\b(?!\\$)", "name": "support.class.dart" }, { "match": "(?<!\\$)\\bvoid\\b(?!\\$)", "name": "storage.type.primitive.dart" }, { "begin": "(?<![a-zA-Z0-9_$])([_$]*[A-Z][a-zA-Z0-9_$]*)\\b", "beginCaptures": { "1": { "name": "support.class.dart" } }, "end": "(?!<)", "patterns": [{ "include": "#type-args" }] }] }, "comments": { "patterns": [{ "captures": { "0": { "name": "punctuation.definition.comment.dart" } }, "match": "/\\*\\*/", "name": "comment.block.empty.dart" }, { "include": "#comments-doc-oldschool" }, { "include": "#comments-doc" }, { "include": "#comments-inline" }] }, "comments-block": { "patterns": [{ "begin": "/\\*", "end": "\\*/", "name": "comment.block.dart", "patterns": [{ "include": "#comments-block" }] }] }, "comments-doc": { "patterns": [{ "begin": "///", "name": "comment.block.documentation.dart", "patterns": [{ "include": "#dartdoc" }], "while": "^\\s*///" }] }, "comments-doc-oldschool": { "patterns": [{ "begin": "/\\*\\*", "end": "\\*/", "name": "comment.block.documentation.dart", "patterns": [{ "include": "#comments-doc-oldschool" }, { "include": "#comments-block" }, { "include": "#dartdoc" }] }] }, "comments-inline": { "patterns": [{ "include": "#comments-block" }, { "captures": { "1": { "name": "comment.line.double-slash.dart" } }, "match": "((//).*)$" }] }, "constants-and-special-vars": { "patterns": [{ "match": "(?<!\\$)\\b(true|false|null)\\b(?!\\$)", "name": "constant.language.dart" }, { "match": "(?<!\\$)\\b(this|super|augmented)\\b(?!\\$)", "name": "variable.language.dart" }, { "match": "(?<!\\$)\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b(?!\\$)", "name": "constant.numeric.dart" }, { "include": "#class-identifier" }, { "include": "#function-identifier" }] }, "dartdoc": { "patterns": [{ "captures": { "0": { "name": "variable.name.source.dart" } }, "match": "(\\[.*?\\])" }, { "captures": { "0": { "name": "variable.name.source.dart" } }, "match": "^ {4,}(?![ \\*]).*" }, { "begin": "```.*?$", "contentName": "variable.other.source.dart", "end": "```" }, { "captures": { "0": { "name": "variable.other.source.dart" } }, "match": "(`[^`]+?`)" }, { "captures": { "2": { "name": "variable.other.source.dart" } }, "match": "(\\* ((    ).*))$" }] }, "expression": { "patterns": [{ "include": "#constants-and-special-vars" }, { "include": "#strings" }, { "match": "[a-zA-Z0-9_]+", "name": "variable.parameter.dart" }, { "begin": "\\{", "end": "\\}", "patterns": [{ "include": "#expression" }] }] }, "function-identifier": { "patterns": [{ "captures": { "1": { "name": "entity.name.function.dart" }, "2": { "patterns": [{ "include": "#type-args" }] } }, "match": "([_$]*[a-z][a-zA-Z0-9_$]*)(<(?:[a-zA-Z0-9_$<>?]|,\\s*|\\s+extends\\s+)+>)?[!?]?\\(" }] }, "keywords": { "patterns": [{ "match": "(?<!\\$)\\bas\\b(?!\\$)", "name": "keyword.cast.dart" }, { "match": "(?<!\\$)\\b(try|on|catch|finally|throw|rethrow)\\b(?!\\$)", "name": "keyword.control.catch-exception.dart" }, { "match": "(?<!\\$)\\b(break|case|continue|default|do|else|for|if|in|switch|while|when)\\b(?!\\$)", "name": "keyword.control.dart" }, { "match": "(?<!\\$)\\b(sync(\\*)?|async(\\*)?|await|yield(\\*)?)\\b(?!\\$)", "name": "keyword.control.dart" }, { "match": "(?<!\\$)\\bassert\\b(?!\\$)", "name": "keyword.control.dart" }, { "match": "(?<!\\$)\\b(new)\\b(?!\\$)", "name": "keyword.control.new.dart" }, { "match": "(?<!\\$)\\b(return)\\b(?!\\$)", "name": "keyword.control.return.dart" }, { "match": "(?<!\\$)\\b(abstract|sealed|base|interface|class|enum|extends|extension\\s+type|extension|external|factory|implements|get(?![(<])|mixin|native|operator|set(?![(<])|typedef|with|covariant)\\b(?!\\$)", "name": "keyword.declaration.dart" }, { "match": "(?<!\\$)\\b(macro|augment|static|final|const|required|late)\\b(?!\\$)", "name": "storage.modifier.dart" }, { "match": "(?<!\\$)\\b(?:void|var)\\b(?!\\$)", "name": "storage.type.primitive.dart" }] }, "operators": { "patterns": [{ "match": "(?<!\\$)\\b(is\\!?)\\b(?!\\$)", "name": "keyword.operator.dart" }, { "match": "\\?|:", "name": "keyword.operator.ternary.dart" }, { "match": "(<<|>>>?|~|\\^|\\||&)", "name": "keyword.operator.bitwise.dart" }, { "match": "((&|\\^|\\||<<|>>>?)=)", "name": "keyword.operator.assignment.bitwise.dart" }, { "match": "(=>)", "name": "keyword.operator.closure.dart" }, { "match": "(==|!=|<=?|>=?)", "name": "keyword.operator.comparison.dart" }, { "match": "(([+*/%-]|\\~)=)", "name": "keyword.operator.assignment.arithmetic.dart" }, { "match": "(=)", "name": "keyword.operator.assignment.dart" }, { "match": "(\\-\\-|\\+\\+)", "name": "keyword.operator.increment-decrement.dart" }, { "match": "(\\-|\\+|\\*|\\/|\\~\\/|%)", "name": "keyword.operator.arithmetic.dart" }, { "match": "(!|&&|\\|\\|)", "name": "keyword.operator.logical.dart" }] }, "punctuation": { "patterns": [{ "match": ",", "name": "punctuation.comma.dart" }, { "match": ";", "name": "punctuation.terminator.dart" }, { "match": "\\.", "name": "punctuation.dot.dart" }] }, "string-interp": { "patterns": [{ "captures": { "1": { "name": "variable.parameter.dart" } }, "match": "\\$([a-zA-Z0-9_]+)", "name": "meta.embedded.expression.dart" }, { "begin": "\\$\\{", "end": "\\}", "name": "meta.embedded.expression.dart", "patterns": [{ "include": "#expression" }] }, { "match": "\\\\.", "name": "constant.character.escape.dart" }] }, "strings": { "patterns": [{ "begin": '(?<!r)"""', "end": '"""(?!")', "name": "string.interpolated.triple.double.dart", "patterns": [{ "include": "#string-interp" }] }, { "begin": "(?<!r)'''", "end": "'''(?!')", "name": "string.interpolated.triple.single.dart", "patterns": [{ "include": "#string-interp" }] }, { "begin": 'r"""', "end": '"""(?!")', "name": "string.quoted.triple.double.dart" }, { "begin": "r'''", "end": "'''(?!')", "name": "string.quoted.triple.single.dart" }, { "begin": '(?<!\\|r)"', "end": '"', "name": "string.interpolated.double.dart", "patterns": [{ "match": "\\n", "name": "invalid.string.newline" }, { "include": "#string-interp" }] }, { "begin": 'r"', "end": '"', "name": "string.quoted.double.dart", "patterns": [{ "match": "\\n", "name": "invalid.string.newline" }] }, { "begin": "(?<!\\|r)'", "end": "'", "name": "string.interpolated.single.dart", "patterns": [{ "match": "\\n", "name": "invalid.string.newline" }, { "include": "#string-interp" }] }, { "begin": "r'", "end": "'", "name": "string.quoted.single.dart", "patterns": [{ "match": "\\n", "name": "invalid.string.newline" }] }] }, "type-args": { "begin": "(<)", "beginCaptures": { "1": { "name": "other.source.dart" } }, "end": "(>)", "endCaptures": { "1": { "name": "other.source.dart" } }, "patterns": [{ "include": "#class-identifier" }, { "match": "," }, { "match": "extends", "name": "keyword.declaration.dart" }, { "include": "#comments" }] } }, "scopeName": "source.dart" });
var dart = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/diff.mjs":
/*!************************************************!*\
  !*** ./node_modules/shiki/dist/langs/diff.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ diff)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "Diff", "name": "diff", "patterns": [{ "captures": { "1": { "name": "punctuation.definition.separator.diff" } }, "match": "^((\\*{15})|(={67})|(-{3}))$\\n?", "name": "meta.separator.diff" }, { "match": "^\\d+(,\\d+)*(a|d|c)\\d+(,\\d+)*$\\n?", "name": "meta.diff.range.normal" }, { "captures": { "1": { "name": "punctuation.definition.range.diff" }, "2": { "name": "meta.toc-list.line-number.diff" }, "3": { "name": "punctuation.definition.range.diff" } }, "match": "^(@@)\\s*(.+?)\\s*(@@)($\\n?)?", "name": "meta.diff.range.unified" }, { "captures": { "3": { "name": "punctuation.definition.range.diff" }, "4": { "name": "punctuation.definition.range.diff" }, "6": { "name": "punctuation.definition.range.diff" }, "7": { "name": "punctuation.definition.range.diff" } }, "match": "^(((\\-{3}) .+ (\\-{4}))|((\\*{3}) .+ (\\*{4})))$\\n?", "name": "meta.diff.range.context" }, { "match": "^diff --git a/.*$\\n?", "name": "meta.diff.header.git" }, { "match": "^diff (-|\\S+\\s+\\S+).*$\\n?", "name": "meta.diff.header.command" }, { "captures": { "4": { "name": "punctuation.definition.from-file.diff" }, "6": { "name": "punctuation.definition.from-file.diff" }, "7": { "name": "punctuation.definition.from-file.diff" } }, "match": "(^(((-{3}) .+)|((\\*{3}) .+))$\\n?|^(={4}) .+(?= - ))", "name": "meta.diff.header.from-file" }, { "captures": { "2": { "name": "punctuation.definition.to-file.diff" }, "3": { "name": "punctuation.definition.to-file.diff" }, "4": { "name": "punctuation.definition.to-file.diff" } }, "match": "(^(\\+{3}) .+$\\n?| (-) .* (={4})$\\n?)", "name": "meta.diff.header.to-file" }, { "captures": { "3": { "name": "punctuation.definition.inserted.diff" }, "6": { "name": "punctuation.definition.inserted.diff" } }, "match": "^(((>)( .*)?)|((\\+).*))$\\n?", "name": "markup.inserted.diff" }, { "captures": { "1": { "name": "punctuation.definition.changed.diff" } }, "match": "^(!).*$\\n?", "name": "markup.changed.diff" }, { "captures": { "3": { "name": "punctuation.definition.deleted.diff" }, "6": { "name": "punctuation.definition.deleted.diff" } }, "match": "^(((<)( .*)?)|((-).*))$\\n?", "name": "markup.deleted.diff" }, { "begin": "^(#)", "captures": { "1": { "name": "punctuation.definition.comment.diff" } }, "comment": 'Git produces unified diffs with embedded comments"', "end": "\\n", "name": "comment.line.number-sign.diff" }, { "match": "^index [0-9a-f]{7,40}\\.\\.[0-9a-f]{7,40}.*$\\n?", "name": "meta.diff.index.git" }, { "captures": { "1": { "name": "punctuation.separator.key-value.diff" }, "2": { "name": "meta.toc-list.file-name.diff" } }, "match": "^Index(:) (.+)$\\n?", "name": "meta.diff.index" }, { "match": "^Only in .*: .*$\\n?", "name": "meta.diff.only-in" }], "scopeName": "source.diff" });
var diff = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/docker.mjs":
/*!**************************************************!*\
  !*** ./node_modules/shiki/dist/langs/docker.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ docker)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "Dockerfile", "name": "docker", "patterns": [{ "captures": { "1": { "name": "keyword.other.special-method.dockerfile" }, "2": { "name": "keyword.other.special-method.dockerfile" } }, "match": "^\\s*\\b(?i:(FROM))\\b.*?\\b(?i:(AS))\\b" }, { "captures": { "1": { "name": "keyword.control.dockerfile" }, "2": { "name": "keyword.other.special-method.dockerfile" } }, "match": "^\\s*(?i:(ONBUILD)\\s+)?(?i:(ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR))\\s" }, { "captures": { "1": { "name": "keyword.operator.dockerfile" }, "2": { "name": "keyword.other.special-method.dockerfile" } }, "match": "^\\s*(?i:(ONBUILD)\\s+)?(?i:(CMD|ENTRYPOINT))\\s" }, { "begin": '"', "beginCaptures": { "1": { "name": "punctuation.definition.string.begin.dockerfile" } }, "end": '"', "endCaptures": { "1": { "name": "punctuation.definition.string.end.dockerfile" } }, "name": "string.quoted.double.dockerfile", "patterns": [{ "match": "\\\\.", "name": "constant.character.escaped.dockerfile" }] }, { "begin": "'", "beginCaptures": { "1": { "name": "punctuation.definition.string.begin.dockerfile" } }, "end": "'", "endCaptures": { "1": { "name": "punctuation.definition.string.end.dockerfile" } }, "name": "string.quoted.single.dockerfile", "patterns": [{ "match": "\\\\.", "name": "constant.character.escaped.dockerfile" }] }, { "captures": { "1": { "name": "punctuation.whitespace.comment.leading.dockerfile" }, "2": { "name": "comment.line.number-sign.dockerfile" }, "3": { "name": "punctuation.definition.comment.dockerfile" } }, "comment": "comment.line", "match": "^(\\s*)((#).*$\\n?)" }], "scopeName": "source.dockerfile", "aliases": ["dockerfile"] });
var docker = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/ini.mjs":
/*!***********************************************!*\
  !*** ./node_modules/shiki/dist/langs/ini.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ini)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "INI", "name": "ini", "patterns": [{ "begin": "(^[ \\t]+)?(?=#)", "beginCaptures": { "1": { "name": "punctuation.whitespace.comment.leading.ini" } }, "end": "(?!\\G)", "patterns": [{ "begin": "#", "beginCaptures": { "0": { "name": "punctuation.definition.comment.ini" } }, "end": "\\n", "name": "comment.line.number-sign.ini" }] }, { "begin": "(^[ \\t]+)?(?=;)", "beginCaptures": { "1": { "name": "punctuation.whitespace.comment.leading.ini" } }, "end": "(?!\\G)", "patterns": [{ "begin": ";", "beginCaptures": { "0": { "name": "punctuation.definition.comment.ini" } }, "end": "\\n", "name": "comment.line.semicolon.ini" }] }, { "captures": { "1": { "name": "keyword.other.definition.ini" }, "2": { "name": "punctuation.separator.key-value.ini" } }, "match": "\\b([a-zA-Z0-9_.-]+)\\b\\s*(=)" }, { "captures": { "1": { "name": "punctuation.definition.entity.ini" }, "3": { "name": "punctuation.definition.entity.ini" } }, "match": "^(\\[)(.*?)(\\])", "name": "entity.name.section.group-title.ini" }, { "begin": "'", "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.ini" } }, "end": "'", "endCaptures": { "0": { "name": "punctuation.definition.string.end.ini" } }, "name": "string.quoted.single.ini", "patterns": [{ "match": "\\\\.", "name": "constant.character.escape.ini" }] }, { "begin": '"', "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.ini" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.definition.string.end.ini" } }, "name": "string.quoted.double.ini" }], "scopeName": "source.ini", "aliases": ["properties"] });
var ini = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/jsonc.mjs":
/*!*************************************************!*\
  !*** ./node_modules/shiki/dist/langs/jsonc.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ jsonc)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "JSON with Comments", "name": "jsonc", "patterns": [{ "include": "#value" }], "repository": { "array": { "begin": "\\[", "beginCaptures": { "0": { "name": "punctuation.definition.array.begin.json.comments" } }, "end": "\\]", "endCaptures": { "0": { "name": "punctuation.definition.array.end.json.comments" } }, "name": "meta.structure.array.json.comments", "patterns": [{ "include": "#value" }, { "match": ",", "name": "punctuation.separator.array.json.comments" }, { "match": "[^\\s\\]]", "name": "invalid.illegal.expected-array-separator.json.comments" }] }, "comments": { "patterns": [{ "begin": "/\\*\\*(?!/)", "captures": { "0": { "name": "punctuation.definition.comment.json.comments" } }, "end": "\\*/", "name": "comment.block.documentation.json.comments" }, { "begin": "/\\*", "captures": { "0": { "name": "punctuation.definition.comment.json.comments" } }, "end": "\\*/", "name": "comment.block.json.comments" }, { "captures": { "1": { "name": "punctuation.definition.comment.json.comments" } }, "match": "(//).*$\\n?", "name": "comment.line.double-slash.js" }] }, "constant": { "match": "\\b(?:true|false|null)\\b", "name": "constant.language.json.comments" }, "number": { "match": "(?x)\n-?\n(?:\n0\n|\n[1-9]\n\\d*\n)\n(?:\n(?:\n\\.\n\\d+\n)?\n(?:\n[eE]\n[+-]?\n\\d+\n)?\n)?", "name": "constant.numeric.json.comments" }, "object": { "begin": "\\{", "beginCaptures": { "0": { "name": "punctuation.definition.dictionary.begin.json.comments" } }, "end": "\\}", "endCaptures": { "0": { "name": "punctuation.definition.dictionary.end.json.comments" } }, "name": "meta.structure.dictionary.json.comments", "patterns": [{ "comment": "the JSON object key", "include": "#objectkey" }, { "include": "#comments" }, { "begin": ":", "beginCaptures": { "0": { "name": "punctuation.separator.dictionary.key-value.json.comments" } }, "end": "(,)|(?=\\})", "endCaptures": { "1": { "name": "punctuation.separator.dictionary.pair.json.comments" } }, "name": "meta.structure.dictionary.value.json.comments", "patterns": [{ "comment": "the JSON object value", "include": "#value" }, { "match": "[^\\s,]", "name": "invalid.illegal.expected-dictionary-separator.json.comments" }] }, { "match": "[^\\s\\}]", "name": "invalid.illegal.expected-dictionary-separator.json.comments" }] }, "objectkey": { "begin": '"', "beginCaptures": { "0": { "name": "punctuation.support.type.property-name.begin.json.comments" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.support.type.property-name.end.json.comments" } }, "name": "string.json.comments support.type.property-name.json.comments", "patterns": [{ "include": "#stringcontent" }] }, "string": { "begin": '"', "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.json.comments" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.definition.string.end.json.comments" } }, "name": "string.quoted.double.json.comments", "patterns": [{ "include": "#stringcontent" }] }, "stringcontent": { "patterns": [{ "match": '(?x)\n\\\\\n(?:\n["\\\\/bfnrt]\n|\nu\n[0-9a-fA-F]{4})', "name": "constant.character.escape.json.comments" }, { "match": "\\\\.", "name": "invalid.illegal.unrecognized-string-escape.json.comments" }] }, "value": { "patterns": [{ "include": "#constant" }, { "include": "#number" }, { "include": "#string" }, { "include": "#array" }, { "include": "#object" }, { "include": "#comments" }] } }, "scopeName": "source.json.comments" });
var jsonc = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/make.mjs":
/*!************************************************!*\
  !*** ./node_modules/shiki/dist/langs/make.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ make)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "Makefile", "name": "make", "patterns": [{ "include": "#comment" }, { "include": "#variables" }, { "include": "#variable-assignment" }, { "include": "#directives" }, { "include": "#recipe" }, { "include": "#target" }], "repository": { "another-variable-braces": { "patterns": [{ "begin": "(?<={)(?!})", "end": "(?=}|((?<!\\\\)\\n))", "name": "variable.other.makefile", "patterns": [{ "include": "#variables" }, { "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }] }] }, "another-variable-parentheses": { "patterns": [{ "begin": "(?<=\\()(?!\\))", "end": "(?=\\)|((?<!\\\\)\\n))", "name": "variable.other.makefile", "patterns": [{ "include": "#variables" }, { "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }] }] }, "braces-interpolation": { "begin": "{", "end": "}", "patterns": [{ "include": "#variables" }, { "include": "#interpolation" }] }, "builtin-variable-braces": { "patterns": [{ "match": "(?<={)(MAKEFILES|VPATH|SHELL|MAKESHELL|MAKE|MAKELEVEL|MAKEFLAGS|MAKECMDGOALS|CURDIR|SUFFIXES|\\.LIBPATTERNS)(?=\\s*})", "name": "variable.language.makefile" }] }, "builtin-variable-parentheses": { "patterns": [{ "match": "(?<=\\()(MAKEFILES|VPATH|SHELL|MAKESHELL|MAKE|MAKELEVEL|MAKEFLAGS|MAKECMDGOALS|CURDIR|SUFFIXES|\\.LIBPATTERNS)(?=\\s*\\))", "name": "variable.language.makefile" }] }, "comma": { "match": ",", "name": "punctuation.separator.delimeter.comma.makefile" }, "comment": { "begin": "(^[ ]+)?((?<!\\\\)(\\\\\\\\)*)(?=#)", "beginCaptures": { "1": { "name": "punctuation.whitespace.comment.leading.makefile" } }, "end": "(?!\\G)", "patterns": [{ "begin": "#", "beginCaptures": { "0": { "name": "punctuation.definition.comment.makefile" } }, "end": "(?=[^\\\\])$", "name": "comment.line.number-sign.makefile", "patterns": [{ "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }] }] }, "directives": { "patterns": [{ "begin": "^[ ]*([s\\-]?include)\\b", "beginCaptures": { "1": { "name": "keyword.control.include.makefile" } }, "end": "^", "patterns": [{ "include": "#comment" }, { "include": "#variables" }, { "match": "%", "name": "constant.other.placeholder.makefile" }] }, { "begin": "^[ ]*(vpath)\\b", "beginCaptures": { "1": { "name": "keyword.control.vpath.makefile" } }, "end": "^", "patterns": [{ "include": "#comment" }, { "include": "#variables" }, { "match": "%", "name": "constant.other.placeholder.makefile" }] }, { "begin": "^\\s*(?:(override)\\s*)?(define)\\s*([^\\s]+)\\s*(=|\\?=|:=|\\+=)?(?=\\s)", "captures": { "1": { "name": "keyword.control.override.makefile" }, "2": { "name": "keyword.control.define.makefile" }, "3": { "name": "variable.other.makefile" }, "4": { "name": "punctuation.separator.key-value.makefile" } }, "end": "^\\s*(endef)\\b", "name": "meta.scope.conditional.makefile", "patterns": [{ "begin": "\\G(?!\\n)", "end": "^", "patterns": [{ "include": "#comment" }] }, { "include": "#variables" }, { "include": "#directives" }] }, { "begin": "^[ ]*(export)\\b", "beginCaptures": { "1": { "name": "keyword.control.$1.makefile" } }, "end": "^", "patterns": [{ "include": "#comment" }, { "include": "#variable-assignment" }, { "match": "[^\\s]+", "name": "variable.other.makefile" }] }, { "begin": "^[ ]*(override|private)\\b", "beginCaptures": { "1": { "name": "keyword.control.$1.makefile" } }, "end": "^", "patterns": [{ "include": "#comment" }, { "include": "#variable-assignment" }] }, { "begin": "^[ ]*(unexport|undefine)\\b", "beginCaptures": { "1": { "name": "keyword.control.$1.makefile" } }, "end": "^", "patterns": [{ "include": "#comment" }, { "match": "[^\\s]+", "name": "variable.other.makefile" }] }, { "begin": "^\\s*(ifeq|ifneq|ifdef|ifndef)(?=\\s)", "captures": { "1": { "name": "keyword.control.$1.makefile" } }, "end": "^\\s*(endif)\\b", "name": "meta.scope.conditional.makefile", "patterns": [{ "begin": "\\G", "end": "^", "name": "meta.scope.condition.makefile", "patterns": [{ "include": "#comma" }, { "include": "#variables" }, { "include": "#comment" }] }, { "begin": "^\\s*else(?=\\s)\\s*(ifeq|ifneq|ifdef|ifndef)*(?=\\s)", "beginCaptures": { "0": { "name": "keyword.control.else.makefile" } }, "end": "^", "patterns": [{ "include": "#comma" }, { "include": "#variables" }, { "include": "#comment" }] }, { "include": "$self" }] }] }, "flavor-variable-braces": { "patterns": [{ "begin": "(?<={)(origin|flavor)\\s(?=[^\\s}]+\\s*})", "beginCaptures": { "1": { "name": "support.function.$1.makefile" } }, "contentName": "variable.other.makefile", "end": "(?=})", "name": "meta.scope.function-call.makefile", "patterns": [{ "include": "#variables" }] }] }, "flavor-variable-parentheses": { "patterns": [{ "begin": "(?<=\\()(origin|flavor)\\s(?=[^\\s)]+\\s*\\))", "beginCaptures": { "1": { "name": "support.function.$1.makefile" } }, "contentName": "variable.other.makefile", "end": "(?=\\))", "name": "meta.scope.function-call.makefile", "patterns": [{ "include": "#variables" }] }] }, "function-variable-braces": { "patterns": [{ "begin": "(?<={)(subst|patsubst|strip|findstring|filter(-out)?|sort|word(list)?|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|info|error|warning|shell|foreach|if|or|and|call|eval|value|file|guile)\\s", "beginCaptures": { "1": { "name": "support.function.$1.makefile" } }, "end": "(?=}|((?<!\\\\)\\n))", "name": "meta.scope.function-call.makefile", "patterns": [{ "include": "#comma" }, { "include": "#variables" }, { "include": "#interpolation" }, { "match": "%|\\*", "name": "constant.other.placeholder.makefile" }, { "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }] }] }, "function-variable-parentheses": { "patterns": [{ "begin": "(?<=\\()(subst|patsubst|strip|findstring|filter(-out)?|sort|word(list)?|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|info|error|warning|shell|foreach|if|or|and|call|eval|value|file|guile)\\s", "beginCaptures": { "1": { "name": "support.function.$1.makefile" } }, "end": "(?=\\)|((?<!\\\\)\\n))", "name": "meta.scope.function-call.makefile", "patterns": [{ "include": "#comma" }, { "include": "#variables" }, { "include": "#interpolation" }, { "match": "%|\\*", "name": "constant.other.placeholder.makefile" }, { "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }] }] }, "interpolation": { "patterns": [{ "include": "#parentheses-interpolation" }, { "include": "#braces-interpolation" }] }, "parentheses-interpolation": { "begin": "\\(", "end": "\\)", "patterns": [{ "include": "#variables" }, { "include": "#interpolation" }] }, "recipe": { "begin": "^\\t([+\\-@]*)", "beginCaptures": { "1": { "name": "keyword.control.$1.makefile" } }, "end": "[^\\\\]$", "name": "meta.scope.recipe.makefile", "patterns": [{ "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }, { "include": "#variables" }] }, "simple-variable": { "patterns": [{ "match": "\\$[^(){}]", "name": "variable.language.makefile" }] }, "target": { "begin": "^(?!\\t)([^:]*)(:)(?!\\=)", "beginCaptures": { "1": { "patterns": [{ "captures": { "1": { "name": "support.function.target.$1.makefile" } }, "match": "^\\s*(\\.(PHONY|SUFFIXES|DEFAULT|PRECIOUS|INTERMEDIATE|SECONDARY|SECONDEXPANSION|DELETE_ON_ERROR|IGNORE|LOW_RESOLUTION_TIME|SILENT|EXPORT_ALL_VARIABLES|NOTPARALLEL|ONESHELL|POSIX))\\s*$" }, { "begin": "(?=\\S)", "end": "(?=\\s|$)", "name": "entity.name.function.target.makefile", "patterns": [{ "include": "#variables" }, { "match": "%", "name": "constant.other.placeholder.makefile" }] }] }, "2": { "name": "punctuation.separator.key-value.makefile" } }, "end": "[^\\\\]$", "name": "meta.scope.target.makefile", "patterns": [{ "begin": "\\G", "end": "(?=[^\\\\])$", "name": "meta.scope.prerequisites.makefile", "patterns": [{ "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }, { "match": "%|\\*", "name": "constant.other.placeholder.makefile" }, { "include": "#comment" }, { "include": "#variables" }] }] }, "variable-assignment": { "begin": "(^[ ]*|\\G\\s*)([^\\s:#=]+)\\s*((?<![?:+!])=|\\?=|:=|\\+=|!=)", "beginCaptures": { "2": { "name": "variable.other.makefile", "patterns": [{ "include": "#variables" }] }, "3": { "name": "punctuation.separator.key-value.makefile" } }, "end": "\\n", "patterns": [{ "match": "\\\\\\n", "name": "constant.character.escape.continuation.makefile" }, { "include": "#comment" }, { "include": "#variables" }] }, "variable-braces": { "patterns": [{ "begin": "\\${", "captures": { "0": { "name": "punctuation.definition.variable.makefile" } }, "end": "}|((?<!\\\\)\\n)", "name": "string.interpolated.makefile", "patterns": [{ "include": "#variables" }, { "include": "#builtin-variable-braces" }, { "include": "#function-variable-braces" }, { "include": "#flavor-variable-braces" }, { "include": "#another-variable-braces" }] }] }, "variable-parentheses": { "patterns": [{ "begin": "\\$\\(", "captures": { "0": { "name": "punctuation.definition.variable.makefile" } }, "end": "\\)|((?<!\\\\)\\n)", "name": "string.interpolated.makefile", "patterns": [{ "include": "#variables" }, { "include": "#builtin-variable-parentheses" }, { "include": "#function-variable-parentheses" }, { "include": "#flavor-variable-parentheses" }, { "include": "#another-variable-parentheses" }] }] }, "variables": { "patterns": [{ "include": "#simple-variable" }, { "include": "#variable-parentheses" }, { "include": "#variable-braces" }] } }, "scopeName": "source.makefile", "aliases": ["makefile"] });
var make = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/vb.mjs":
/*!**********************************************!*\
  !*** ./node_modules/shiki/dist/langs/vb.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ vb)
/* harmony export */ });
const lang = Object.freeze({ "displayName": "Visual Basic", "name": "vb", "patterns": [{ "match": "\\n", "name": "meta.ending-space" }, { "include": "#round-brackets" }, { "begin": "^(?=\\t)", "end": "(?=[^\\t])", "name": "meta.leading-space", "patterns": [{ "captures": { "1": { "name": "meta.odd-tab.tabs" }, "2": { "name": "meta.even-tab.tabs" } }, "match": "(\\t)(\\t)?" }] }, { "begin": "^(?= )", "end": "(?=[^ ])", "name": "meta.leading-space", "patterns": [{ "captures": { "1": { "name": "meta.odd-tab.spaces" }, "2": { "name": "meta.even-tab.spaces" } }, "match": "(  )(  )?" }] }, { "captures": { "1": { "name": "storage.type.function.asp" }, "2": { "name": "entity.name.function.asp" }, "3": { "name": "punctuation.definition.parameters.asp" }, "4": { "name": "variable.parameter.function.asp" }, "5": { "name": "punctuation.definition.parameters.asp" } }, "match": "^\\s*((?i:function|sub))\\s*([a-zA-Z_]\\w*)\\s*(\\()([^)]*)(\\)).*\\n?", "name": "meta.function.asp" }, { "begin": "(^[ \\t]+)?(?=')", "beginCaptures": { "1": { "name": "punctuation.whitespace.comment.leading.asp" } }, "end": "(?!\\G)", "patterns": [{ "begin": "'", "beginCaptures": { "0": { "name": "punctuation.definition.comment.asp" } }, "end": "\\n", "name": "comment.line.apostrophe.asp" }] }, { "match": "(?i:\\b(If|Then|Else|ElseIf|Else If|End If|While|Wend|For|To|Each|Case|Select|End Select|Return|Continue|Do|Until|Loop|Next|With|Exit Do|Exit For|Exit Function|Exit Property|Exit Sub|IIf)\\b)", "name": "keyword.control.asp" }, { "match": "(?i:\\b(Mod|And|Not|Or|Xor|as)\\b)", "name": "keyword.operator.asp" }, { "captures": { "1": { "name": "storage.type.asp" }, "2": { "name": "variable.other.bfeac.asp" }, "3": { "name": "meta.separator.comma.asp" } }, "match": "(?i:(dim)\\s*(?:(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\b)\\s*(,?)))", "name": "variable.other.dim.asp" }, { "match": "(?i:\\s*\\b(Call|Class|Const|Dim|Redim|Function|Sub|Private Sub|Public Sub|End Sub|End Function|End Class|End Property|Public Property|Private Property|Set|Let|Get|New|Randomize|Option Explicit|On Error Resume Next|On Error GoTo)\\b\\s*)", "name": "storage.type.asp" }, { "match": "(?i:\\b(Private|Public|Default)\\b)", "name": "storage.modifier.asp" }, { "match": "(?i:\\s*\\b(Empty|False|Nothing|Null|True)\\b)", "name": "constant.language.asp" }, { "begin": '"', "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.asp" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.definition.string.end.asp" } }, "name": "string.quoted.double.asp", "patterns": [{ "match": '""', "name": "constant.character.escape.apostrophe.asp" }] }, { "captures": { "1": { "name": "punctuation.definition.variable.asp" } }, "match": "(\\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\b\\s*", "name": "variable.other.asp" }, { "match": "(?i:\\b(Application|ObjectContext|Request|Response|Server|Session)\\b)", "name": "support.class.asp" }, { "match": "(?i:\\b(Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables)\\b)", "name": "support.class.collection.asp" }, { "match": "(?i:\\b(TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout)\\b)", "name": "support.constant.asp" }, { "match": "(?i:\\b(Lock|Unlock|SetAbort|SetComplete|BinaryRead|AddHeader|AppendToLog|BinaryWrite|Clear|End|Flush|Redirect|Write|CreateObject|HTMLEncode|MapPath|URLEncode|Abandon|Convert|Regex)\\b)", "name": "support.function.asp" }, { "match": "(?i:\\b(Application_OnEnd|Application_OnStart|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart)\\b)", "name": "support.function.event.asp" }, { "match": "(?i:(?<=as )(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\b))", "name": "support.type.vb.asp" }, { "match": "(?i:\\b(Array|Add|Asc|Atn|CBool|CByte|CCur|CDate|CDbl|Chr|CInt|CLng|Conversions|Cos|CreateObject|CSng|CStr|Date|DateAdd|DateDiff|DatePart|DateSerial|DateValue|Day|Derived|Math|Escape|Eval|Exists|Exp|Filter|FormatCurrency|FormatDateTime|FormatNumber|FormatPercent|GetLocale|GetObject|GetRef|Hex|Hour|InputBox|InStr|InStrRev|Int|Fix|IsArray|IsDate|IsEmpty|IsNull|IsNumeric|IsObject|Item|Items|Join|Keys|LBound|LCase|Left|Len|LoadPicture|Log|LTrim|RTrim|Trim|Maths|Mid|Minute|Month|MonthName|MsgBox|Now|Oct|Remove|RemoveAll|Replace|RGB|Right|Rnd|Round|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion|ScriptEngineMinorVersion|Second|SetLocale|Sgn|Sin|Space|Split|Sqr|StrComp|String|StrReverse|Tan|Time|Timer|TimeSerial|TimeValue|TypeName|UBound|UCase|Unescape|VarType|Weekday|WeekdayName|Year)\\b)", "name": "support.function.vb.asp" }, { "match": "-?\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\\b", "name": "constant.numeric.asp" }, { "match": "(?i:\\b(vbtrue|vbfalse|vbcr|vbcrlf|vbformfeed|vblf|vbnewline|vbnullchar|vbnullstring|int32|vbtab|vbverticaltab|vbbinarycompare|vbtextcomparevbsunday|vbmonday|vbtuesday|vbwednesday|vbthursday|vbfriday|vbsaturday|vbusesystemdayofweek|vbfirstjan1|vbfirstfourdays|vbfirstfullweek|vbgeneraldate|vblongdate|vbshortdate|vblongtime|vbshorttime|vbobjecterror|vbEmpty|vbNull|vbInteger|vbLong|vbSingle|vbDouble|vbCurrency|vbDate|vbString|vbObject|vbError|vbBoolean|vbVariant|vbDataObject|vbDecimal|vbByte|vbArray)\\b)", "name": "support.type.vb.asp" }, { "captures": { "1": { "name": "entity.name.function.asp" } }, "match": "(?i:(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\b)(?=\\(\\)?))", "name": "support.function.asp" }, { "match": "(?i:((?<=(\\+|=|-|\\&|\\\\|/|<|>|\\(|,))\\s*\\b([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?)\\b(?!(\\(|\\.))|\\b([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?)\\b(?=\\s*(\\+|=|-|\\&|\\\\|/|<|>|\\(|\\)))))", "name": "variable.other.asp" }, { "match": "!|\\$|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|\\*=|/=|%=|\\+=|\\-=|&=|\\^=|\\b(in|instanceof|new|delete|typeof|void)\\b", "name": "keyword.operator.js" }], "repository": { "round-brackets": { "begin": "\\(", "beginCaptures": { "0": { "name": "punctuation.section.round-brackets.begin.asp" } }, "end": "\\)", "endCaptures": { "0": { "name": "punctuation.section.round-brackets.end.asp" } }, "name": "meta.round-brackets", "patterns": [{ "include": "source.asp.vb.net" }] } }, "scopeName": "source.asp.vb.net", "aliases": ["cmd"] });
var vb = [
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/wikitext.mjs":
/*!****************************************************!*\
  !*** ./node_modules/shiki/dist/langs/wikitext.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ wikitext)
/* harmony export */ });
/* harmony import */ var _html_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html.mjs */ "./node_modules/shiki/dist/langs/html.mjs");
/* harmony import */ var _css_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css.mjs */ "./node_modules/shiki/dist/langs/css.mjs");
/* harmony import */ var _ini_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ini.mjs */ "./node_modules/shiki/dist/langs/ini.mjs");
/* harmony import */ var _java_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./java.mjs */ "./node_modules/shiki/dist/langs/java.mjs");
/* harmony import */ var _lua_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lua.mjs */ "./node_modules/shiki/dist/langs/lua.mjs");
/* harmony import */ var _make_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./make.mjs */ "./node_modules/shiki/dist/langs/make.mjs");
/* harmony import */ var _perl_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./perl.mjs */ "./node_modules/shiki/dist/langs/perl.mjs");
/* harmony import */ var _r_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./r.mjs */ "./node_modules/shiki/dist/langs/r.mjs");
/* harmony import */ var _ruby_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ruby.mjs */ "./node_modules/shiki/dist/langs/ruby.mjs");
/* harmony import */ var _php_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./php.mjs */ "./node_modules/shiki/dist/langs/php.mjs");
/* harmony import */ var _sql_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sql.mjs */ "./node_modules/shiki/dist/langs/sql.mjs");
/* harmony import */ var _vb_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./vb.mjs */ "./node_modules/shiki/dist/langs/vb.mjs");
/* harmony import */ var _xml_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./xml.mjs */ "./node_modules/shiki/dist/langs/xml.mjs");
/* harmony import */ var _xsl_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./xsl.mjs */ "./node_modules/shiki/dist/langs/xsl.mjs");
/* harmony import */ var _yaml_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./yaml.mjs */ "./node_modules/shiki/dist/langs/yaml.mjs");
/* harmony import */ var _bat_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./bat.mjs */ "./node_modules/shiki/dist/langs/bat.mjs");
/* harmony import */ var _clojure_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./clojure.mjs */ "./node_modules/shiki/dist/langs/clojure.mjs");
/* harmony import */ var _coffee_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./coffee.mjs */ "./node_modules/shiki/dist/langs/coffee.mjs");
/* harmony import */ var _c_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./c.mjs */ "./node_modules/shiki/dist/langs/c.mjs");
/* harmony import */ var _cpp_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./cpp.mjs */ "./node_modules/shiki/dist/langs/cpp.mjs");
/* harmony import */ var _diff_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./diff.mjs */ "./node_modules/shiki/dist/langs/diff.mjs");
/* harmony import */ var _docker_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./docker.mjs */ "./node_modules/shiki/dist/langs/docker.mjs");
/* harmony import */ var _go_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./go.mjs */ "./node_modules/shiki/dist/langs/go.mjs");
/* harmony import */ var _groovy_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./groovy.mjs */ "./node_modules/shiki/dist/langs/groovy.mjs");
/* harmony import */ var _pug_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pug.mjs */ "./node_modules/shiki/dist/langs/pug.mjs");
/* harmony import */ var _javascript_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./javascript.mjs */ "./node_modules/shiki/dist/langs/javascript.mjs");
/* harmony import */ var _jsonc_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./jsonc.mjs */ "./node_modules/shiki/dist/langs/jsonc.mjs");
/* harmony import */ var _less_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./less.mjs */ "./node_modules/shiki/dist/langs/less.mjs");
/* harmony import */ var _objective_c_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./objective-c.mjs */ "./node_modules/shiki/dist/langs/objective-c.mjs");
/* harmony import */ var _swift_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./swift.mjs */ "./node_modules/shiki/dist/langs/swift.mjs");
/* harmony import */ var _scss_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./scss.mjs */ "./node_modules/shiki/dist/langs/scss.mjs");
/* harmony import */ var _raku_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./raku.mjs */ "./node_modules/shiki/dist/langs/raku.mjs");
/* harmony import */ var _powershell_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./powershell.mjs */ "./node_modules/shiki/dist/langs/powershell.mjs");
/* harmony import */ var _python_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./python.mjs */ "./node_modules/shiki/dist/langs/python.mjs");
/* harmony import */ var _julia_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./julia.mjs */ "./node_modules/shiki/dist/langs/julia.mjs");
/* harmony import */ var _rust_mjs__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./rust.mjs */ "./node_modules/shiki/dist/langs/rust.mjs");
/* harmony import */ var _scala_mjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./scala.mjs */ "./node_modules/shiki/dist/langs/scala.mjs");
/* harmony import */ var _shellscript_mjs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./shellscript.mjs */ "./node_modules/shiki/dist/langs/shellscript.mjs");
/* harmony import */ var _typescript_mjs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./typescript.mjs */ "./node_modules/shiki/dist/langs/typescript.mjs");
/* harmony import */ var _csharp_mjs__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./csharp.mjs */ "./node_modules/shiki/dist/langs/csharp.mjs");
/* harmony import */ var _fsharp_mjs__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./fsharp.mjs */ "./node_modules/shiki/dist/langs/fsharp.mjs");
/* harmony import */ var _dart_mjs__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./dart.mjs */ "./node_modules/shiki/dist/langs/dart.mjs");
/* harmony import */ var _handlebars_mjs__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./handlebars.mjs */ "./node_modules/shiki/dist/langs/handlebars.mjs");
/* harmony import */ var _markdown_mjs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./markdown.mjs */ "./node_modules/shiki/dist/langs/markdown.mjs");
/* harmony import */ var _erlang_mjs__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./erlang.mjs */ "./node_modules/shiki/dist/langs/erlang.mjs");
/* harmony import */ var _elixir_mjs__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./elixir.mjs */ "./node_modules/shiki/dist/langs/elixir.mjs");
/* harmony import */ var _latex_mjs__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./latex.mjs */ "./node_modules/shiki/dist/langs/latex.mjs");
/* harmony import */ var _bibtex_mjs__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./bibtex.mjs */ "./node_modules/shiki/dist/langs/bibtex.mjs");
/* harmony import */ var _json_mjs__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./json.mjs */ "./node_modules/shiki/dist/langs/json.mjs");


























































const lang = Object.freeze({ "displayName": "Wikitext", "name": "wikitext", "patterns": [{ "include": "#wikitext" }, { "include": "text.html.basic" }], "repository": { "wikitext": { "patterns": [{ "include": "#signature" }, { "include": "#redirect" }, { "include": "#magic-words" }, { "include": "#argument" }, { "include": "#template" }, { "include": "#convert" }, { "include": "#list" }, { "include": "#table" }, { "include": "#font-style" }, { "include": "#internal-link" }, { "include": "#external-link" }, { "include": "#heading" }, { "include": "#break" }, { "include": "#wikixml" }, { "include": "#extension-comments" }], "repository": { "argument": { "begin": "({{{)", "end": "(}}})", "name": "variable.parameter.wikitext", "patterns": [{ "captures": { "1": { "name": "variable.other.wikitext" }, "2": { "name": "keyword.operator.wikitext" } }, "match": "(?:^|\\G)([^#:\\|\\[\\]\\{\\}\\|]*)(\\|)" }, { "include": "$self" }] }, "break": { "match": "^-{4,}", "name": "markup.changed.wikitext" }, "convert": { "begin": "(-\\{(?!\\{))([a-zA-Z](\\|))?", "captures": { "1": { "name": "punctuation.definition.tag.template.wikitext" }, "2": { "name": "entity.name.function.type.wikitext" }, "3": { "name": "keyword.operator.wikitext" } }, "end": "(\\}-)", "patterns": [{ "include": "$self" }, { "captures": { "1": { "name": "entity.name.tag.language.wikitext" }, "2": { "name": "punctuation.separator.key-value.wikitext" }, "3": { "name": "string.unquoted.text.wikitext", "patterns": [{ "include": "$self" }] }, "4": { "name": "punctuation.terminator.rule.wikitext" } }, "match": "(?:([a-zA-Z\\-]*)(:))?(.*?)(?:(;)|(?=\\}-))" }] }, "extension-comments": { "begin": "(<%--)\\s*(\\[)([A-Z_]*)(\\])", "beginCaptures": { "1": { "name": "punctuation.definition.comment.extension.wikitext" }, "2": { "name": "punctuation.definition.tag.extension.wikitext" }, "3": { "name": "storage.type.extension.wikitext" }, "4": { "name": "punctuation.definition.tag.extension.wikitext" } }, "end": "(\\[)([A-Z_]*)(\\])\\s*(--%>)", "endCaptures": { "1": { "name": "punctuation.definition.tag.extension.wikitext" }, "2": { "name": "storage.type.extension.wikitext" }, "3": { "name": "punctuation.definition.tag.extension.wikitext" }, "4": { "name": "punctuation.definition.comment.extension.wikitext" } }, "name": "comment.block.documentation.special.extension.wikitext", "patterns": [{ "captures": { "0": { "name": "meta.object.member.extension.wikitext" }, "1": { "name": "meta.object-literal.key.extension.wikitext" }, "2": { "name": "punctuation.separator.dictionary.key-value.extension.wikitext" }, "3": { "name": "punctuation.definition.string.begin.extension.wikitext" }, "4": { "name": "string.quoted.other.extension.wikitext" }, "5": { "name": "punctuation.definition.string.end.extension.wikitext" } }, "match": "(\\w*)\\s*(=)\\s*(#)(.*?)(#)" }] }, "external-link": { "patterns": [{ "captures": { "1": { "name": "punctuation.definition.tag.link.external.wikitext" }, "2": { "name": "entity.name.tag.url.wikitext" }, "3": { "name": "string.other.link.external.title.wikitext", "patterns": [{ "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.link.external.wikitext" } }, "match": "(\\[)((?:(?:(?:http(?:s)?)|(?:ftp(?:s)?)):\\/\\/)[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\.~:\\/?#%@!\\$&'\\(\\)\\*\\+,;=.]+)\\s*?([^\\]]*)(\\])", "name": "meta.link.external.wikitext" }, { "captures": { "1": { "name": "punctuation.definition.tag.link.external.wikitext" }, "2": { "name": "invalid.illegal.bad-url.wikitext" }, "3": { "name": "string.other.link.external.title.wikitext", "patterns": [{ "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.link.external.wikitext" } }, "match": "(\\[)([\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\.~:\\/?#%@!\\$&'\\(\\)\\*\\+,;=.]+)\\s*?([^\\]]*)(\\])", "name": "invalid.illegal.bad-link.wikitext" }] }, "font-style": { "patterns": [{ "include": "#bold" }, { "include": "#italic" }], "repository": { "bold": { "begin": "(''')", "end": "(''')|$", "name": "markup.bold.wikitext", "patterns": [{ "include": "#italic" }, { "include": "$self" }] }, "italic": { "begin": "('')", "end": "((?=[^'])|(?=''))''((?=[^'])|(?=''))|$", "name": "markup.italic.wikitext", "patterns": [{ "include": "#bold" }, { "include": "$self" }] } } }, "heading": { "captures": { "2": { "name": "string.quoted.other.heading.wikitext", "patterns": [{ "include": "$self" }] } }, "match": "^(={1,6})\\s*(.+?)\\s*(\\1)$", "name": "markup.heading.wikitext" }, "internal-link": { "TODO": "SINGLE LINE", "begin": "(\\[\\[)(([^#:\\|\\[\\]\\{\\}]*:)*)?([^\\|\\[\\]]*)?", "captures": { "1": { "name": "punctuation.definition.tag.link.internal.wikitext" }, "2": { "name": "entity.name.tag.namespace.wikitext" }, "4": { "name": "entity.other.attribute-name.wikitext" } }, "end": "(\\]\\])", "name": "string.quoted.internal-link.wikitext", "patterns": [{ "include": "$self" }, { "captures": { "1": { "name": "keyword.operator.wikitext" }, "5": { "name": "entity.other.attribute-name.localname.wikitext" } }, "match": "(\\|)|(?:\\s*)(?:([-\\w.]+)((:)))?([-\\w.:]+)\\s*(=)" }] }, "list": { "name": "markup.list.wikitext", "patterns": [{ "captures": { "1": { "name": "punctuation.definition.list.begin.markdown.wikitext" } }, "match": "^([#*;:]+)" }] }, "magic-words": { "patterns": [{ "include": "#behavior-switches" }, { "include": "#outdated-behavior-switches" }, { "include": "#variables" }], "repository": { "behavior-switches": { "match": "(?x)    # turn on extended mode\n(?i)    # ignore case\n  (__)  # start: __\n    (\n      NOTOC|FORCETOC|TOC|NOEDITSECTION|NEWSECTIONLINK|NOGALLERY|\n      HIDDENCAT|EXPECTUNUSEDCATEGORY|NOCONTENTCONVERT|NOCC|\n      NOTITLECONVERT|NOTC|INDEX|NOINDEX|STATICREDIRECT|NOGLOBAL|\n      DISAMBIG\n    )\n  (__)", "name": "constant.language.behavior-switcher.wikitext" }, "outdated-behavior-switches": { "match": "(?x)\n(?i)\n  (__)\n    (\n      START|END\n    )\n  (__)", "name": "invalid.deprecated.behavior-switcher.wikitext" }, "variables": { "patterns": [{ "match": "(?x)\n(?i)\n  (\\{\\{)\n    (\n      CURRENTYEAR|CURRENTMONTH|CURRENTMONTH1|CURRENTMONTHNAME|\n      CURRENTMONTHNAMEGEN|CURRENTMONTHABBREV|CURRENTDAY|\n      CURRENTDAY2|CURRENTDOW|CURRENTDAYNAME|CURRENTTIME|\n      CURRENTHOUR|CURRENTWEEK|CURRENTTIMESTAMP|LOCALYEAR|\n      LOCALMONTH|LOCALMONTH1|LOCALMONTHNAME|LOCALMONTHNAMEGEN|\n      LOCALMONTHABBREV|LOCALDAY|LOCALDAY2|LOCALDOW|\n      LOCALDAYNAME|LOCALTIME|LOCALHOUR|LOCALWEEK|\n      LOCALTIMESTAMP\n    )\n  (\\}\\})", "name": "constant.language.variables.time.wikitext" }, { "match": "(?x)\n(?i)\n  (\\{\\{)\n    (\n      SITENAME|SERVER|SERVERNAME|DIRMARK|DIRECTIONMARK|\n      SCRIPTPATH|STYLEPATH|CURRENTVERSION|CONTENTLANGUAGE|\n      CONTENTLANG|PAGEID|PAGELANGUAGE|CASCADINGSOURCES|\n      REVISIONID|REVISIONDAY|REVISIONDAY2|REVISIONMONTH|\n      REVISIONMONTH1|REVISIONYEAR|REVISIONTIMESTAMP|\n      REVISIONUSER|REVISIONSIZE\n    )\n  (\\}\\})", "name": "constant.language.variables.metadata.wikitext" }, { "match": "ISBN\\s+((9[\\-\\s]?7[\\-\\s]?[89][\\-\\s]?)?([0-9][\\-\\s]?){10})", "name": "constant.language.variables.isbn.wikitext" }, { "match": "RFC\\s+[0-9]+", "name": "constant.language.variables.rfc.wikitext" }, { "match": "PMID\\s+[0-9]+", "name": "constant.language.variables.pmid.wikitext" }] } } }, "redirect": { "patterns": [{ "captures": { "1": { "name": "keyword.control.redirect.wikitext" }, "2": { "name": "punctuation.definition.tag.link.internal.begin.wikitext" }, "3": { "name": "entity.name.tag.namespace.wikitext" }, "4": null, "5": { "name": "entity.other.attribute-name.wikitext" }, "6": { "name": "invalid.deprecated.ineffective.wikitext" }, "7": { "name": "punctuation.definition.tag.link.internal.end.wikitext" } }, "match": "(?i)(^\\s*?#REDIRECT)\\s*(\\[\\[)(([^#:\\|\\[\\]\\{\\}]*?:)*)?([^\\|\\[\\]]*)?(\\|[^\\[\\]]*?)?(\\]\\])" }] }, "signature": { "patterns": [{ "match": "~{3,5}", "name": "keyword.other.signature.wikitext" }] }, "table": { "patterns": [{ "begin": "^\\s*(\\{\\|)(.*)$", "captures": { "1": { "name": "punctuation.definition.tag.table.wikitext" }, "2": { "patterns": [{ "include": "text.html.basic#attribute" }] } }, "end": "^\\s*(\\|\\})", "name": "meta.tag.block.table.wikitext", "patterns": [{ "include": "$self" }, { "begin": "^\\s*(\\|-)\\s*", "beginCaptures": { "1": { "name": "punctuation.definition.tag.begin.wikitext" } }, "end": "$", "name": "meta.tag.block.table-row.wikitext", "patterns": [{ "include": "$self" }, { "include": "text.html.basic#attribute" }, { "match": "\\|.*", "name": "invalid.illegal.bad-table-context.wikitext" }] }, { "begin": "^\\s*(!)(([^\\[]*?)(\\|))?(.*?)(?=(!!)|$)", "beginCaptures": { "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": null, "3": { "patterns": [{ "include": "$self" }, { "include": "text.html.basic#attribute" }] }, "4": { "name": "punctuation.definition.tag.wikitext" }, "5": { "name": "markup.bold.style.wikitext" } }, "end": "$", "name": "meta.tag.block.th.heading", "patterns": [{ "captures": { "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.wikitext" }, "5": { "name": "markup.bold.style.wikitext" } }, "match": "(!!)(([^\\[]*?)(\\|))?(.*?)(?=(!!)|$)", "name": "meta.tag.block.th.inline.wikitext" }, { "include": "$self" }] }, { "captures": { "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "string.unquoted.caption.wikitext" } }, "end": "$", "match": "^\\s*(\\|\\+)(.*?)$", "name": "meta.tag.block.caption.wikitext", "patterns": [{ "include": "$self" }] }, { "begin": "^\\s*(\\|)", "beginCaptures": { "1": { "name": "punctuation.definition.tag.wikitext" } }, "end": "$", "patterns": [{ "include": "$self" }, { "match": "\\|\\|", "name": "keyword.operator.wikitext" }] }] }] }, "template": { "begin": "(\\{\\{)\\s*(([^#:\\|\\[\\]\\{\\}]*(:))*)\\s*((#[^#:\\|\\[\\]\\{\\}]+(:))*)([^#:\\|\\[\\]\\{\\}]*)", "captures": { "1": { "name": "punctuation.definition.tag.template.wikitext" }, "2": { "name": "entity.name.tag.local-name.wikitext" }, "4": { "name": "punctuation.separator.namespace.wikitext" }, "5": { "name": "entity.name.function.wikitext" }, "7": { "name": "punctuation.separator.namespace.wikitext" }, "8": { "name": "entity.name.tag.local-name.wikitext" } }, "end": "(\\}\\})", "patterns": [{ "include": "$self" }, { "match": "(\\|)", "name": "keyword.operator.wikitext" }, { "captures": { "1": { "name": "entity.other.attribute-name.namespace.wikitext" }, "2": { "name": "punctuation.separator.namespace.wikitext" }, "3": { "name": "entity.other.attribute-name.local-name.wikitext" }, "4": { "name": "keyword.operator.equal.wikitext" } }, "match": "(?<=\\|)\\s*(?:([-\\w.]+)(:))?([-\\w\\s\\.:]+)\\s*(=)" }] }, "wikixml": { "patterns": [{ "include": "#wiki-self-closed-tags" }, { "include": "#normal-wiki-tags" }, { "include": "#nowiki" }, { "include": "#ref" }, { "include": "#jsonin" }, { "include": "#math" }, { "include": "#syntax-highlight" }], "repository": { "jsonin": { "begin": "(?i)(<)(graph|templatedata)(\\s+[^>]+)?\\s*(>)", "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "contentName": "meta.embedded.block.json", "end": "(?i)(</)(\\2)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "include": "source.json" }] }, "math": { "begin": "(?i)(<)(math|chem|ce)(\\s+[^>]+)?\\s*(>)", "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "contentName": "meta.embedded.block.latex", "end": "(?i)(</)(\\2)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "include": "text.html.markdown.math#math" }] }, "normal-wiki-tags": { "captures": { "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "match": "(?i)(</?)(includeonly|onlyinclude|noinclude)(\\s+[^>]+)?\\s*(>)", "name": "meta.tag.metedata.normal.wikitext" }, "nowiki": { "begin": "(?i)(<)(nowiki)(\\s+[^>]+)?\\s*(>)", "beginCaptures": { "0": { "name": "meta.tag.metadata.nowiki.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "contentName": "meta.embedded.block.plaintext", "end": "(?i)(</)(nowiki)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.nowiki.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } } }, "ref": { "begin": "(?i)(<)(ref)(\\s+[^>]+)?\\s*(>)", "beginCaptures": { "0": { "name": "meta.tag.metadata.ref.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "contentName": "meta.block.ref.wikitext", "end": "(?i)(</)(ref)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.ref.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "include": "$self" }] }, "syntax-highlight": { "patterns": [{ "include": "#hl-css" }, { "include": "#hl-html" }, { "include": "#hl-ini" }, { "include": "#hl-java" }, { "include": "#hl-lua" }, { "include": "#hl-makefile" }, { "include": "#hl-perl" }, { "include": "#hl-r" }, { "include": "#hl-ruby" }, { "include": "#hl-php" }, { "include": "#hl-sql" }, { "include": "#hl-vb-net" }, { "include": "#hl-xml" }, { "include": "#hl-xslt" }, { "include": "#hl-yaml" }, { "include": "#hl-bat" }, { "include": "#hl-clojure" }, { "include": "#hl-coffee" }, { "include": "#hl-c" }, { "include": "#hl-cpp" }, { "include": "#hl-diff" }, { "include": "#hl-dockerfile" }, { "include": "#hl-go" }, { "include": "#hl-groovy" }, { "include": "#hl-pug" }, { "include": "#hl-js" }, { "include": "#hl-json" }, { "include": "#hl-less" }, { "include": "#hl-objc" }, { "include": "#hl-swift" }, { "include": "#hl-scss" }, { "include": "#hl-perl6" }, { "include": "#hl-powershell" }, { "include": "#hl-python" }, { "include": "#hl-julia" }, { "include": "#hl-rust" }, { "include": "#hl-scala" }, { "include": "#hl-shell" }, { "include": "#hl-ts" }, { "include": "#hl-csharp" }, { "include": "#hl-fsharp" }, { "include": "#hl-dart" }, { "include": "#hl-handlebars" }, { "include": "#hl-markdown" }, { "include": "#hl-erlang" }, { "include": "#hl-elixir" }, { "include": "#hl-latex" }, { "include": "#hl-bibtex" }], "repository": { "hl-bat": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(['"]?)(?:batch|bat|dosbatch|winbatch)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.bat", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.batchfile" }] }] }, "hl-bibtex": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:bibtex|bib)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.bibtex", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.bibtex" }] }] }, "hl-c": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)c\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.c", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.c" }] }] }, "hl-clojure": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:clojure|clj)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.clojure", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.clojure" }] }] }, "hl-coffee": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:coffeescript|coffee-script|coffee)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.coffee", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.coffee" }] }] }, "hl-cpp": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:cpp|c\\+\\+)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.cpp", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.cpp" }] }] }, "hl-csharp": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:csharp|c#|cs)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.csharp", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.cs" }] }] }, "hl-css": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)css\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.css", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.css" }] }] }, "hl-dart": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)dart\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.dart", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.dart" }] }] }, "hl-diff": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:diff|udiff)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.diff", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.diff" }] }] }, "hl-dockerfile": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:docker|dockerfile)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.dockerfile", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.dockerfile" }] }] }, "hl-elixir": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:elixir|ex|exs)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.elixir", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.elixir" }] }] }, "hl-erlang": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)erlang\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.erlang", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.erlang" }] }] }, "hl-fsharp": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:fsharp|f#)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.fsharp", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.fsharp" }] }] }, "hl-go": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:go|golang)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.go", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.go" }] }] }, "hl-groovy": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)groovy\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.groovy", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.groovy" }] }] }, "hl-handlebars": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)handlebars\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.handlebars", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.html.handlebars" }] }] }, "hl-html": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)html\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.html", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.html.basic" }] }] }, "hl-ini": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:ini|cfg|dosini)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.ini", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.ini" }] }] }, "hl-java": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)java\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.java", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.java" }] }] }, "hl-js": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:javascript|js)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.js", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.js" }] }] }, "hl-json": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"json"|'json'|"json-object"|'json-object'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.json", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.json.comments" }] }] }, "hl-julia": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"julia"|'julia'|"jl"|'jl'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.julia", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.julia" }] }] }, "hl-latex": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:tex|latex)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.latex", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.tex.latex" }] }] }, "hl-less": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"less"|'less'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.less", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.css.less" }] }] }, "hl-lua": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)lua\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.lua", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.lua" }] }] }, "hl-makefile": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:make|makefile|mf|bsdmake)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.makefile", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.makefile" }] }] }, "hl-markdown": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:markdown|md)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.markdown", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.html.markdown" }] }] }, "hl-objc": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"objective-c"|'objective-c'|"objectivec"|'objectivec'|"obj-c"|'obj-c'|"objc"|'objc'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.objc", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.objc" }] }] }, "hl-perl": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:perl|ple)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.perl", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.perl" }] }] }, "hl-perl6": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"perl6"|'perl6'|"pl6"|'pl6'|"raku"|'raku'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.perl6", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.perl.6" }] }] }, "hl-php": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:php|php3|php4|php5)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.php", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.php" }] }] }, "hl-powershell": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"powershell"|'powershell'|"pwsh"|'pwsh'|"posh"|'posh'|"ps1"|'ps1'|"psm1"|'psm1'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.powershell", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.powershell" }] }] }, "hl-pug": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:pug|jade)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.pug", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.pug" }] }] }, "hl-python": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"python"|'python'|"py"|'py'|"sage"|'sage'|"python3"|'python3'|"py3"|'py3'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.python", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.python" }] }] }, "hl-r": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:splus|s|r)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.r", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.r" }] }] }, "hl-ruby": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:ruby|rb|duby)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.ruby", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.ruby" }] }] }, "hl-rust": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"rust"|'rust'|"rs"|'rs'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": null, "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.rust" }] }] }, "hl-scala": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"scala"|'scala'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.scala", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.scala" }] }] }, "hl-scss": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"scss"|'scss'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.scss", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.css.scss" }] }] }, "hl-shell": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"bash"|'bash'|"sh"|'sh'|"ksh"|'ksh'|"zsh"|'zsh'|"shell"|'shell'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.shell", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.shell" }] }] }, "hl-sql": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)sql\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.sql", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.sql" }] }] }, "hl-swift": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"swift"|'swift'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.swift", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.swift" }] }] }, "hl-ts": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:"typescript"|'typescript'|"ts"|'ts'))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.ts", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.ts" }] }] }, "hl-vb-net": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)(?:vb\\.net|vbnet|lobas|oobas|sobas)\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.vb-net", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.asp.vb.net" }] }] }, "hl-xml": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)xml\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.xml", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.xml" }] }] }, "hl-xslt": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)xslt\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.xslt", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "text.xml.xsl" }] }] }, "hl-yaml": { "begin": `(?i)(<)(syntaxhighlight)((?:\\s+[^>]+)?(?:\\s+lang=(?:(['"]?)yaml\\4))(?:\\s+[^>]+)?)\\s*(>)`, "beginCaptures": { "0": { "name": "meta.tag.metadata.start.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "5": { "name": "punctuation.definition.tag.end.wikitext" } }, "end": "(?i)(</)(syntaxhighlight)\\s*(>)", "endCaptures": { "0": { "name": "meta.tag.metadata.end.wikitext" }, "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "name": "punctuation.definition.tag.end.wikitext" } }, "patterns": [{ "begin": "(^|\\G)", "contentName": "meta.embedded.block.yaml", "end": "(?i)(?=</syntaxhighlight\\s*>)", "patterns": [{ "include": "source.yaml" }] }] } } }, "wiki-self-closed-tags": { "captures": { "1": { "name": "punctuation.definition.tag.begin.wikitext" }, "2": { "name": "entity.name.tag.wikitext" }, "3": { "patterns": [{ "include": "text.html.basic#attribute" }, { "include": "$self" }] }, "4": { "name": "punctuation.definition.tag.end.wikitext" } }, "match": "(?i)(<)(templatestyles|ref|nowiki|onlyinclude|includeonly)(\\s+[^>]+)?\\s*(/>)", "name": "meta.tag.metedata.void.wikitext" } } } } } }, "scopeName": "source.wikitext", "embeddedLangs": ["html", "css", "ini", "java", "lua", "make", "perl", "r", "ruby", "php", "sql", "vb", "xml", "xsl", "yaml", "bat", "clojure", "coffee", "c", "cpp", "diff", "docker", "go", "groovy", "pug", "javascript", "jsonc", "less", "objective-c", "swift", "scss", "raku", "powershell", "python", "julia", "rust", "scala", "shellscript", "typescript", "csharp", "fsharp", "dart", "handlebars", "markdown", "erlang", "elixir", "latex", "bibtex", "json"], "aliases": ["mediawiki", "wiki"] });
var wikitext = [
  ..._html_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
  ..._css_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
  ..._ini_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
  ..._java_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
  ..._lua_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
  ..._make_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
  ..._perl_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
  ..._r_mjs__WEBPACK_IMPORTED_MODULE_7__["default"],
  ..._ruby_mjs__WEBPACK_IMPORTED_MODULE_8__["default"],
  ..._php_mjs__WEBPACK_IMPORTED_MODULE_9__["default"],
  ..._sql_mjs__WEBPACK_IMPORTED_MODULE_10__["default"],
  ..._vb_mjs__WEBPACK_IMPORTED_MODULE_11__["default"],
  ..._xml_mjs__WEBPACK_IMPORTED_MODULE_12__["default"],
  ..._xsl_mjs__WEBPACK_IMPORTED_MODULE_13__["default"],
  ..._yaml_mjs__WEBPACK_IMPORTED_MODULE_14__["default"],
  ..._bat_mjs__WEBPACK_IMPORTED_MODULE_15__["default"],
  ..._clojure_mjs__WEBPACK_IMPORTED_MODULE_16__["default"],
  ..._coffee_mjs__WEBPACK_IMPORTED_MODULE_17__["default"],
  ..._c_mjs__WEBPACK_IMPORTED_MODULE_18__["default"],
  ..._cpp_mjs__WEBPACK_IMPORTED_MODULE_19__["default"],
  ..._diff_mjs__WEBPACK_IMPORTED_MODULE_20__["default"],
  ..._docker_mjs__WEBPACK_IMPORTED_MODULE_21__["default"],
  ..._go_mjs__WEBPACK_IMPORTED_MODULE_22__["default"],
  ..._groovy_mjs__WEBPACK_IMPORTED_MODULE_23__["default"],
  ..._pug_mjs__WEBPACK_IMPORTED_MODULE_24__["default"],
  ..._javascript_mjs__WEBPACK_IMPORTED_MODULE_25__["default"],
  ..._jsonc_mjs__WEBPACK_IMPORTED_MODULE_26__["default"],
  ..._less_mjs__WEBPACK_IMPORTED_MODULE_27__["default"],
  ..._objective_c_mjs__WEBPACK_IMPORTED_MODULE_28__["default"],
  ..._swift_mjs__WEBPACK_IMPORTED_MODULE_29__["default"],
  ..._scss_mjs__WEBPACK_IMPORTED_MODULE_30__["default"],
  ..._raku_mjs__WEBPACK_IMPORTED_MODULE_31__["default"],
  ..._powershell_mjs__WEBPACK_IMPORTED_MODULE_32__["default"],
  ..._python_mjs__WEBPACK_IMPORTED_MODULE_33__["default"],
  ..._julia_mjs__WEBPACK_IMPORTED_MODULE_34__["default"],
  ..._rust_mjs__WEBPACK_IMPORTED_MODULE_35__["default"],
  ..._scala_mjs__WEBPACK_IMPORTED_MODULE_36__["default"],
  ..._shellscript_mjs__WEBPACK_IMPORTED_MODULE_37__["default"],
  ..._typescript_mjs__WEBPACK_IMPORTED_MODULE_38__["default"],
  ..._csharp_mjs__WEBPACK_IMPORTED_MODULE_39__["default"],
  ..._fsharp_mjs__WEBPACK_IMPORTED_MODULE_40__["default"],
  ..._dart_mjs__WEBPACK_IMPORTED_MODULE_41__["default"],
  ..._handlebars_mjs__WEBPACK_IMPORTED_MODULE_42__["default"],
  ..._markdown_mjs__WEBPACK_IMPORTED_MODULE_43__["default"],
  ..._erlang_mjs__WEBPACK_IMPORTED_MODULE_44__["default"],
  ..._elixir_mjs__WEBPACK_IMPORTED_MODULE_45__["default"],
  ..._latex_mjs__WEBPACK_IMPORTED_MODULE_46__["default"],
  ..._bibtex_mjs__WEBPACK_IMPORTED_MODULE_47__["default"],
  ..._json_mjs__WEBPACK_IMPORTED_MODULE_48__["default"],
  lang
];




/***/ }),

/***/ "./node_modules/shiki/dist/langs/xsl.mjs":
/*!***********************************************!*\
  !*** ./node_modules/shiki/dist/langs/xsl.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ xsl)
/* harmony export */ });
/* harmony import */ var _xml_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./xml.mjs */ "./node_modules/shiki/dist/langs/xml.mjs");



const lang = Object.freeze({ "displayName": "XSL", "name": "xsl", "patterns": [{ "begin": "(<)(xsl)((:))(template)", "captures": { "1": { "name": "punctuation.definition.tag.xml" }, "2": { "name": "entity.name.tag.namespace.xml" }, "3": { "name": "entity.name.tag.xml" }, "4": { "name": "punctuation.separator.namespace.xml" }, "5": { "name": "entity.name.tag.localname.xml" } }, "end": "(>)", "name": "meta.tag.xml.template", "patterns": [{ "captures": { "1": { "name": "entity.other.attribute-name.namespace.xml" }, "2": { "name": "entity.other.attribute-name.xml" }, "3": { "name": "punctuation.separator.namespace.xml" }, "4": { "name": "entity.other.attribute-name.localname.xml" } }, "match": " (?:([-_a-zA-Z0-9]+)((:)))?([a-zA-Z-]+)" }, { "include": "#doublequotedString" }, { "include": "#singlequotedString" }] }, { "include": "text.xml" }], "repository": { "doublequotedString": { "begin": '"', "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.xml" } }, "end": '"', "endCaptures": { "0": { "name": "punctuation.definition.string.end.xml" } }, "name": "string.quoted.double.xml" }, "singlequotedString": { "begin": "'", "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.xml" } }, "end": "'", "endCaptures": { "0": { "name": "punctuation.definition.string.end.xml" } }, "name": "string.quoted.single.xml" } }, "scopeName": "text.xml.xsl", "embeddedLangs": ["xml"] });
var xsl = [
  ..._xml_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
  lang
];




/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_shiki_dist_langs_wikitext_mjs.js.map