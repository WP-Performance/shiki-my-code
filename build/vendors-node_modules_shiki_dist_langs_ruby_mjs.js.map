{"version":3,"file":"vendors-node_modules_shiki_dist_langs_ruby_mjs.js","mappings":"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","sources":["webpack://shiki-my-code/./node_modules/shiki/dist/langs/ruby.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/langs/xml.mjs"],"sourcesContent":["import html from './html.mjs';\nimport xml from './xml.mjs';\nimport sql from './sql.mjs';\nimport css from './css.mjs';\nimport c from './c.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport lua from './lua.mjs';\nimport './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Ruby\", \"name\": \"ruby\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.class.ruby\" }, \"2\": { \"name\": \"entity.name.type.class.ruby\" }, \"3\": { \"name\": \"keyword.operator.other.ruby\" }, \"4\": { \"name\": \"entity.other.inherited-class.ruby\" }, \"5\": { \"name\": \"keyword.operator.other.ruby\" }, \"6\": { \"name\": \"variable.other.object.ruby\" } }, \"match\": \"^\\\\s*(class)\\\\s+(?:([.a-zA-Z0-9_:]+)(?:\\\\s*(<)\\\\s*([.a-zA-Z0-9_:]+))?|(<<)\\\\s*([.a-zA-Z0-9_:]+))\", \"name\": \"meta.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.module.ruby\" }, \"2\": { \"name\": \"entity.name.type.module.ruby\" }, \"3\": { \"name\": \"entity.other.inherited-class.module.first.ruby\" }, \"4\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"5\": { \"name\": \"entity.other.inherited-class.module.second.ruby\" }, \"6\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"7\": { \"name\": \"entity.other.inherited-class.module.third.ruby\" }, \"8\": { \"name\": \"punctuation.separator.inheritance.ruby\" } }, \"match\": \"^\\\\s*(module)\\\\s+(([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))*[A-Z]\\\\w*)\", \"name\": \"meta.module.ruby\" }, { \"comment\": \"else if is a common mistake carried over from other languages. it works if you put in a second end, but it\\u2019s never what you want.\", \"match\": \"(?<!\\\\.)\\\\belse(\\\\s)+if\\\\b\", \"name\": \"invalid.deprecated.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.9 syntax)\", \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.8 syntax)\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!])?)(?=\\\\s*=>)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"comment\": \"everything being a reserved word, not a value and needing a 'end' is a..\", \"match\": \"(?<!\\\\.)\\\\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\\\b(?![?!])\", \"name\": \"keyword.control.ruby\" }, { \"comment\": \"contextual smart pair support for block parameters\", \"match\": \"(?<!\\\\.)\\\\bdo\\\\b\", \"name\": \"keyword.control.start-block.ruby\" }, { \"comment\": \"contextual smart pair support\", \"match\": \"(?<=\\\\{)(\\\\s+)\", \"name\": \"meta.syntax.ruby.start-block\" }, { \"match\": \"(?<!\\\\.)\\\\b(alias|alias_method|block_given[?]|break|defined[?]|iterator[?]|next|redo|retry|return|super|undef|yield)(\\\\b|(?<=[?]))(?![?!])\", \"name\": \"keyword.control.pseudo-method.ruby\" }, { \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\", \"name\": \"constant.language.ruby\" }, { \"match\": \"\\\\b(__(dir|FILE|LINE)__)\\\\b(?![?!])\", \"name\": \"variable.language.ruby\" }, { \"begin\": \"^__END__\\\\n\", \"captures\": { \"0\": { \"name\": \"string.unquoted.program-block.ruby\" } }, \"comment\": \"__END__ marker\", \"contentName\": \"text.plain\", \"end\": \"(?=not)impossible\", \"patterns\": [{ \"begin\": \"(?=<?xml|<(?i:html\\\\b)|!DOCTYPE (?i:html\\\\b))\", \"end\": \"(?=not)impossible\", \"name\": \"text.html.embedded.ruby\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, { \"match\": \"\\\\b(self)\\\\b(?![?!])\", \"name\": \"variable.language.self.ruby\" }, { \"comment\": \" everything being a method but having a special function is a..\", \"match\": \"\\\\b(initialize|new|loop|include|extend|prepend|fail|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\\\\b(?![?!])\", \"name\": \"keyword.other.special-method.ruby\" }, { \"begin\": \"\\\\b(?<!\\\\.|::)(require|require_relative)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.other.special-method.ruby\" } }, \"end\": \"$|(?=#|\\\\})\", \"name\": \"meta.require.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)(!|@|&|`|'|\\\\+|\\\\d+|~|=|/|\\\\\\\\|,|;|\\\\.|<|>|_|\\\\*|\\\\$|\\\\?|:|\\\"|-[0adFiIlpvw])\", \"name\": \"variable.other.readwrite.global.pre-defined.ruby\" }, { \"begin\": \"\\\\b(ENV)\\\\[\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.constant.ruby\" } }, \"end\": \"\\\\]\", \"name\": \"meta.environment-variable.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b[A-Z]\\\\w*(?=((\\\\.|::)[A-Za-z]|\\\\[))\", \"name\": \"support.class.ruby\" }, { \"match\": \"\\\\b(abort|at_exit|autoload[?]?|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|exit!|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|print|printf|proc|putc|puts|rand|readline|readlines|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)(\\\\b|(?<=[?!]))(?![?!])\", \"name\": \"support.function.kernel.ruby\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"variable.other.constant.ruby\" }, { \"begin\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) )\\n\\\\s*(\\\\()\\n\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"comment\": \"the method pattern comes from the symbol pattern, see there for a explaination\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?=[&*_a-zA-Z])\", \"end\": \"(?=[,)])\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\" }, { \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }], \"repository\": { \"braces\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] } } }, { \"begin\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) )\\n[ \\\\t]\\n(?=[ \\\\t]*[^\\\\s#;])\\n\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \"same as the previous rule, but without parentheses around the arguments\", \"end\": \"$\", \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?![\\\\s,])\", \"end\": \"(?=,|$)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\", \"name\": \"variable.parameter.function.ruby\" }, { \"include\": \"$self\" }] }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"3\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \" the optional name is just to catch the def also without a method-name\", \"match\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\b\\n( \\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) ) )?\\n\", \"name\": \"meta.function.method.without-arguments.ruby\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(?=\\\\.\\\\d|[eE])(\\\\.\\\\d(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?r?i?\\\\b\", \"name\": \"constant.numeric.float.ruby\" }, { \"match\": \"\\\\b(0|(0[dD]\\\\d|[1-9])(?>_?\\\\d)*)r?i?\\\\b\", \"name\": \"constant.numeric.integer.ruby\" }, { \"match\": \"\\\\b0[xX]\\\\h(?>_?\\\\h)*r?i?\\\\b\", \"name\": \"constant.numeric.hex.ruby\" }, { \"match\": \"\\\\b0[bB][01](?>_?[01])*r?i?\\\\b\", \"name\": \"constant.numeric.binary.ruby\" }, { \"match\": \"\\\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\\\b\", \"name\": \"constant.numeric.octal.ruby\" }, { \"begin\": \":'\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": \"'\", \"name\": \"constant.other.symbol.single-quoted.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\['\\\\\\\\]\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": ':\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": '\"', \"name\": \"constant.other.symbol.double-quoted.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"comment\": \"Needs higher precedence than regular expressions.\", \"match\": \"(?<!\\\\()/=\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"single quoted string (does not allow interpolation)\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.single.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\'|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"double quoted string (allows for interpolation)\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.double.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"execute string (allows for interpolation)\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"include\": \"#percent_literals\" }, { \"begin\": \"(?x)\\n(?:\\n^\\n| (?<=\\n[=>~(?:\\\\[,|&;]\\n| [\\\\s;]if\\\\s\\n| [\\\\s;]elsif\\\\s\\n| [\\\\s;]while\\\\s\\n| [\\\\s;]unless\\\\s\\n| [\\\\s;]when\\\\s\\n| [\\\\s;]assert_match\\\\s\\n| [\\\\s;]or\\\\s\\n| [\\\\s;]and\\\\s\\n| [\\\\s;]not\\\\s\\n| [\\\\s.]index\\\\s\\n| [\\\\s.]scan\\\\s\\n| [\\\\s.]sub\\\\s\\n| [\\\\s.]sub!\\\\s\\n| [\\\\s.]gsub\\\\s\\n| [\\\\s.]gsub!\\\\s\\n| [\\\\s.]match\\\\s\\n)\\n| (?<=\\n^when\\\\s\\n| ^if\\\\s\\n| ^elsif\\\\s\\n| ^while\\\\s\\n| ^unless\\\\s\\n)\\n)\\n\\\\s*((/))(?![*+{}?])\\n\", \"captures\": { \"1\": { \"name\": \"string.regexp.classic.ruby\" }, \"2\": { \"name\": \"punctuation.definition.string.ruby\" } }, \"comment\": \"regular expressions (normal)\\n\t\t\twe only start a regexp if the character before it (excluding whitespace)\\n\t\t\tis what we think is before a regexp\\n\t\t\t\", \"contentName\": \"string.regexp.classic.ruby\", \"end\": \"((/[eimnosux]*))\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?![>=]))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?|(@@?|\\\\$)[a-zA-Z_]\\\\w*)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"^=begin\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"multiline comments\", \"end\": \"^=end\", \"name\": \"comment.block.documentation.ruby\" }, { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.ruby\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.ruby\" }] }, { \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2nd alternation = octal):\\n\t\t\t?\\\\0      ?\\\\07     ?\\\\017\\n\\n\t\t\texamples (3rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (4th alternation = meta-ctrl):\\n\t\t\t?\\\\C-a    ?\\\\M-a    ?\\\\C-\\\\M-\\\\C-\\\\M-a\\n\\n\t\t\texamples (4th alternation = normal):\\n\t\t\t?a       ?A       ?0 \\n\t\t\t?*       ?\"       ?( \\n\t\t\t?.       ?#\\n\t\t\t\\n\t\t\t\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t', \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|0[0-7]{0,2}(?![0-7])\\\\b|[^x0MC])|(\\\\\\\\[MC]-)+\\\\w|[^\\\\s\\\\\\\\])\", \"name\": \"constant.numeric.ruby\" }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded html\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.html\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.html.basic\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded xml\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.xml\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.xml\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.xml\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded sql\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.sql\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.sql\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.sql\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded css\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.css\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.css\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.css\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c++\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c++\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c++\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c++\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded jQuery javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js.jquery\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js.jquery\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js.jquery\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded shell\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.shell\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.shell\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.shell\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded lua\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.lua\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.lua\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.lua\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded ruby\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.ruby\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.ruby\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": \"(?>=\\\\s*<<(\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"^\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?><<[-~](\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"heredoc with indented terminator\", \"end\": \"\\\\s*\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?<=\\\\{|do|\\\\{\\\\s|do\\\\s)(\\\\|)\", \"captures\": { \"1\": { \"name\": \"punctuation.separator.arguments.ruby\" } }, \"end\": \"(?<!\\\\|)(\\\\|)(?!\\\\|)\", \"patterns\": [{ \"include\": \"$self\" }, { \"match\": \"[_a-zA-Z][_a-zA-Z0-9]*\", \"name\": \"variable.other.block.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.variable.ruby\" }] }, { \"match\": \"=>\", \"name\": \"punctuation.separator.key-value\" }, { \"match\": \"->\", \"name\": \"support.function.kernel.lambda.ruby\" }, { \"match\": \"<<=|%=|&{1,2}=|\\\\*=|\\\\*\\\\*=|\\\\+=|-=|\\\\^=|\\\\|{1,2}=|<<\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"match\": \"<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\\\t])\\\\?\", \"name\": \"keyword.operator.comparison.ruby\" }, { \"match\": \"(?<!\\\\.)\\\\b(and|not|or)\\\\b(?![?!])\", \"name\": \"keyword.operator.logical.ruby\" }, { \"comment\": \"Make sure this goes after assignment and comparison\", \"match\": \"(?<=^|[ \\\\t])!|&&|\\\\|\\\\||\\\\^\", \"name\": \"keyword.operator.logical.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Safe navigation operator - Added in 2.3\", \"match\": \"(&\\\\.)\\\\s*(?![A-Z])\" }, { \"match\": \"(%|&|\\\\*\\\\*|\\\\*|\\\\+|-|/)\", \"name\": \"keyword.operator.arithmetic.ruby\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.ruby\" }, { \"match\": \"\\\\||~|>>\", \"name\": \"keyword.operator.other.ruby\" }, { \"match\": \";\", \"name\": \"punctuation.separator.statement.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.object.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace.ruby\" } }, \"comment\": \"Mark as namespace separator if double colons followed by capital letter\", \"match\": \"(::)\\\\s*(?=[A-Z])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Mark as method separator if double colons not followed by capital letter\", \"match\": \"(\\\\.|::)\\\\s*(?![A-Z])\" }, { \"comment\": \"Must come after method and constant separators to prefer double colons\", \"match\": \":\", \"name\": \"punctuation.separator.other.ruby\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.section.scope.begin.ruby\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.section.scope.end.ruby\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.section.array.begin.ruby\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.section.array.end.ruby\" }, { \"match\": \"\\\\(|\\\\)\", \"name\": \"punctuation.section.function.ruby\" }], \"repository\": { \"escaped_char\": { \"match\": \"\\\\\\\\(?:[0-7]{1,3}|x[\\\\da-fA-F]{1,2}|.)\", \"name\": \"constant.character.escape.ruby\" }, \"heredoc\": { \"begin\": \"^<<[-~]?\\\\w+\", \"end\": \"$\", \"patterns\": [{ \"include\": \"$self\" }] }, \"interpolated_ruby\": { \"patterns\": [{ \"begin\": \"#\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.ruby\" }, \"1\": { \"name\": \"source.ruby\" } }, \"name\": \"meta.embedded.line.ruby\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }, { \"include\": \"$self\" }], \"repository\": { \"nest_curly_and_self\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }] }, { \"include\": \"$self\" }] } } }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }] }, \"percent_literals\": { \"patterns\": [{ \"begin\": \"%i(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"constant.other.symbol.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%I(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"constant.other.symbol.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%q(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%Q?(?:([(\\\\[{<])|([^\\\\w\\\\s=]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%r(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"([)\\\\]}>]\\\\2|\\\\1\\\\2)[eimnosux]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.regexp.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#regex_sub\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%s(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.end.ruby\" } }, \"name\": \"constant.other.symbol.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%w(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"string.other.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"string.other.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%W(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"string.other.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%x(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }] }, \"regex_sub\": { \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.quantifier.begin.ruby\" }, \"3\": { \"name\": \"punctuation.definition.quantifier.end.ruby\" } }, \"match\": \"(\\\\{)\\\\d+(,\\\\d+)?(\\\\})\", \"name\": \"keyword.operator.quantifier.ruby\" }, { \"begin\": \"\\\\[\\\\^?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.begin.ruby\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.end.ruby\" } }, \"name\": \"constant.other.character-class.set.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\\\\?#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.ruby\" } }, \"name\": \"comment.line.number-sign.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.ruby\" } }, \"end\": \"\\\\)\", \"name\": \"meta.group.regexp.ruby\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"begin\": \"(?<=^|\\\\s)(#)\\\\s(?=[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.\", \"end\": \"$\\\\n?\", \"name\": \"comment.line.number-sign.ruby\" }] } }, \"scopeName\": \"source.ruby\", \"embeddedLangs\": [\"html\", \"xml\", \"sql\", \"css\", \"c\", \"javascript\", \"shellscript\", \"lua\"], \"aliases\": [\"rb\"] });\nvar ruby = [\n  ...html,\n  ...xml,\n  ...sql,\n  ...css,\n  ...c,\n  ...javascript,\n  ...shellscript,\n  ...lua,\n  lang\n];\n\nexport { ruby as default };\n","import java from './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"XML\", \"name\": \"xml\", \"patterns\": [{ \"begin\": \"(<\\\\?)\\\\s*([-_a-zA-Z0-9]+)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.xml\" } }, \"end\": \"(\\\\?>)\", \"name\": \"meta.tag.preprocessor.xml\", \"patterns\": [{ \"match\": \" ([a-zA-Z-]+)\", \"name\": \"entity.other.attribute-name.xml\" }, { \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] }, { \"begin\": \"(<!)(DOCTYPE)\\\\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"keyword.other.doctype.xml\" }, \"3\": { \"name\": \"variable.language.documentroot.xml\" } }, \"end\": \"\\\\s*(>)\", \"name\": \"meta.tag.sgml.doctype.xml\", \"patterns\": [{ \"include\": \"#internalSubset\" }] }, { \"include\": \"#comments\" }, { \"begin\": \"(<)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(?=(\\\\s[^>]*)?></\\\\2>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.xml\" }, \"3\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"4\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"5\": { \"name\": \"entity.name.tag.localname.xml\" } }, \"end\": \"(>)(</)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"punctuation.definition.tag.xml\" }, \"3\": { \"name\": \"entity.name.tag.xml\" }, \"4\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"5\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"6\": { \"name\": \"entity.name.tag.localname.xml\" }, \"7\": { \"name\": \"punctuation.definition.tag.xml\" } }, \"name\": \"meta.tag.no-content.xml\", \"patterns\": [{ \"include\": \"#tagStuff\" }] }, { \"begin\": \"(</?)(?:([-\\\\w\\\\.]+)((:)))?([-\\\\w\\\\.:]+)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"3\": { \"name\": \"entity.name.tag.xml\" }, \"4\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"5\": { \"name\": \"entity.name.tag.localname.xml\" } }, \"end\": \"(/?>)\", \"name\": \"meta.tag.xml\", \"patterns\": [{ \"include\": \"#tagStuff\" }] }, { \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }, { \"begin\": \"<%@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.xml\" } }, \"end\": \"%>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.xml\" } }, \"name\": \"source.java-props.embedded.xml\", \"patterns\": [{ \"match\": \"page|include|taglib\", \"name\": \"keyword.other.page-props.xml\" }] }, { \"begin\": \"<%[!=]?(?!--)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.xml\" } }, \"end\": \"(?!--)%>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.xml\" } }, \"name\": \"source.java.embedded.xml\", \"patterns\": [{ \"include\": \"source.java\" }] }, { \"begin\": \"<!\\\\[CDATA\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": \"]]>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.unquoted.cdata.xml\" }], \"repository\": { \"EntityDecl\": { \"begin\": \"(<!)(ENTITY)\\\\s+(%\\\\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\\\\s+(?:SYSTEM|PUBLIC)\\\\s+)?\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"keyword.other.entity.xml\" }, \"3\": { \"name\": \"punctuation.definition.entity.xml\" }, \"4\": { \"name\": \"variable.language.entity.xml\" }, \"5\": { \"name\": \"keyword.other.entitytype.xml\" } }, \"end\": \"(>)\", \"patterns\": [{ \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] }, \"bare-ampersand\": { \"match\": \"&\", \"name\": \"invalid.illegal.bad-ampersand.xml\" }, \"comments\": { \"patterns\": [{ \"begin\": \"<%--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.xml\" }, \"end\": \"--%>\", \"name\": \"comment.block.xml\" } }, { \"begin\": \"<!--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.xml\" } }, \"end\": \"-->\", \"name\": \"comment.block.xml\", \"patterns\": [{ \"begin\": \"--(?!>)\", \"captures\": { \"0\": { \"name\": \"invalid.illegal.bad-comments-or-CDATA.xml\" } } }] }] }, \"doublequotedString\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.quoted.double.xml\", \"patterns\": [{ \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }] }, \"entity\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" }, \"3\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"match\": \"(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.xml\" }, \"internalSubset\": { \"begin\": \"(\\\\[)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"end\": \"(\\\\])\", \"name\": \"meta.internalsubset.xml\", \"patterns\": [{ \"include\": \"#EntityDecl\" }, { \"include\": \"#parameterEntity\" }, { \"include\": \"#comments\" }] }, \"parameterEntity\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" }, \"3\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"match\": \"(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)\", \"name\": \"constant.character.parameter-entity.xml\" }, \"singlequotedString\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.quoted.single.xml\", \"patterns\": [{ \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }] }, \"tagStuff\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.namespace.xml\" }, \"2\": { \"name\": \"entity.other.attribute-name.xml\" }, \"3\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"4\": { \"name\": \"entity.other.attribute-name.localname.xml\" } }, \"match\": \"(?:^|\\\\s+)(?:([-\\\\w.]+)((:)))?([-\\\\w.:]+)\\\\s*=\" }, { \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] } }, \"scopeName\": \"text.xml\", \"embeddedLangs\": [\"java\"] });\nvar xml = [\n  ...java,\n  lang\n];\n\nexport { xml as default };\n"],"names":[],"sourceRoot":""}