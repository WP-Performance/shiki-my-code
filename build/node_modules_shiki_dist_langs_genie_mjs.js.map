{"version":3,"file":"node_modules_shiki_dist_langs_genie_mjs.js","mappings":";;;;;;;;;;;;;AAAA,6BAA6B,6EAA6E,oBAAoB,mBAAmB,UAAU,eAAe,wBAAwB,IAAI,yBAAyB,IAAI,uBAAuB,IAAI,wBAAwB,IAAI,qBAAqB,IAAI,yBAAyB,IAAI,yBAAyB,GAAG,gBAAgB,eAAe,cAAc,OAAO,iDAAiD,2DAA2D,IAAI,gCAAgC,IAAI,+BAA+B,GAAG,uBAAuB,eAAe,+BAA+B,OAAO,iDAAiD,+CAA+C,IAAI,cAAc,OAAO,0CAA0C,SAAS,iDAAiD,gCAAgC,GAAG,iBAAiB,eAAe,oJAAoJ,IAAI,4EAA4E,GAAG,iBAAiB,eAAe,sFAAsF,GAAG,gBAAgB,eAAe,8kBAA8kB,IAAI,oNAAoN,IAAI,6DAA6D,GAAG,eAAe,eAAe,mEAAmE,IAAI,qFAAqF,4DAA4D,IAAI,8DAA8D,IAAI,mGAAmG,GAAG,IAAI,8EAA8E,4DAA4D,GAAG,IAAI,8EAA8E,4DAA4D,GAAG,IAAI,uCAAuC,0CAA0C,GAAG,aAAa,eAAe,mOAAmO,IAAI,gEAAgE,GAAG,iBAAiB,eAAe,+DAA+D,KAAK,+BAA+B;AACh5G;AACA;AACA;;AAE4B","sources":["webpack://shiki-my-code/./node_modules/shiki/dist/langs/genie.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Genie\", \"fileTypes\": [\"gs\"], \"name\": \"genie\", \"patterns\": [{ \"include\": \"#code\" }], \"repository\": { \"code\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#keywords\" }, { \"include\": \"#types\" }, { \"include\": \"#functions\" }, { \"include\": \"#variables\" }] }, \"comments\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.vala\" } }, \"match\": \"/\\\\*\\\\*/\", \"name\": \"comment.block.empty.vala\" }, { \"include\": \"text.html.javadoc\" }, { \"include\": \"#comments-inline\" }] }, \"comments-inline\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.vala\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.vala\" }, { \"captures\": { \"1\": { \"name\": \"comment.line.double-slash.vala\" }, \"2\": { \"name\": \"punctuation.definition.comment.vala\" } }, \"match\": \"\\\\s*((//).*$\\\\n?)\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\\\\b\", \"name\": \"constant.numeric.vala\" }, { \"match\": \"\\\\b([A-Z][A-Z0-9_]+)\\\\b\", \"name\": \"variable.other.constant.vala\" }] }, \"functions\": { \"patterns\": [{ \"match\": \"(\\\\w+)(?=\\\\s*(<[\\\\s\\\\w.]+>\\\\s*)?\\\\()\", \"name\": \"entity.name.function.vala\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"(?<=^|[^@\\\\w\\\\.])(as|do|if|in|is|of|or|to|and|def|for|get|isa|new|not|out|ref|set|try|var|case|dict|else|enum|init|list|lock|null|pass|prop|self|true|uses|void|weak|when|array|async|break|class|const|event|false|final|owned|print|super|raise|while|yield|assert|delete|downto|except|extern|inline|params|public|raises|return|sealed|sizeof|static|struct|typeof|default|dynamic|ensures|finally|private|unowned|virtual|abstract|continue|delegate|internal|override|readonly|requires|volatile|construct|errordomain|interface|namespace|protected|implements)\\\\b\", \"name\": \"keyword.vala\" }, { \"match\": \"(?<=^|[^@\\\\w\\\\.])(bool|double|float|unichar|char|uchar|int|uint|long|ulong|short|ushort|size_t|ssize_t|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b\", \"name\": \"keyword.vala\" }, { \"match\": \"(#if|#elif|#else|#endif)\", \"name\": \"keyword.vala\" }] }, \"strings\": { \"patterns\": [{ \"begin\": '\"\"\"', \"end\": '\"\"\"', \"name\": \"string.quoted.triple.vala\" }, { \"begin\": '@\"', \"end\": '\"', \"name\": \"string.quoted.interpolated.vala\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.vala\" }, { \"match\": \"\\\\$\\\\w+\", \"name\": \"constant.character.escape.vala\" }, { \"match\": \"\\\\$\\\\(([^)(]|\\\\(([^)(]|\\\\([^)]*\\\\))*\\\\))*\\\\)\", \"name\": \"constant.character.escape.vala\" }] }, { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.vala\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.vala\" }] }, { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.vala\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.vala\" }] }, { \"match\": \"/((\\\\\\\\/)|([^/]))*/(?=\\\\s*[,;)\\\\.\\\\n])\", \"name\": \"string.regexp.vala\" }] }, \"types\": { \"patterns\": [{ \"match\": \"(?<=^|[^@\\\\w\\\\.])(bool|double|float|unichar|char|uchar|int|uint|long|ulong|short|ushort|size_t|ssize_t|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b\", \"name\": \"storage.type.primitive.vala\" }, { \"match\": \"\\\\b([A-Z]+\\\\w*)\\\\b\", \"name\": \"entity.name.type.vala\" }] }, \"variables\": { \"patterns\": [{ \"match\": \"\\\\b([_a-z]+\\\\w*)\\\\b\", \"name\": \"variable.other.vala\" }] } }, \"scopeName\": \"source.genie\" });\nvar genie = [\n  lang\n];\n\nexport { genie as default };\n"],"names":[],"sourceRoot":""}