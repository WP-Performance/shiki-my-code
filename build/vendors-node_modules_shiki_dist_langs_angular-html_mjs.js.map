{"version":3,"file":"vendors-node_modules_shiki_dist_langs_angular-html_mjs.js","mappings":"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","sources":["webpack://shiki-my-code/./node_modules/shiki/dist/langs/angular-expression.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/langs/angular-html.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/langs/angular-let-declaration.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/langs/angular-template-blocks.mjs","webpack://shiki-my-code/./node_modules/shiki/dist/langs/angular-template.mjs"],"sourcesContent":["const lang = Object.freeze({ \"injectionSelector\": \"L:text.html -comment\", \"name\": \"angular-expression\", \"patterns\": [{ \"include\": \"#ngExpression\" }], \"repository\": { \"arrayLiteral\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"name\": \"meta.array.literal.ts\", \"patterns\": [{ \"include\": \"#ngExpression\" }, { \"include\": \"#punctuationComma\" }] }, \"booleanLiteral\": { \"patterns\": [{ \"match\": \"(?<!\\\\.|\\\\$)\\\\btrue\\\\b(?!\\\\$)\", \"name\": \"constant.language.boolean.true.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bfalse\\\\b(?!\\\\$)\", \"name\": \"constant.language.boolean.false.ts\" }] }, \"expressionOperator\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.ts\" }, \"2\": { \"name\": \"entity.name.function.pipe.ng\" } }, \"match\": \"((?<!\\\\|)\\\\|(?!\\\\|))\\\\s?([a-zA-Z0-9\\\\-\\\\_\\\\$]*)\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\b(let)\\\\b(?!\\\\$)\", \"name\": \"storage.type.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\b(await)\\\\b(?!\\\\$)\", \"name\": \"keyword.control.flow.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bdelete\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.delete.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bin\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.in.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bof\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.of.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bif\\\\b(?!\\\\$)\", \"name\": \"keyword.control.if.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\belse\\\\b(?!\\\\$)\", \"name\": \"keyword.control.else.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bthen\\\\b(?!\\\\$)\", \"name\": \"keyword.control.then.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\binstanceof\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.instanceof.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bnew\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.new.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bvoid\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.void.ts\" }, { \"begin\": \"(?<!\\\\.|\\\\$)\\\\bas\\\\b(?!\\\\$)\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.as.ts\" } }, \"end\": `(?=$|\"|'|[;,:})\\\\]])`, \"patterns\": [{ \"include\": \"#type\" }] }, { \"match\": \"\\\\*=|(?<!\\\\()\\\\/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.ts\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.ts\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.ts\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.ts\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.ts\" }, { \"match\": \"\\\\!|&&|\\\\?\\\\?|\\\\|\\\\|\", \"name\": \"keyword.operator.logical.ts\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.ts\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.ts\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.ts\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.ts\" }, { \"match\": \"\\\\%|\\\\*|\\\\/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.arithmetic.ts\" } }, \"match\": \"(?<=[_$[:alnum:]])\\\\s*(\\\\/)(?![\\\\/*])\" }, { \"include\": \"#typeofOperator\" }] }, \"functionCall\": { \"begin\": \"(?=(\\\\??\\\\.\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\()\", \"end\": \"(?<=\\\\))(?!(\\\\??\\\\.\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\()\", \"patterns\": [{ \"match\": \"\\\\?\", \"name\": \"punctuation.accessor.ts\" }, { \"match\": \"\\\\.\", \"name\": \"punctuation.accessor.ts\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.ts\" }, { \"begin\": \"\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.begin.ts\" } }, \"end\": \"\\\\>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.end.ts\" } }, \"name\": \"meta.type.parameters.ts\", \"patterns\": [{ \"include\": \"#type\" }, { \"include\": \"#punctuationComma\" }] }, { \"include\": \"#parenExpression\" }] }, \"functionParameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ts\" } }, \"name\": \"meta.parameters.ts\", \"patterns\": [{ \"include\": \"#decorator\" }, { \"include\": \"#parameterName\" }, { \"include\": \"#variableInitializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.ts\" }] }, \"identifiers\": { \"patterns\": [{ \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\.\\\\s*prototype\\\\b(?!\\\\$))\", \"name\": \"support.class.ts\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"constant.other.object.property.ts\" }, \"3\": { \"name\": \"variable.other.object.property.ts\" } }, \"match\": \"(?x)([?!]?\\\\.)\\\\s*(?:\\n([[:upper:]][_$[:digit:][:upper:]]*)|\\n([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"entity.name.function.ts\" } }, \"match\": \"(?x)(?:([?!]?\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*((async\\\\s+)|(function\\\\s*[(<])|(function\\\\s+)|([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)|((<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)(\\\\s*:\\\\s*(.)*)?\\\\s*=>)))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"constant.other.property.ts\" } }, \"match\": \"([?!]?\\\\.)\\\\s*([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"variable.other.property.ts\" } }, \"match\": \"([?!]?\\\\.)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"captures\": { \"1\": { \"name\": \"constant.other.object.ts\" }, \"2\": { \"name\": \"variable.other.object.ts\" } }, \"match\": \"(?x)(?:\\n([[:upper:]][_$[:digit:][:upper:]]*)|\\n([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"match\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\", \"name\": \"constant.character.other\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.ts\" }] }, \"literal\": { \"name\": \"literal.ts\", \"patterns\": [{ \"include\": \"#numericLiteral\" }, { \"include\": \"#booleanLiteral\" }, { \"include\": \"#nullLiteral\" }, { \"include\": \"#undefinedLiteral\" }, { \"include\": \"#numericConstantLiteral\" }, { \"include\": \"#arrayLiteral\" }, { \"include\": \"#thisLiteral\" }] }, \"ngExpression\": { \"name\": \"meta.expression.ng\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#literal\" }, { \"include\": \"#ternaryExpression\" }, { \"include\": \"#expressionOperator\" }, { \"include\": \"#functionCall\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#parenExpression\" }, { \"include\": \"#punctuationComma\" }, { \"include\": \"#punctuationAccessor\" }] }, \"nullLiteral\": { \"match\": \"(?<!\\\\.|\\\\$)\\\\bnull\\\\b(?!\\\\$)\", \"name\": \"constant.language.null.ts\" }, \"numericConstantLiteral\": { \"patterns\": [{ \"match\": \"(?<!\\\\.|\\\\$)\\\\bNaN\\\\b(?!\\\\$)\", \"name\": \"constant.language.nan.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bInfinity\\\\b(?!\\\\$)\", \"name\": \"constant.language.infinity.ts\" }] }, \"numericLiteral\": { \"patterns\": [{ \"match\": \"\\\\b(?<!\\\\$)0(x|X)[0-9a-fA-F]+\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.hex.ts\" }, { \"match\": \"\\\\b(?<!\\\\$)0(b|B)[01]+\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.binary.ts\" }, { \"match\": \"\\\\\\\\b(?<!\\\\$)0(o|O)?[0-7]+\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.octal.ts\" }, { \"captures\": { \"0\": { \"name\": \"constant.numeric.decimal.ts\" }, \"1\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"2\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"3\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"4\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"5\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"6\": { \"name\": \"meta.delimiter.decimal.period.ts\" } }, \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n(?:\\\\b[0-9]+(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)|#1.1E+3\\n(?:\\\\b[0-9]+(\\\\.)[eE][+-]?[0-9]+\\\\b)|#1.E+3\\n(?:\\\\B(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)|#.1E+3\\n(?:\\\\b[0-9]+[eE][+-]?[0-9]+\\\\b)|#1E+3(?:\\\\b[0-9]+(\\\\.)[0-9]+\\\\b)|#1.1\\n(?:\\\\b[0-9]+(\\\\.)\\\\B)|#1.\\n(?:\\\\B(\\\\.)[0-9]+\\\\b)|#.1\\n(?:\\\\b[0-9]+\\\\b(?!\\\\.))#1\\n)(?!\\\\$)\" }] }, \"parameterName\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"keyword.operator.rest.ts\" }, \"4\": { \"name\": \"entity.name.function.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:\\\\s*\\\\b(readonly)\\\\s+)?(?:\\\\s*\\\\b(public|private|protected)\\\\s+)?(\\\\.\\\\.\\\\.)?\\\\s*(?<!=|:)([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\??)(?=\\\\s* (=\\\\s*( (async\\\\s+) | (function\\\\s*[(<]) | (function\\\\s+) | ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>) | ((<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)(\\\\s*:\\\\s*(.)*)?\\\\s*=>)) ) | (:\\\\s*( (<) | ([(]\\\\s*( ([)]) | (\\\\.\\\\.\\\\.) | ([_$[:alnum:]]+\\\\s*( ([:,?=])| ([)]\\\\s*=>) )) ))) ))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"keyword.operator.rest.ts\" }, \"4\": { \"name\": \"variable.parameter.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?:\\\\s*\\\\b(readonly)\\\\s+)?(?:\\\\s*\\\\b(public|private|protected)\\\\s+)?(\\\\.\\\\.\\\\.)?\\\\s*(?<!=|:)([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\??)\" }] }, \"parenExpression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#ngExpression\" }, { \"include\": \"#punctuationComma\" }] }, \"punctuationAccessor\": { \"match\": \"\\\\?\\\\.|\\\\!\\\\.|\\\\.\", \"name\": \"punctuation.accessor.ts\" }, \"punctuationComma\": { \"match\": \",\", \"name\": \"punctuation.separator.comma.ts\" }, \"punctuationSemicolon\": { \"match\": \";\", \"name\": \"punctuation.terminator.statement.ts\" }, \"qstringDouble\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"invalid.illegal.newline.ts\" } }, \"name\": \"string.quoted.double.ts\", \"patterns\": [{ \"include\": \"#stringCharacterEscape\" }] }, \"qstringSingle\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"invalid.illegal.newline.ts\" } }, \"name\": \"string.quoted.single.ts\", \"patterns\": [{ \"include\": \"#stringCharacterEscape\" }] }, \"string\": { \"patterns\": [{ \"include\": \"#qstringSingle\" }, { \"include\": \"#qstringDouble\" }] }, \"stringCharacterEscape\": { \"match\": \"\\\\\\\\(x\\\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.ts\" }, \"ternaryExpression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ts\" } }, \"end\": \"\\\\s*(:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ts\" } }, \"patterns\": [{ \"include\": \"#ngExpression\" }] }, \"thisLiteral\": { \"match\": \"(?<!\\\\.|\\\\$)\\\\bthis\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.ts\" }, \"type\": { \"name\": \"meta.type.ts\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#numericLiteral\" }, { \"include\": \"#typeBuiltinLiterals\" }, { \"include\": \"#typeTuple\" }, { \"include\": \"#typeObject\" }, { \"include\": \"#typeOperators\" }, { \"include\": \"#typeFnTypeParameters\" }, { \"include\": \"#typeParenOrFunctionParameters\" }, { \"include\": \"#typeName\" }] }, \"typeAnnotation\": { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": '(?=$|[,);\\\\}\\\\]]|\\\\/\\\\/|\")|(?==[^>])|(?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)', \"name\": \"meta.type.annotation.ts\", \"patterns\": [{ \"include\": \"#type\" }] }, \"typeBuiltinLiterals\": { \"match\": \"(?<!\\\\.|\\\\$)\\\\b(this|true|false|undefined|null)\\\\b(?!\\\\$)\", \"name\": \"support.type.builtin.ts\" }, \"typeFnTypeParameters\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.new.ts\" } }, \"match\": \"(?<!\\\\.|\\\\$)\\\\b(new)\\\\b(?=\\\\s*\\\\<)\", \"name\": \"meta.type.constructor.ts\" }, { \"begin\": \"(?<!\\\\.|\\\\$)\\\\b(new)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.new.ts\" } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.constructor.ts\", \"patterns\": [{ \"include\": \"#functionParameters\" }] }, { \"begin\": \"(?<=\\\\>)\\\\s*(?=\\\\()\", \"end\": \"(?<=\\\\))\", \"include\": \"#typeofOperator\", \"name\": \"meta.type.function.ts\", \"patterns\": [{ \"include\": \"#functionParameters\" }] }, { \"begin\": \"(?x)((?=[(]\\\\s*(([)])|(\\\\.\\\\.\\\\.)|([_$[:alnum:]]+\\\\s*(([:,?=])|([)]\\\\s*=>))))))\", \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.function.ts\", \"patterns\": [{ \"include\": \"#functionParameters\" }] }] }, \"typeName\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.module.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*([?!]?\\\\.)\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"entity.name.type.ts\" }] }, \"typeObject\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"meta.object.type.ts\", \"patterns\": [{ \"include\": \"#typeObjectMembers\" }] }, \"typeObjectMembers\": { \"patterns\": [{ \"include\": \"#typeAnnotation\" }, { \"include\": \"#punctuationComma\" }, { \"include\": \"#punctuationSemicolon\" }] }, \"typeOperators\": { \"patterns\": [{ \"include\": \"#typeofOperator\" }, { \"match\": \"[&|]\", \"name\": \"keyword.operator.type.ts\" }, { \"match\": \"(?<!\\\\.|\\\\$)\\\\bkeyof\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.keyof.ts\" }] }, \"typeParenOrFunctionParameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"name\": \"meta.type.paren.cover.ts\", \"patterns\": [{ \"include\": \"#type\" }, { \"include\": \"#functionParameters\" }] }, \"typeTuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"name\": \"meta.type.tuple.ts\", \"patterns\": [{ \"include\": \"#type\" }, { \"include\": \"#punctuationComma\" }] }, \"typeofOperator\": { \"match\": \"(?<!\\\\.|\\\\$)\\\\btypeof\\\\b(?!\\\\$)\", \"name\": \"keyword.operator.expression.typeof.ts\" }, \"undefinedLiteral\": { \"match\": \"(?<!\\\\.|\\\\$)\\\\bundefined\\\\b(?!\\\\$)\", \"name\": \"constant.language.undefined.ts\" }, \"variableInitializer\": { \"begin\": \"(?<!=|!)(=)(?!=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ts\" } }, \"end\": \"(?=$|[,);}\\\\]])\", \"patterns\": [{ \"include\": \"#ngExpression\" }] } }, \"scopeName\": \"expression.ng\" });\nvar angular_expression = [\n  lang\n];\n\nexport { angular_expression as default };\n","import html from './html.mjs';\nimport angular_expression from './angular-expression.mjs';\nimport angular_let_declaration from './angular-let-declaration.mjs';\nimport angular_template from './angular-template.mjs';\nimport angular_template_blocks from './angular-template-blocks.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Angular HTML\", \"injections\": { \"R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)\": { \"comment\": \"Uses R: to ensure this matches after any other injections.\", \"patterns\": [{ \"match\": \"<\", \"name\": \"invalid.illegal.bad-angle-bracket.html\" }] } }, \"name\": \"angular-html\", \"patterns\": [{ \"include\": \"text.html.basic#core-minus-invalid\" }, { \"begin\": \"(</?)(\\\\w[^\\\\s>]*)(?<!/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"((?: ?/)?>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.unrecognized.html.derivative\", \"patterns\": [{ \"include\": \"text.html.basic#attribute\" }] }], \"scopeName\": \"text.html.derivative.ng\", \"embeddedLangs\": [\"html\", \"angular-expression\", \"angular-let-declaration\", \"angular-template\", \"angular-template-blocks\"] });\nvar angular_html = [\n  ...html,\n  ...angular_expression,\n  ...angular_let_declaration,\n  ...angular_template,\n  ...angular_template_blocks,\n  lang\n];\n\nexport { angular_html as default };\n","import angular_expression from './angular-expression.mjs';\n\nconst lang = Object.freeze({ \"injectTo\": [\"text.html.derivative\", \"text.html.derivative.ng\", \"source.ts.ng\"], \"injectionSelector\": \"L:text.html -comment -expression.ng -meta.tag -source.css -source.js\", \"name\": \"angular-let-declaration\", \"patterns\": [{ \"include\": \"#letDeclaration\" }], \"repository\": { \"letDeclaration\": { \"begin\": \"(@let)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)?\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.ng\" }, \"2\": { \"name\": \"meta.definition.variable.ng\" }, \"3\": { \"name\": \"keyword.operator.assignment.ng\" } }, \"contentName\": \"meta.definition.variable.ng\", \"end\": \"(?<=;)\", \"patterns\": [{ \"include\": \"#letInitializer\" }] }, \"letInitializer\": { \"begin\": \"\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.assignment.ng\" } }, \"contentName\": \"meta.definition.variable.initializer.ng\", \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ng\" } }, \"patterns\": [{ \"include\": \"expression.ng\" }] } }, \"scopeName\": \"template.let.ng\", \"embeddedLangs\": [\"angular-expression\"] });\nvar angular_let_declaration = [\n  ...angular_expression,\n  lang\n];\n\nexport { angular_let_declaration as default };\n","import angular_expression from './angular-expression.mjs';\nimport angular_template from './angular-template.mjs';\n\nconst lang = Object.freeze({ \"injectTo\": [\"text.html.derivative\", \"text.html.derivative.ng\", \"source.ts.ng\"], \"injectionSelector\": \"L:text.html -comment -expression.ng -meta.tag -source.css -source.js\", \"name\": \"angular-template-blocks\", \"patterns\": [{ \"include\": \"#block\" }], \"repository\": { \"block\": { \"begin\": \"(@)(if|else if|else|defer|placeholder|loading|error|switch|case|default|for|empty)(?:\\\\s*)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.block.kind.ng\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"control.block.ng\", \"patterns\": [{ \"include\": \"#blockExpression\" }, { \"include\": \"#blockBody\" }] }, \"blockBody\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"contentName\": \"control.block.body.ng\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"patterns\": [{ \"include\": \"text.html.derivative.ng\" }, { \"include\": \"template.ng\" }] }, \"blockExpression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"contentName\": \"control.block.expression.ng\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"expression.ng\" }] }, \"transition\": { \"match\": \"@\", \"name\": \"keyword.control.block.transition.ng\" } }, \"scopeName\": \"template.blocks.ng\", \"embeddedLangs\": [\"angular-expression\", \"angular-template\"] });\nvar angular_template_blocks = [\n  ...angular_expression,\n  ...angular_template,\n  lang\n];\n\nexport { angular_template_blocks as default };\n","import angular_expression from './angular-expression.mjs';\n\nconst lang = Object.freeze({ \"injectTo\": [\"text.html.derivative\", \"text.html.derivative.ng\", \"source.ts.ng\"], \"injectionSelector\": \"L:text.html -comment\", \"name\": \"angular-template\", \"patterns\": [{ \"include\": \"#interpolation\" }], \"repository\": { \"interpolation\": { \"begin\": \"{{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"contentName\": \"expression.ng\", \"end\": \"}}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"patterns\": [{ \"include\": \"expression.ng\" }] } }, \"scopeName\": \"template.ng\", \"embeddedLangs\": [\"angular-expression\"] });\nvar angular_template = [\n  ...angular_expression,\n  lang\n];\n\nexport { angular_template as default };\n"],"names":[],"sourceRoot":""}